
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['cbeta'] = []
data['jpred'] = []
data['probe'] = [(' B 901  GLN HE21', ' B 905  ARG  HE ', -0.708, (184.32, 170.24, 140.594)), (' A 391  CYS  HA ', ' A 525  CYS  HB3', -0.706, (185.108, 157.602, 221.509)), (' A 901  GLN HE21', ' A 905  ARG  HE ', -0.661, (174.316, 197.312, 140.671)), (' A 403  ARG HH12', ' B 372  ALA  HB1', -0.652, (202.827, 185.647, 242.545)), (' B1142  GLN HE22', ' C1145  LEU  HB2', -0.634, (189.556, 190.007, 102.566)), (' C  81  ASN HD21', ' C 242  LEU HD12', -0.631, (197.775, 242.394, 221.654)), (' A 372  ALA  HB1', ' C 403  ARG HH12', -0.631, (178.196, 173.657, 242.357)), (' B 299  THR HG22', ' B 315  THR HG21', -0.628, (211.697, 172.15, 186.289)), (' C 319  ARG  HD3', ' C 592  PHE  HB3', -0.628, (173.119, 212.727, 195.936)), (' C 625  HIS  HD2', ' C 628  GLN  HB2', -0.608, (176.685, 222.593, 199.998)), (' C 391  CYS  HA ', ' C 525  CYS  HB3', -0.598, (161.896, 203.203, 222.011)), (' C  65  PHE  O  ', ' C 264  ALA  N  ', -0.588, (197.962, 242.386, 211.926)), (' A 210  ILE HG13', ' A 212  LEU  H  ', -0.582, (130.952, 177.623, 202.148)), (' A  65  PHE  O  ', ' A 264  ALA  N  ', -0.569, (132.93, 169.005, 211.5)), (' C 125  ASN  ND2', ' C 172  SER  O  ', -0.566, (215.967, 228.067, 226.277)), (' B 122  ASN  OD1', ' B 125  ASN  N  ', -0.562, (213.903, 140.542, 226.353)), (' C 795  LYS  HD2', ' C 796  ASP  HB2', -0.558, (218.312, 197.852, 135.497)), (' A 420  ASP  OD2', ' A 460  ASN  ND2', -0.543, (207.93, 182.191, 228.262)), (' C 319  ARG  NH1', ' C 320  VAL  O  ', -0.541, (172.129, 214.616, 199.832)), (' B 143  VAL  HB ', ' B 245  HIS  HA ', -0.532, (229.945, 138.821, 226.372)), (' A1138  TYR  OH ', ' A1144  GLU  OE2', -0.531, (176.304, 180.47, 105.829)), (' B 142  GLY  HA3', ' B 156  GLU  HB2', -0.531, (228.272, 141.915, 231.52)), (' C 447  GLY  N  ', ' C 498  GLN  OE1', -0.528, (173.055, 179.641, 256.577)), (' B 310  LYS  HG3', ' B 600  PRO  HA ', -0.527, (213.406, 166.905, 175.399)), (' A 567  ARG  HD2', ' B  42  VAL HG11', -0.526, (192.661, 159.904, 205.2)), (' B 795  LYS  HD2', ' B 796  ASP  HB2', -0.524, (181.6, 154.124, 136.115)), (' C 916  LEU HD12', ' C 923  ILE HD13', -0.518, (200.659, 202.65, 134.301)), (' A 332  ILE HG22', ' A 362  VAL HG23', -0.516, (183.618, 151.161, 227.767)), (' A 630  THR HG22', ' A 632  THR  H  ', -0.513, (152.319, 164.361, 195.199)), (' B 128  ILE HD12', ' B 170  TYR  HD2', -0.512, (208.856, 151.324, 225.947)), (' B 916  LEU HD12', ' B 923  ILE HD13', -0.509, (193.218, 167.37, 134.349)), (' C 310  LYS  HG3', ' C 600  PRO  HA ', -0.507, (191.218, 219.899, 175.483)), (' B 129  LYS  HG2', ' B 169  GLU  HG3', -0.507, (211.131, 152.436, 233.957)), (' B 642  VAL HG22', ' B 651  ILE HG12', -0.503, (226.812, 178.005, 183.019)), (' C 139  PRO  HB3', ' C 159  VAL  HA ', -0.501, (197.985, 238.616, 231.324)), (' C 321  GLN  H  ', ' C 625  HIS  HB3', -0.5, (173.718, 219.013, 199.821)), (' B 332  ILE HG22', ' B 362  VAL HG23', -0.498, (219.772, 201.969, 227.54)), (' C 128  ILE HD12', ' C 170  TYR  HD2', -0.494, (207.429, 223.743, 226.157)), (' C 630  THR HG22', ' C 632  THR  H  ', -0.493, (185.208, 228.502, 195.289)), (' C 332  ILE HG22', ' C 362  VAL HG23', -0.493, (157.6, 207.766, 227.803)), (' A 844  ILE HD11', ' C 556  ASN  H  ', -0.489, (150.937, 206.611, 198.603)), (' C 833  PHE  HB3', ' C 860  VAL HG12', -0.488, (211.244, 191.207, 178.623)), (' B 599  THR HG22', ' B 608  VAL HG12', -0.482, (215.516, 168.118, 182.31)), (' A 366  SER  O  ', ' A 370  ASN  HB2', -0.48, (177.303, 166.757, 233.651)), (' B  81  ASN HD22', ' B 240  THR HG23', -0.477, (227.704, 152.008, 220.473)), (' A 128  ILE HD12', ' A 170  TYR  HD2', -0.475, (145.346, 185.967, 225.751)), (' C 245  HIS  HD2', ' C 246  ARG  HG2', -0.474, (204.439, 253.282, 225.789)), (' C 210  ILE HG12', ' C 212  LEU  H  ', -0.471, (207.452, 239.981, 202.205)), (' C 631  PRO  HA ', ' C 634  ARG  HG2', -0.47, (180.912, 229.826, 194.486)), (' A 129  LYS  NZ ', ' A 131  CYS  SG ', -0.469, (144.274, 178.926, 236.303)), (' B 245  HIS  HD2', ' B 246  ARG  HG2', -0.469, (235.975, 138.771, 226.137)), (' A 599  THR HG22', ' A 608  VAL HG12', -0.468, (156.4, 171.718, 182.275)), (' B  89  GLY  HA3', ' B 270  LEU HD12', -0.467, (215.309, 163.373, 213.449)), (' C  89  GLY  HA3', ' C 270  LEU HD12', -0.459, (193.394, 223.019, 213.544)), (' B 630  THR HG22', ' B 632  THR  H  ', -0.458, (223.885, 168.183, 195.379)), (' C 111  ASP  HB3', ' C 113  LYS  HG3', -0.457, (186.414, 230.76, 236.255)), (' A  99  ASN  HB3', ' A 102  ARG  NH2', -0.455, (129.577, 180.9, 221.32)), (' C  29  THR HG22', ' C  30  ASN  H  ', -0.455, (195.364, 237.904, 201.742)), (' A 916  LEU HD12', ' A 923  ILE HD13', -0.453, (166.688, 190.994, 134.402)), (' B  36  VAL HG11', ' B 220  PHE  CZ ', -0.453, (210.903, 155.649, 200.317)), (' B 567  ARG  HD2', ' C  42  VAL HG11', -0.451, (207.624, 205.438, 205.547)), (' B 619  GLU  O  ', ' B 623  ALA  N  ', -0.451, (224.903, 185.633, 191.636)), (' B 837  TYR  O  ', ' B 854  LYS  NZ ', -0.45, (176.219, 156.9, 189.059)), (' B 403  ARG HH12', ' C 372  ALA  HB1', -0.448, (179.672, 201.136, 242.865)), (' A  29  THR HG22', ' A  30  ASN  H  ', -0.446, (138.686, 168.677, 201.633)), (' C 619  GLU  O  ', ' C 623  ALA  N  ', -0.442, (169.345, 220.641, 191.575)), (' C  99  ASN  O  ', ' C 102  ARG  NH2', -0.441, (209.45, 240.444, 221.554)), (' C 420  ASP  OD2', ' C 460  ASN  ND2', -0.439, (172.203, 170.726, 228.247)), (' B 941  THR  OG1', ' B 942  ALA  N  ', -0.437, (202.261, 161.486, 163.375)), (' B1015  ALA  HA ', ' B1018  ILE HG22', -0.434, (184.307, 178.038, 173.318)), (' A 428  ASP  N  ', ' A 428  ASP  OD1', -0.432, (199.047, 173.938, 218.627)), (' B 808  ASP  HA ', ' B 809  PRO  HD3', -0.432, (182.173, 151.614, 152.004)), (' C 726  ILE HG13', ' C1061  VAL HG22', -0.431, (201.315, 200.816, 160.799)), (' C 319  ARG  O  ', ' C 625  HIS  ND1', -0.43, (175.85, 218.231, 198.152)), (' C 444  LYS  HG3', ' C 447  GLY  HA3', -0.429, (171.069, 180.946, 258.013)), (' C 599  THR HG22', ' C 608  VAL HG12', -0.423, (189.098, 221.108, 182.455)), (' B 319  ARG HH22', ' C 740  MET  HG3', -0.421, (210.666, 187.8, 197.454)), (' C 294  ASP  N  ', ' C 294  ASP  OD1', -0.421, (189.333, 223.329, 192.084)), (' A  81  ASN HD22', ' A 240  THR HG23', -0.42, (136.492, 169.672, 220.502)), (' B 211  ASN  HB2', ' B 212  LEU HD12', -0.419, (221.58, 142.757, 198.569)), (' C  68  ILE  HA ', ' C  68  ILE HD12', -0.418, (201.018, 251.016, 213.331)), (' B 592  PHE  HZ ', ' C 855  PHE  HA ', -0.417, (213.136, 191.638, 193.597)), (' C 318  PHE  HD2', ' C 595  VAL HG23', -0.413, (177.632, 216.12, 189.762)), (' A 855  PHE  HA ', ' C 592  PHE  HZ ', -0.411, (169.865, 207.342, 193.667)), (' B 210  ILE HG12', ' B 212  LEU  H  ', -0.411, (222.988, 142.826, 201.742)), (' A  33  THR  O  ', ' A  34  ARG  NE ', -0.409, (142.507, 177.547, 201.835)), (' C  53  ASP  HB2', ' C  55  PHE  CE2', -0.409, (195.873, 217.2, 205.567)), (' C 808  ASP  HA ', ' C 809  PRO  HD3', -0.408, (220.06, 200.433, 151.929)), (' A 294  ASP  N  ', ' A 294  ASP  OD1', -0.408, (154.344, 170.921, 192.101)), (' B 295  PRO  O  ', ' B 299  THR HG23', -0.407, (213.559, 170.28, 187.564)), (' B  33  THR  O  ', ' B  34  ARG  NE ', -0.405, (217.331, 153.219, 201.983)), (' A 642  VAL HG22', ' A 651  ILE HG12', -0.405, (159.019, 156.712, 183.176)), (' B  53  ASP  HB2', ' B  55  PHE  CE2', -0.404, (208.563, 164.421, 205.954)), (' C 642  VAL HG22', ' C 651  ILE HG12', -0.402, (174.897, 225.998, 183.208)), (' C 603  ASN HD21', ' C1306  NAG  C7 ', -0.401, (202.004, 219.082, 177.798)), (' A 808  ASP  HA ', ' A 809  PRO  HD3', -0.401, (158.766, 208.801, 151.944)), (' A 498  GLN  NE2', ' A 501  ASN  OD1', -0.4, (198.461, 184.187, 253.14))]
data['smoc'] = [('A', 34, u'ARG', 0.6350114481780574, (144.95000000000002, 176.8, 203.45000000000002)), ('A', 42, u'VAL', 0.678818321517106, (156.995, 194.792, 206.977)), ('A', 50, u'SER', 0.6639864370480556, (160.661, 183.517, 199.037)), ('A', 53, u'ASP', 0.5656164501572387, (158.55700000000002, 178.74299999999997, 207.654)), ('A', 80, u'ASP', 0.6420736298049835, (133.333, 163.83200000000002, 219.622)), ('A', 91, u'TYR', 0.6447336079323842, (146.08200000000002, 174.51299999999998, 211.37800000000001)), ('A', 93, u'ALA', 0.6848566337489851, (139.4, 175.76899999999998, 211.024)), ('A', 98, u'SER', 0.7518489758295506, (125.56700000000001, 180.094, 216.52800000000002)), ('A', 111, u'ASP', 0.6461629300886541, (147.086, 165.503, 234.836)), ('A', 117, u'LEU', 0.6743151260703153, (147.253, 176.26899999999998, 228.92100000000002)), ('A', 123, u'ALA', 0.696022938772381, (130.683, 185.526, 224.016)), ('A', 141, u'LEU', 0.7358264874683479, (131.046, 173.86800000000002, 228.95600000000002)), ('A', 154, u'GLU', 0.6448395648354003, (124.85499999999999, 180.636, 230.871)), ('A', 156, u'GLU', 0.7436772309008666, (128.91899999999998, 176.42100000000002, 234.725)), ('A', 161, u'SER', 0.7615047665518229, (138.585, 170.57299999999998, 239.254)), ('A', 169, u'GLU', 0.6754207120887251, (146.88800000000003, 185.283, 233.04899999999998)), ('A', 173, u'GLN', 0.6904658758270622, (137.71599999999998, 191.084, 223.883)), ('A', 186, u'PHE', 0.7172377160445415, (127.269, 179.02800000000002, 207.14399999999998)), ('A', 187, u'LYS', 0.7229686068118215, (128.8, 182.46, 206.561)), ('A', 197, u'ILE', 0.6587447431304483, (158.593, 178.484, 219.376)), ('A', 211, u'ASN', 0.6000925247932057, (129.99200000000002, 180.186, 200.14299999999997)), ('A', 215, u'ASP', 0.6846014965752139, (133.656, 171.77399999999997, 201.46)), ('A', 216, u'LEU', 0.7180300311919127, (136.53, 174.224, 201.97299999999998)), ('A', 223, u'LEU', 0.6773846420204561, (146.011, 185.19299999999998, 207.82500000000002)), ('A', 245, u'HIS', 0.7139423320466721, (123.43400000000001, 171.742, 226.195)), ('A', 265, u'TYR', 0.7093686792730737, (135.984, 171.702, 212.654)), ('A', 268, u'GLY', 0.6289379737941313, (145.80800000000002, 170.134, 209.64899999999997)), ('A', 270, u'LEU', 0.5763522770894925, (152.22, 172.359, 209.678)), ('A', 285, u'ILE', 0.689579733019584, (149.312, 188.44, 199.467)), ('A', 295, u'PRO', 0.5840895372647579, (157.895, 169.54399999999998, 189.228)), ('A', 303, u'LEU', 0.6313015610263567, (162.82200000000003, 180.80800000000002, 187.899)), ('A', 315, u'THR', 0.5846667746424299, (165.266, 173.012, 188.189)), ('A', 330, u'PRO', 0.7417240924127942, (183.72299999999998, 149.272, 220.315)), ('A', 346, u'ARG', 0.6610412396235352, (197.189, 165.271, 247.474)), ('A', 347, u'PHE', 0.7315368282718031, (198.184, 166.65800000000002, 244.097)), ('A', 353, u'TRP', 0.7385967324678495, (203.5, 167.721, 237.393)), ('A', 369, u'TYR', 0.6790586858389811, (180.57899999999998, 169.721, 233.85600000000002)), ('A', 373, u'SER', 0.7745060825182488, (182.612, 172.39200000000002, 242.311)), ('A', 383, u'SER', 0.5932779858673072, (182.627, 171.636, 222.45700000000002)), ('A', 414, u'GLN', 0.7135718217820937, (200.45100000000002, 182.77399999999997, 227.89700000000002)), ('A', 415, u'THR', 0.7142033464301812, (203.262, 184.54299999999998, 229.72299999999998)), ('A', 423, u'TYR', 0.6316492959181397, (203.983, 174.071, 232.505)), ('A', 431, u'GLY', 0.6435031282371413, (191.539, 169.138, 225.24499999999998)), ('A', 432, u'CYS', 0.6242695005606096, (189.974, 170.684, 228.318)), ('A', 444, u'LYS', 0.7473389303368759, (195.859, 175.038, 257.454)), ('A', 460, u'ASN', 0.7532808680160745, (211.648, 179.289, 228.26299999999998)), ('A', 476, u'GLY', 0.7034754624345949, (225.489, 187.41899999999998, 238.20499999999998)), ('A', 479, u'PRO', 0.7174329730643484, (230.572, 180.923, 238.478)), ('A', 484, u'GLU', 0.6865593074346702, (224.446, 179.622, 247.592)), ('A', 486, u'PHE', 0.741803559530636, (225.476, 186.655, 246.531)), ('A', 493, u'GLN', 0.779958350683886, (210.30100000000002, 178.417, 246.068)), ('A', 497, u'PHE', 0.7436580213553213, (198.876, 178.71499999999997, 251.859)), ('A', 503, u'VAL', 0.6439024549878608, (191.363, 184.946, 246.798)), ('A', 516, u'GLU', 0.664827968657843, (193.42100000000002, 163.212, 219.681)), ('A', 525, u'CYS', 0.6118796819467136, (184.597, 156.627, 224.43200000000002)), ('A', 548, u'GLY', 0.6667778038342719, (177.983, 160.79399999999998, 207.667)), ('A', 586, u'ASP', 0.7522990898822902, (183.436, 151.137, 201.45000000000002)), ('A', 609, u'ALA', 0.6719294029705036, (157.563, 165.634, 181.257)), ('A', 614, u'ASP', 0.6376572958858083, (171.757, 159.82800000000003, 183.171)), ('A', 627, u'ASP', 0.5883962227928665, (158.16299999999998, 156.14399999999998, 199.85800000000003)), ('A', 631, u'PRO', 0.6633938391383096, (152.27599999999998, 161.39200000000002, 195.63299999999998)), ('A', 636, u'TYR', 0.6333147738099739, (156.677, 160.80800000000002, 187.708)), ('A', 661, u'GLU', 0.6325183974905908, (162.11399999999998, 168.77399999999997, 162.77299999999997)), ('A', 671, u'CYS', 0.6529044146803245, (163.466, 166.004, 170.712)), ('A', 741, u'TYR', 0.5673677587432268, (176.712, 201.14499999999998, 195.678)), ('A', 749, u'CYS', 0.5638426633077345, (181.73399999999998, 202.995, 205.583)), ('A', 773, u'GLU', 0.4360922613540599, (184.231, 201.071, 172.16)), ('A', 776, u'LYS', 0.49755710385059493, (183.627, 203.045, 167.736)), ('A', 816, u'SER', 0.5546683023844156, (161.74299999999997, 204.666, 155.92100000000002)), ('A', 837, u'TYR', 0.46853898516314685, (165.88500000000002, 209.416, 186.38800000000003)), ('A', 843, u'ASP', 0.5415376420423755, (157.105, 207.694, 195.154)), ('A', 847, u'ARG', 0.5344209893035191, (158.555, 202.08800000000002, 192.07399999999998)), ('A', 853, u'GLN', 0.5661732087310524, (168.964, 201.23499999999999, 189.909)), ('A', 858, u'LEU', 0.5622435449963956, (173.80700000000002, 202.74499999999998, 188.474)), ('A', 877, u'LEU', 0.5855146558407512, (174.448, 204.80100000000002, 151.376)), ('A', 882, u'ILE', 0.5761480717811573, (170.98700000000002, 203.24599999999998, 143.45800000000003)), ('A', 889, u'GLY', 0.6030654722373471, (182.85700000000003, 203.148, 147.18800000000002)), ('A', 890, u'ALA', 0.5383340864853353, (186.086, 203.524, 145.198)), ('A', 895, u'GLN', 0.5540721333274837, (176.10299999999998, 208.112, 137.52700000000002)), ('A', 915, u'VAL', 0.5918006023424949, (168.845, 188.072, 129.38800000000003)), ('A', 923, u'ILE', 0.6145946681559272, (162.599, 190.92100000000002, 136.69299999999998)), ('A', 925, u'ASN', 0.6249281906450749, (157.92200000000003, 192.596, 138.96)), ('A', 940, u'SER', 0.5888533933527166, (152.903, 189.70499999999998, 160.708)), ('A', 950, u'ASP', 0.5895165218335303, (168.647, 189.187, 173.4)), ('A', 979, u'ASP', 0.5819459442496109, (170.517, 199.242, 211.14399999999998)), ('A', 990, u'GLU', 0.5391093973245985, (183.61899999999997, 197.77399999999997, 211.985)), ('A', 999, u'GLY', 0.4879733244629937, (180.425, 190.841, 199.71499999999997)), ('A', 1017, u'GLU', 0.46949516522401796, (181.638, 189.21299999999997, 171.442)), ('A', 1066, u'THR', 0.535713512814085, (170.11299999999997, 187.077, 144.635)), ('A', 1072, u'GLU', 0.6066261487145892, (165.76, 172.687, 134.755)), ('A', 1092, u'GLU', 0.5613941682569029, (182.3, 180.129, 127.117)), ('A', 1105, u'THR', 0.5891936826981056, (175.02700000000002, 177.41, 125.52)), ('A', 1138, u'TYR', 0.674198676298762, (180.161, 176.098, 110.793)), ('A', 1143, u'PRO', 0.5768840526318187, (180.866, 180.315, 102.59)), ('A', 1146, u'ASP', 0.5447850447184406, (183.259, 183.647, 98.189)), ('A', 1301, u'NAG', 0.5694412216212108, (149.64399999999998, 161.346, 203.372)), ('A', 1302, u'NAG', 0.6353941022562436, (133.782, 188.91899999999998, 232.725)), ('A', 1303, u'NAG', 0.7229947138875326, (144.02800000000002, 194.85500000000002, 192.58200000000002)), ('A', 1304, u'NAG', 0.7163295180160498, (178.786, 141.256, 220.835)), ('A', 1305, u'NAG', 0.6501206992804562, (184.007, 159.66299999999998, 241.62800000000001)), ('A', 1306, u'NAG', 0.5375713670776502, (154.36200000000002, 182.05700000000002, 178.553)), ('A', 1308, u'NAG', 0.7064727159729383, (155.023, 153.67399999999998, 169.108)), ('A', 1309, u'NAG', 0.6782995393894298, (182.97299999999998, 160.16299999999998, 128.23899999999998)), ('A', 1311, u'NAG', 0.6062551706282805, (149.79399999999998, 171.499, 241.36800000000002)), ('B', 27, u'ALA', 0.669988471414336, (234.377, 156.4, 207.445)), ('B', 34, u'ARG', 0.658547656203652, (216.805, 155.653, 203.43800000000002)), ('B', 40, u'ASP', 0.6096004767306584, (200.21399999999997, 159.607, 209.161)), ('B', 53, u'ASP', 0.5486851022687642, (208.336, 166.52200000000002, 207.61299999999997)), ('B', 62, u'VAL', 0.6514297508628512, (226.05100000000002, 158.42700000000002, 206.87)), ('B', 84, u'LEU', 0.6508806015220089, (226.843, 161.411, 219.097)), ('B', 108, u'THR', 0.6890538079424454, (221.572, 166.23999999999998, 227.917)), ('B', 111, u'ASP', 0.666308763402557, (225.178, 163.265, 235.168)), ('B', 115, u'GLN', 0.6806156431707917, (216.559, 163.446, 233.61299999999997)), ('B', 121, u'ASN', 0.7360734925701696, (216.68, 144.847, 225.254)), ('B', 135, u'PHE', 0.7666746027051388, (225.70299999999997, 156.596, 233.92800000000003)), ('B', 141, u'LEU', 0.7366581528039028, (226.227, 145.137, 228.914)), ('B', 154, u'GLU', 0.7055895262761187, (223.506, 136.16, 230.815)), ('B', 172, u'SER', 0.7452019160381843, (207.399, 144.93800000000002, 226.2)), ('B', 187, u'LYS', 0.6873087952532405, (220.15200000000002, 138.79899999999998, 206.548)), ('B', 197, u'ILE', 0.6591737200569088, (208.537, 166.52800000000002, 219.27499999999998)), ('B', 211, u'ASN', 0.5436768243735262, (221.39000000000001, 140.98100000000002, 200.01299999999998)), ('B', 220, u'PHE', 0.5911305312574693, (212.757, 151.35200000000003, 198.347)), ('B', 223, u'LEU', 0.6556294209557992, (209.096, 152.409, 207.86200000000002)), ('B', 240, u'THR', 0.6491655294059642, (224.377, 153.282, 221.74899999999997)), ('B', 245, u'HIS', 0.7032850406423127, (231.94899999999998, 139.598, 226.27899999999997)), ('B', 248, u'TYR', 0.693311630484258, (235.73399999999998, 145.88800000000003, 231.228)), ('B', 251, u'PRO', 0.6854342737313027, (236.732, 154.01299999999998, 235.19299999999998)), ('B', 265, u'TYR', 0.6146250356310644, (226.018, 150.577, 212.601)), ('B', 270, u'LEU', 0.5254739871734302, (217.068, 164.201, 209.702)), ('B', 294, u'ASP', 0.6014516546410096, (218.463, 168.33, 191.88700000000003)), ('B', 295, u'PRO', 0.5942700164960539, (216.722, 170.54399999999998, 189.222)), ('B', 314, u'GLN', 0.5980966234430217, (209.531, 177.425, 184.98700000000002)), ('B', 330, u'PRO', 0.7553556499060139, (221.35700000000003, 203.06, 220.305)), ('B', 347, u'PHE', 0.7204832210415607, (199.075, 206.77599999999998, 244.17899999999997)), ('B', 361, u'CYS', 0.6871540706452574, (216.803, 204.39800000000002, 229.16299999999998)), ('B', 369, u'TYR', 0.6392036256493405, (205.161, 190.20499999999998, 233.80800000000002)), ('B', 383, u'SER', 0.5968462751430076, (202.389, 190.946, 222.45700000000002)), ('B', 398, u'ASP', 0.6746087602565488, (199.576, 206.67899999999997, 234.13)), ('B', 405, u'ASP', 0.6652228266008767, (185.21399999999997, 195.58100000000002, 240.39000000000001)), ('B', 415, u'THR', 0.6657274522023985, (180.99800000000002, 202.32500000000002, 229.71299999999997)), ('B', 423, u'TYR', 0.7062511274591469, (189.72299999999998, 208.20399999999998, 232.51299999999998)), ('B', 444, u'LYS', 0.7405654276451014, (193.06, 200.727, 257.343)), ('B', 451, u'TYR', 0.7778727114043827, (190.577, 208.593, 247.42800000000003)), ('B', 465, u'GLU', 0.7196107508678716, (191.312, 213.924, 229.108)), ('B', 469, u'SER', 0.7426821879236599, (187.399, 221.20499999999998, 238.597)), ('B', 477, u'SER', 0.6845320905100505, (166.054, 223.429, 235.985)), ('B', 483, u'VAL', 0.6877709277498014, (176.566, 226.484, 247.629)), ('B', 493, u'GLN', 0.7571018745826561, (182.76, 211.546, 246.108)), ('B', 517, u'LEU', 0.6589275768777944, (206.164, 201.78, 217.646)), ('B', 518, u'LEU', 0.6711071008377636, (208.524, 201.798, 214.66899999999998)), ('B', 548, u'GLY', 0.6414148138568068, (214.2, 192.252, 207.66299999999998)), ('B', 564, u'GLN', 0.6707382352004794, (214.30200000000002, 207.538, 211.02700000000002)), ('B', 582, u'LEU', 0.715854572363161, (224.025, 208.95000000000002, 211.86800000000002)), ('B', 590, u'CYS', 0.656676236900427, (219.161, 189.635, 198.318)), ('B', 613, u'GLN', 0.6438717860894749, (216.547, 184.19, 183.568)), ('B', 623, u'ALA', 0.47988816323682176, (223.01, 185.32200000000003, 192.51)), ('B', 624, u'ILE', 0.42183874827879425, (222.478, 181.95700000000002, 194.22899999999998)), ('B', 625, u'HIS', 0.48967329817015454, (223.55, 180.814, 197.69)), ('B', 636, u'TYR', 0.5633822473316125, (224.76399999999998, 173.622, 187.71399999999997)), ('B', 667, u'GLY', 0.6267976307381107, (214.32800000000003, 183.045, 173.701)), ('B', 695, u'TYR', 0.6402991417048861, (222.286, 177.227, 168.79299999999998)), ('B', 725, u'GLU', 0.5412793581784261, (193.441, 171.26399999999998, 157.77899999999997)), ('B', 733, u'LYS', 0.5627062859040791, (179.16, 170.51, 177.94)), ('B', 773, u'GLU', 0.4654310308899268, (176.168, 177.572, 172.171)), ('B', 829, u'ALA', 0.45486868581479645, (191.093, 161.181, 178.626)), ('B', 833, u'PHE', 0.3131727512173155, (178.454, 161.14899999999997, 179.876)), ('B', 847, u'ARG', 0.566292756533834, (188.567, 155.525, 192.493)), ('B', 871, u'ALA', 0.5827867101677463, (178.65, 161.555, 159.476)), ('B', 872, u'GLN', 0.5476685378224123, (175.29, 161.58800000000002, 157.627)), ('B', 887, u'THR', 0.517550961019578, (175.189, 174.226, 142.007)), ('B', 905, u'ARG', 0.5389120506872036, (187.68200000000002, 174.26899999999998, 137.702)), ('B', 923, u'ILE', 0.5962773311513673, (195.811, 163.924, 136.69299999999998)), ('B', 927, u'PHE', 0.6089785026142699, (195.06, 162.51, 142.74299999999997)), ('B', 945, u'LEU', 0.5832702100876823, (195.24899999999997, 165.88400000000001, 165.791)), ('B', 966, u'LEU', 0.5366249757062157, (187.997, 170.49200000000002, 198.11299999999997)), ('B', 979, u'ASP', 0.5733683687005797, (184.67, 166.596, 211.136)), ('B', 985, u'ASP', 0.5667921447877233, (178.21499999999997, 173.086, 218.318)), ('B', 989, u'ALA', 0.5563459277015561, (180.842, 175.85100000000003, 213.965)), ('B', 990, u'GLU', 0.49171446342376024, (179.433, 178.813, 211.974)), ('B', 1005, u'GLN', 0.5316774172274448, (183.77399999999997, 181.262, 190.251)), ('B', 1022, u'ALA', 0.4374341534293061, (183.67499999999998, 177.346, 164.61299999999997)), ('B', 1072, u'GLU', 0.6134984285769728, (209.95700000000002, 175.77599999999998, 134.765)), ('B', 1073, u'LYS', 0.578568215196698, (211.93200000000002, 177.10899999999998, 131.792)), ('B', 1106, u'GLN', 0.5773075155093235, (199.172, 181.262, 128.655)), ('B', 1301, u'NAG', 0.5467018109789441, (226.207, 164.39000000000001, 199.75)), ('B', 1302, u'NAG', 0.6570067885098575, (215.5, 137.69899999999998, 231.483)), ('B', 1303, u'NAG', 0.7119164852840751, (201.617, 145.935, 192.576)), ('B', 1304, u'NAG', 0.7208030608074141, (229.60899999999998, 203.259, 218.591)), ('B', 1305, u'NAG', 0.6404292389661455, (212.122, 197.823, 241.418)), ('C', 37, u'TYR', 0.6824685754482663, (202.73, 220.73399999999998, 206.738)), ('C', 42, u'VAL', 0.68431174895149, (208.70499999999998, 209.099, 207.002)), ('C', 52, u'GLN', 0.5920281394809155, (193.4, 213.305, 204.75)), ('C', 53, u'ASP', 0.5953969157606898, (194.072, 215.76, 207.627)), ('C', 58, u'PHE', 0.7032445715006195, (193.30800000000002, 227.32500000000002, 199.446)), ('C', 62, u'VAL', 0.6447825439896846, (192.43, 235.14299999999997, 206.842)), ('C', 84, u'LEU', 0.6719342288522493, (189.26899999999998, 234.33100000000002, 219.034)), ('C', 86, u'PHE', 0.6471944105074965, (189.672, 227.61899999999997, 218.518)), ('C', 88, u'ASP', 0.6473467470308694, (189.258, 222.52200000000002, 215.137)), ('C', 98, u'SER', 0.7278793223029218, (211.753, 243.529, 216.555)), ('C', 101, u'ILE', 0.6243635439454734, (204.759, 238.76, 219.29899999999998)), ('C', 111, u'ASP', 0.6551569590682482, (188.446, 231.98800000000003, 235.08)), ('C', 117, u'LEU', 0.6798319692938958, (197.535, 226.829, 228.93200000000002)), ('C', 154, u'GLU', 0.7581101555090214, (212.995, 244.509, 231.54)), ('C', 157, u'PHE', 0.7685793311411354, (203.961, 240.198, 233.77899999999997)), ('C', 161, u'SER', 0.7350204471157343, (198.91899999999998, 236.771, 239.18800000000002)), ('C', 163, u'ALA', 0.7295745485586951, (199.316, 230.478, 239.186)), ('C', 169, u'GLU', 0.6692100392711552, (205.617, 222.48100000000002, 233.08100000000002)), ('C', 197, u'ILE', 0.6565657517916413, (193.762, 215.91, 219.41299999999998)), ('C', 211, u'ASN', 0.6070876612459174, (209.73399999999998, 239.82700000000003, 200.138)), ('C', 216, u'LEU', 0.6832516689375393, (201.224, 237.177, 201.978)), ('C', 220, u'PHE', 0.580890832241616, (204.918, 226.971, 198.34)), ('C', 241, u'LEU', 0.6618542080991084, (199.97899999999998, 238.105, 224.015)), ('C', 245, u'HIS', 0.714287802474881, (205.567, 249.65800000000002, 226.24299999999997)), ('C', 248, u'TYR', 0.6658826282242662, (198.256, 249.853, 231.10299999999998)), ('C', 270, u'LEU', 0.571305749715282, (191.69299999999998, 224.41899999999998, 209.671)), ('C', 285, u'ILE', 0.6512181822394029, (207.071, 218.916, 199.459)), ('C', 290, u'ASP', 0.664934660111815, (193.343, 220.975, 197.207)), ('C', 295, u'PRO', 0.5161041873961212, (186.417, 220.818, 189.277)), ('C', 299, u'THR', 0.6122206400217465, (189.95200000000003, 215.94899999999998, 188.157)), ('C', 308, u'VAL', 0.6476154932748169, (195.532, 216.695, 182.394)), ('C', 314, u'GLN', 0.6058371204123774, (184.042, 211.33800000000002, 185.08200000000002)), ('C', 334, u'ASN', 0.7078047457418292, (155.39800000000002, 208.305, 232.27299999999997)), ('C', 346, u'ARG', 0.6618240731715543, (162.569, 188.823, 247.536)), ('C', 369, u'TYR', 0.6324875761442124, (175.207, 201.142, 233.795)), ('C', 391, u'CYS', 0.6427725043060547, (162.791, 202.253, 220.666)), ('C', 398, u'ASP', 0.698051843088226, (163.635, 188.039, 234.111)), ('C', 406, u'GLU', 0.7165626856061514, (177.869, 180.32700000000003, 237.74899999999997)), ('C', 415, u'THR', 0.6923275019378554, (176.787, 174.14499999999998, 229.67499999999998)), ('C', 423, u'TYR', 0.7430762596694268, (167.295, 178.74499999999998, 232.507)), ('C', 427, u'ASP', 0.6616813070236028, (171.804, 181.547, 220.407)), ('C', 431, u'GLY', 0.5995260334739377, (169.266, 192.008, 225.23399999999998)), ('C', 438, u'SER', 0.7940288326960833, (173.594, 190.29299999999998, 247.29)), ('C', 444, u'LYS', 0.7021980813711065, (172.238, 185.26, 257.43699999999995)), ('C', 454, u'ARG', 0.7683875717369583, (166.947, 171.929, 240.016)), ('C', 477, u'SER', 0.7258396954597884, (165.754, 150.731, 236.192)), ('C', 479, u'PRO', 0.6944357590968842, (159.76299999999998, 152.47299999999998, 238.647)), ('C', 516, u'GLU', 0.657024899778667, (163.29, 193.38700000000003, 219.712)), ('C', 525, u'CYS', 0.6305268361257246, (161.79899999999998, 204.164, 224.494)), ('C', 546, u'LEU', 0.6011222557957755, (165.74699999999999, 204.292, 212.65200000000002)), ('C', 565, u'PHE', 0.6843297255650678, (157.899, 200.333, 207.989)), ('C', 571, u'ASP', 0.5468160206316907, (165.836, 195.78, 201.447)), ('C', 590, u'CYS', 0.6926948851514609, (168.44899999999998, 213.534, 198.17399999999998)), ('C', 601, u'GLY', 0.6198940938679285, (195.16899999999998, 220.29399999999998, 177.725)), ('C', 611, u'LEU', 0.6708348286850784, (178.334, 218.45000000000002, 182.507)), ('C', 623, u'ALA', 0.4321698232587174, (170.55, 219.142, 192.42700000000002)), ('C', 624, u'ILE', 0.4819158909016162, (173.657, 220.329, 194.29299999999998)), ('C', 625, u'HIS', 0.46177222436327575, (173.798, 221.592, 197.87)), ('C', 636, u'TYR', 0.5737842579493703, (179.73, 226.39700000000002, 187.71699999999998)), ('C', 641, u'ASN', 0.6681857419667789, (176.67899999999997, 229.72, 179.531)), ('C', 653, u'ALA', 0.6547583348318597, (180.531, 226.60899999999998, 177.18200000000002)), ('C', 667, u'GLY', 0.6552768203195488, (176.72899999999998, 212.70299999999997, 173.71699999999998)), ('C', 695, u'TYR', 0.6415864883978153, (177.79899999999998, 222.463, 168.758)), ('C', 708, u'SER', 0.6284455197884196, (169.318, 210.476, 134.496)), ('C', 749, u'CYS', 0.5721152783929602, (203.416, 183.504, 205.533)), ('C', 770, u'ILE', 0.5382340938981116, (199.48000000000002, 183.698, 177.14399999999998)), ('C', 773, u'GLU', 0.4664288037439043, (200.445, 182.41899999999998, 172.278)), ('C', 816, u'SER', 0.5079781351680036, (214.945, 200.04399999999998, 155.92100000000002)), ('C', 819, u'GLU', 0.5053346782553293, (211.33800000000002, 200.92700000000002, 159.42700000000002)), ('C', 831, u'ALA', 0.29751953044348284, (209.555, 197.137, 181.46)), ('C', 833, u'PHE', 0.3188230090341975, (213.646, 191.865, 179.098)), ('C', 837, u'TYR', 0.4492944532954281, (217.228, 194.268, 185.70399999999998)), ('C', 847, u'ARG', 0.5482523312083745, (213.974, 204.157, 192.433)), ('C', 904, u'TYR', 0.481664637062604, (198.842, 192.39700000000002, 134.485)), ('C', 916, u'LEU', 0.5542636527185709, (199.88600000000002, 201.151, 131.67299999999997)), ('C', 950, u'ASP', 0.5833976373977582, (198.026, 201.76, 173.40800000000002)), ('C', 955, u'ASN', 0.5889407046427032, (200.345, 196.798, 180.095)), ('C', 962, u'LEU', 0.5247122600409543, (199.54399999999998, 195.589, 190.859)), ('C', 975, u'SER', 0.5588853166596381, (200.208, 196.599, 205.296)), ('C', 979, u'ASP', 0.5939636644370205, (205.915, 195.23899999999998, 211.06)), ('C', 990, u'GLU', 0.5322257107887305, (197.86700000000002, 184.511, 211.98600000000002)), ('C', 997, u'ILE', 0.5343011186625147, (196.977, 186.976, 202.05700000000002)), ('C', 1005, u'GLN', 0.488904519798731, (193.483, 187.105, 190.256)), ('C', 1006, u'THR', 0.5306092757361618, (192.135, 190.40200000000002, 188.85000000000002)), ('C', 1010, u'GLN', 0.5432008692835286, (192.164, 191.061, 182.52700000000002)), ('C', 1031, u'GLU', 0.5138460651669464, (195.606, 188.23999999999998, 150.44899999999998)), ('C', 1040, u'VAL', 0.5362580273852685, (186.07299999999998, 195.875, 148.429)), ('C', 1042, u'PHE', 0.5202463543399356, (190.07899999999998, 195.026, 152.377)), ('C', 1066, u'THR', 0.5459745383546848, (195.534, 201.57399999999998, 144.646)), ('C', 1070, u'ALA', 0.6455297681469129, (190.23899999999998, 211.192, 138.597)), ('C', 1072, u'GLU', 0.5690387435646337, (185.227, 212.538, 134.768)), ('C', 1073, u'LYS', 0.601986960376921, (183.141, 213.48600000000002, 131.732)), ('C', 1080, u'ALA', 0.6300802442364295, (171.839, 198.32800000000003, 122.7)), ('C', 1095, u'PHE', 0.5806252489542215, (178.095, 202.518, 124.1)), ('C', 1104, u'VAL', 0.6096132189167747, (182.315, 201.782, 122.569)), ('C', 1107, u'ARG', 0.6011215994542992, (184.126, 201.556, 131.848)), ('C', 1111, u'GLU', 0.6323405911536811, (189.225, 205.29899999999998, 125.252)), ('C', 1301, u'NAG', 0.5518174951180017, (184.62800000000001, 233.094, 200.708)), ('C', 1303, u'NAG', 0.7192744643264282, (215.206, 220.271, 192.593)), ('C', 1304, u'NAG', 0.7223806230200711, (151.553, 216.916, 220.598)), ('C', 1305, u'NAG', 0.7095670744425354, (164.971, 203.342, 241.42100000000002)), ('C', 1306, u'NAG', 0.5468855905839, (203.309, 217.304, 179.691)), ('C', 1307, u'NAG', 0.6942714206239784, (164.98200000000003, 218.01, 179.415)), ('C', 1309, u'NAG', 0.652401750273962, (165.80700000000002, 203.923, 128.248)), ('C', 1311, u'NAG', 0.6343308306360758, (191.63299999999998, 226.77299999999997, 241.291))]
data['rota'] = [('A', ' 525 ', 'CYS', 0.07015732702581175, (184.59700000000007, 156.627, 224.43200000000002)), ('A', ' 738 ', 'CYS', 0.26199875064934, (181.096, 202.588, 193.571)), ('A', ' 904 ', 'TYR', 0.002926613274875732, (176.45400000000006, 194.58500000000006, 134.45)), ('B', ' 614 ', 'ASP', 0.01318213690363377, (218.013, 187.725, 183.18)), ('B', ' 738 ', 'CYS', 0.275155757246568, (176.45800000000006, 174.08100000000005, 193.55400000000003)), ('B', ' 904 ', 'TYR', 0.06458320294620802, (185.75400000000005, 174.052, 134.421)), ('B', ' 955 ', 'ASN', 0.0037808611523360005, (188.863, 170.623, 180.084)), ('C', ' 738 ', 'CYS', 0.24799435130863906, (203.472, 184.33600000000007, 193.52600000000004)), ('C', ' 904 ', 'TYR', 0.027214418273604005, (198.842, 192.397, 134.485)), ('C', ' 955 ', 'ASN', 0.0037808611523360014, (200.345, 196.798, 180.095))]
data['clusters'] = [('A', '102', 1, 'side-chain clash', (129.577, 180.9, 221.32)), ('A', '122', 1, 'Dihedral angle:CA:C', (132.417, 183.994, 227.08200000000002)), ('A', '123', 1, 'Dihedral angle:N:CA\ncablam Outlier\nsmoc Outlier', (130.683, 185.526, 224.016)), ('A', '186', 1, 'smoc Outlier', (127.269, 179.02800000000002, 207.14399999999998)), ('A', '187', 1, 'smoc Outlier', (128.8, 182.46, 206.561)), ('A', '210', 1, 'side-chain clash', (130.952, 177.623, 202.148)), ('A', '211', 1, 'smoc Outlier', (129.99200000000002, 180.186, 200.14299999999997)), ('A', '212', 1, 'side-chain clash', (130.952, 177.623, 202.148)), ('A', '213', 1, 'cablam Outlier', (127.8, 173.6, 202.3)), ('A', '214', 1, 'cablam Outlier', (130.5, 171.3, 203.6)), ('A', '215', 1, 'smoc Outlier', (133.656, 171.77399999999997, 201.46)), ('A', '216', 1, 'smoc Outlier', (136.53, 174.224, 201.97299999999998)), ('A', '29', 1, 'side-chain clash', (138.686, 168.677, 201.633)), ('A', '30', 1, 'side-chain clash', (138.686, 168.677, 201.633)), ('A', '31', 1, 'Bond angle:C', (142.863, 171.86200000000002, 201.712)), ('A', '32', 1, 'Bond angle:N:CA', (143.757, 173.21699999999998, 198.20999999999998)), ('A', '33', 1, 'side-chain clash', (142.507, 177.547, 201.835)), ('A', '34', 1, 'side-chain clash\nsmoc Outlier', (142.507, 177.547, 201.835)), ('A', '96', 1, 'Dihedral angle:CB:CG:CD:OE1', (128.983, 176.648, 212.738)), ('A', '98', 1, 'Dihedral angle:CA:C\ncablam Outlier\nsmoc Outlier', (125.56700000000001, 180.094, 216.52800000000002)), ('A', '99', 1, 'side-chain clash\nDihedral angle:N:CA', (128.71599999999998, 180.01399999999998, 218.666)), ('A', '264', 2, 'backbone clash', (132.93, 169.005, 211.5)), ('A', '265', 2, 'smoc Outlier', (135.984, 171.702, 212.654)), ('A', '268', 2, 'smoc Outlier', (145.80800000000002, 170.134, 209.64899999999997)), ('A', '270', 2, 'smoc Outlier', (152.22, 172.359, 209.678)), ('A', '65', 2, 'backbone clash', (132.93, 169.005, 211.5)), ('A', '86', 2, 'Bond angle:C\ncablam Outlier', (150.36100000000002, 169.099, 218.121)), ('A', '87', 2, 'Bond angle:N:CA', (153.80800000000002, 167.95100000000002, 216.82700000000003)), ('A', '88', 2, 'cablam Outlier', (155.1, 171.2, 215.2)), ('A', '90', 2, 'Dihedral angle:CA:C', (148.434, 173.157, 213.97299999999998)), ('A', '91', 2, 'Dihedral angle:N:CA\nsmoc Outlier', (146.08200000000002, 174.51299999999998, 211.37800000000001)), ('A', '93', 2, 'smoc Outlier', (139.4, 175.76899999999998, 211.024)), ('A', '111', 3, 'smoc Outlier', (147.086, 165.503, 234.836)), ('A', '129', 3, 'side-chain clash', (144.274, 178.926, 236.303)), ('A', '131', 3, 'side-chain clash', (144.274, 178.926, 236.303)), ('A', '1311', 3, 'smoc Outlier', (149.79399999999998, 171.499, 241.36800000000002)), ('A', '133', 3, 'Dihedral angle:CA:C', (145.071, 172.409, 236.155)), ('A', '134', 3, 'Dihedral angle:N:CA', (143.725, 168.99800000000002, 237.018)), ('A', '159', 3, 'cablam Outlier', (136.7, 171.5, 232.6)), ('A', '161', 3, 'smoc Outlier', (138.585, 170.57299999999998, 239.254)), ('A', '164', 3, 'Dihedral angle:CA:C', (146.74399999999997, 175.761, 241.38000000000002)), ('A', '165', 3, 'Dihedral angle:N:CA', (150.101, 177.35100000000003, 240.85200000000003)), ('A', '630', 4, 'side-chain clash', (150.937, 206.611, 198.603)), ('A', '632', 4, 'side-chain clash', (150.937, 206.611, 198.603)), ('A', '836', 4, 'Dihedral angle:CA:C', (162.721, 208.71399999999997, 184.45000000000002)), ('A', '837', 4, 'Dihedral angle:N:CA\nsmoc Outlier', (165.88500000000002, 209.416, 186.38800000000003)), ('A', '839', 4, 'Ramachandran\ncablam Outlier', (161.146, 212.225, 188.138)), ('A', '840', 4, 'Ramachandran\ncablam Outlier', (161.75400000000005, 209.314, 190.637)), ('A', '842', 4, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (156.228, 210.69299999999998, 193.002)), ('A', '843', 4, 'Dihedral angle:N:CA\nDihedral angle:CA:C\nsmoc Outlier', (157.105, 207.694, 195.154)), ('A', '844', 4, 'Dihedral angle:N:CA\ncablam Outlier', (154.207, 205.40800000000002, 194.236)), ('A', '847', 4, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (158.555, 202.08800000000002, 192.07399999999998)), ('A', '366', 5, 'side-chain clash', (177.303, 166.757, 233.651)), ('A', '369', 5, 'smoc Outlier', (180.57899999999998, 169.721, 233.85600000000002)), ('A', '370', 5, 'side-chain clash', (177.303, 166.757, 233.651)), ('A', '371', 5, 'Dihedral angle:CA:C', (178.607, 169.147, 238.726)), ('A', '372', 5, 'Dihedral angle:N:CA', (179.04299999999998, 172.08100000000002, 241.035)), ('A', '373', 5, 'smoc Outlier', (182.612, 172.39200000000002, 242.311)), ('A', '901', 5, 'side-chain clash', (178.196, 173.657, 242.357)), ('A', '905', 5, 'side-chain clash', (178.196, 173.657, 242.357)), ('A', '631', 6, 'smoc Outlier', (152.27599999999998, 161.39200000000002, 195.63299999999998)), ('A', '634', 6, 'Dihedral angle:CD:NE:CZ:NH1', (155.465, 159.86800000000002, 192.683)), ('A', '636', 6, 'smoc Outlier', (156.677, 160.80800000000002, 187.708)), ('A', '638', 6, 'cablam CA Geom Outlier', (157.2, 155.1, 187.0)), ('A', '640', 6, 'cablam Outlier', (153.4, 153.7, 181.2)), ('A', '642', 6, 'side-chain clash', (159.019, 156.712, 183.176)), ('A', '651', 6, 'side-chain clash', (159.019, 156.712, 183.176)), ('A', '332', 7, 'side-chain clash', (183.618, 151.161, 227.767)), ('A', '362', 7, 'side-chain clash', (183.618, 151.161, 227.767)), ('A', '391', 7, 'side-chain clash', (185.108, 157.602, 221.509)), ('A', '525', 7, 'Rotamer\nside-chain clash\nBond angle:CA:CB:SG\nsmoc Outlier', (184.597, 156.627, 224.43200000000002)), ('A', '527', 7, 'cablam Outlier', (178.1, 156.1, 226.6)), ('A', '805', 8, 'Bond length:C', (163.137, 201.51299999999998, 151.811)), ('A', '806', 8, 'Bond length:N', (163.792, 205.122, 150.971)), ('A', '808', 8, 'side-chain clash', (158.766, 208.801, 151.944)), ('A', '809', 8, 'side-chain clash', (158.766, 208.801, 151.944)), ('A', '816', 8, 'smoc Outlier', (161.74299999999997, 204.666, 155.92100000000002)), ('A', '381', 9, 'Dihedral angle:CA:C', (189.37800000000001, 171.93200000000002, 220.034)), ('A', '382', 9, 'Dihedral angle:N:CA', (185.893, 170.70999999999998, 220.82800000000003)), ('A', '383', 9, 'smoc Outlier', (182.627, 171.636, 222.45700000000002)), ('A', '431', 9, 'smoc Outlier', (191.539, 169.138, 225.24499999999998)), ('A', '432', 9, 'smoc Outlier', (189.974, 170.684, 228.318)), ('A', '599', 10, 'side-chain clash\nDihedral angle:CA:C', (157.262, 172.21599999999998, 179.476)), ('A', '600', 10, 'Dihedral angle:N:CA', (155.34, 173.947, 176.76)), ('A', '608', 10, 'side-chain clash', (156.4, 171.718, 182.275)), ('A', '609', 10, 'smoc Outlier', (157.563, 165.634, 181.257)), ('A', '1040', 11, 'Bond angle:C', (179.76399999999998, 181.778, 148.43200000000002)), ('A', '1041', 11, 'Bond angle:N:CA', (176.95000000000002, 182.453, 150.98600000000002)), ('A', '1043', 11, 'cablam Outlier', (175.6, 187.9, 151.1)), ('A', '1045', 11, 'cablam Outlier', (171.9, 182.2, 149.4)), ('A', '497', 12, 'smoc Outlier', (198.876, 178.71499999999997, 251.859)), ('A', '498', 12, 'side-chain clash', (198.461, 184.187, 253.14)), ('A', '501', 12, 'side-chain clash', (198.461, 184.187, 253.14)), ('A', '1070', 13, 'Dihedral angle:CA:C', (164.431, 177.68800000000002, 138.58800000000002)), ('A', '1071', 13, 'Dihedral angle:N:CA', (163.222, 175.242, 135.89000000000001)), ('A', '1072', 13, 'smoc Outlier', (165.76, 172.687, 134.755)), ('A', '915', 14, 'smoc Outlier', (168.845, 188.072, 129.38800000000003)), ('A', '916', 14, 'side-chain clash', (166.688, 190.994, 134.402)), ('A', '923', 14, 'side-chain clash\nsmoc Outlier', (166.688, 190.994, 134.402)), ('A', '293', 15, 'cablam Outlier', (154.2, 170.3, 195.4)), ('A', '294', 15, 'side-chain clash', (154.344, 170.921, 192.101)), ('A', '295', 15, 'smoc Outlier', (157.895, 169.54399999999998, 189.228)), ('A', '330', 16, 'smoc Outlier', (183.72299999999998, 149.272, 220.315)), ('A', '580', 16, 'Dihedral angle:CA:C', (183.515, 145.04, 216.58)), ('A', '581', 16, 'Dihedral angle:N:CA', (183.977, 142.931, 213.48700000000002)), ('A', '516', 17, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (193.42100000000002, 163.212, 219.681)), ('A', '517', 17, 'Dihedral angle:CA:C', (190.227, 163.01299999999998, 217.62800000000001)), ('A', '518', 17, 'Dihedral angle:N:CA\ncablam Outlier', (188.969, 160.971, 214.672)), ('A', '889', 18, 'smoc Outlier', (182.85700000000003, 203.148, 147.18800000000002)), ('A', '890', 18, 'smoc Outlier', (186.086, 203.524, 145.198)), ('A', '891', 18, 'cablam Outlier', (186.1, 207.3, 144.6)), ('A', '1143', 19, 'smoc Outlier', (180.866, 180.315, 102.59)), ('A', '1146', 19, 'smoc Outlier', (183.259, 183.647, 98.189)), ('A', '666', 20, 'cablam Outlier', (166.6, 166.7, 174.9)), ('A', '671', 20, 'smoc Outlier', (163.466, 166.004, 170.712)), ('A', '346', 21, 'smoc Outlier', (197.189, 165.271, 247.474)), ('A', '347', 21, 'smoc Outlier', (198.184, 166.65800000000002, 244.097)), ('A', '548', 22, 'smoc Outlier', (177.983, 160.79399999999998, 207.667)), ('A', '549', 22, 'cablam CA Geom Outlier', (175.4, 159.6, 205.2)), ('A', '128', 23, 'side-chain clash', (145.346, 185.967, 225.751)), ('A', '170', 23, 'side-chain clash', (145.346, 185.967, 225.751)), ('A', '414', 24, 'smoc Outlier', (200.45100000000002, 182.77399999999997, 227.89700000000002)), ('A', '415', 24, 'smoc Outlier', (203.262, 184.54299999999998, 229.72299999999998)), ('A', '1125', 25, 'Dihedral angle:CA:C', (193.524, 166.002, 117.338)), ('A', '1126', 25, 'Dihedral angle:N:CA', (190.62, 163.758, 118.18499999999999)), ('A', '773', 26, 'smoc Outlier', (184.231, 201.071, 172.16)), ('A', '776', 26, 'smoc Outlier', (183.627, 203.045, 167.736)), ('A', '240', 27, 'side-chain clash', (169.865, 207.342, 193.667)), ('A', '81', 27, 'side-chain clash', (169.865, 207.342, 193.667)), ('A', '420', 28, 'side-chain clash', (192.661, 159.904, 205.2)), ('A', '460', 28, 'side-chain clash\nsmoc Outlier', (192.661, 159.904, 205.2)), ('A', '738', 29, 'Rotamer', (181.096, 202.588, 193.571)), ('A', '741', 29, 'smoc Outlier', (176.712, 201.14499999999998, 195.678)), ('A', '853', 30, 'smoc Outlier', (168.964, 201.23499999999999, 189.909)), ('A', '858', 30, 'smoc Outlier', (173.80700000000002, 202.74499999999998, 188.474)), ('A', '141', 31, 'smoc Outlier', (131.046, 173.86800000000002, 228.95600000000002)), ('A', '156', 31, 'smoc Outlier', (128.91899999999998, 176.42100000000002, 234.725)), ('A', '942', 32, 'Dihedral angle:CA:C\ncablam Outlier', (156.583, 187.778, 166.539)), ('A', '943', 32, 'Dihedral angle:N:CA', (160.317, 187.19299999999998, 166.931)), ('B', '1301', 1, 'smoc Outlier', (226.207, 164.39000000000001, 199.75)), ('B', '293', 1, 'cablam CA Geom Outlier', (217.9, 166.9, 195.4)), ('B', '294', 1, 'smoc Outlier', (218.463, 168.33, 191.88700000000003)), ('B', '295', 1, 'side-chain clash\nsmoc Outlier', (213.559, 170.28, 187.564)), ('B', '299', 1, 'side-chain clash', (213.559, 170.28, 187.564)), ('B', '310', 1, 'side-chain clash\ncablam CA Geom Outlier', (213.406, 166.905, 175.399)), ('B', '314', 1, 'smoc Outlier', (209.531, 177.425, 184.98700000000002)), ('B', '315', 1, 'side-chain clash', (211.697, 172.15, 186.289)), ('B', '599', 1, 'side-chain clash\nDihedral angle:CA:C', (214.68200000000002, 168.627, 179.463)), ('B', '600', 1, 'side-chain clash\nDihedral angle:N:CA', (214.2, 166.086, 176.74499999999998)), ('B', '608', 1, 'side-chain clash', (215.516, 168.118, 182.31)), ('B', '612', 1, 'Dihedral angle:CA:C', (218.872, 181.618, 185.08200000000002)), ('B', '613', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (216.547, 184.19, 183.568)), ('B', '614', 1, 'Rotamer', (218.013, 187.725, 183.18)), ('B', '630', 1, 'side-chain clash', (223.885, 168.183, 195.379)), ('B', '632', 1, 'side-chain clash', (223.885, 168.183, 195.379)), ('B', '634', 1, 'Dihedral angle:CD:NE:CZ:NH1', (226.315, 173.315, 192.676)), ('B', '636', 1, 'cablam Outlier\nsmoc Outlier', (224.8, 173.6, 187.7)), ('B', '638', 1, 'cablam CA Geom Outlier', (229.9, 176.5, 187.3)), ('B', '642', 1, 'side-chain clash', (226.812, 178.005, 183.019)), ('B', '648', 1, 'Dihedral angle:CA:C\ncablam Outlier', (220.4, 185.207, 180.57299999999998)), ('B', '649', 1, 'Dihedral angle:N:CA', (222.991, 182.53, 181.343)), ('B', '651', 1, 'side-chain clash', (226.812, 178.005, 183.019)), ('B', '111', 2, 'smoc Outlier', (225.178, 163.265, 235.168)), ('B', '115', 2, 'smoc Outlier', (216.559, 163.446, 233.61299999999997)), ('B', '132', 2, 'Dihedral angle:CB:CG:CD:OE1', (217.844, 160.318, 236.83100000000002)), ('B', '133', 2, 'Dihedral angle:CA:C', (220.70999999999998, 157.937, 236.123)), ('B', '134', 2, 'Dihedral angle:N:CA', (224.36, 158.38000000000002, 236.98000000000002)), ('B', '135', 2, 'smoc Outlier', (225.70299999999997, 156.596, 233.92800000000003)), ('B', '141', 2, 'smoc Outlier', (226.227, 145.137, 228.914)), ('B', '142', 2, 'side-chain clash', (228.272, 141.915, 231.52)), ('B', '143', 2, 'side-chain clash', (229.945, 138.821, 226.372)), ('B', '154', 2, 'smoc Outlier', (223.506, 136.16, 230.815)), ('B', '155', 2, 'Dihedral angle:CA:C', (223.893, 139.72, 232.11599999999999)), ('B', '156', 2, 'side-chain clash\nDihedral angle:N:CA', (226.46, 141.991, 233.70499999999998)), ('B', '159', 2, 'cablam Outlier', (225.3, 150.9, 232.4)), ('B', '245', 2, 'side-chain clash\nsmoc Outlier', (235.975, 138.771, 226.137)), ('B', '246', 2, 'side-chain clash', (235.975, 138.771, 226.137)), ('B', '187', 3, 'smoc Outlier', (220.15200000000002, 138.79899999999998, 206.548)), ('B', '210', 3, 'side-chain clash', (222.988, 142.826, 201.742)), ('B', '211', 3, 'side-chain clash\nDihedral angle:CA:C\nsmoc Outlier', (221.39000000000001, 140.98100000000002, 200.01299999999998)), ('B', '212', 3, 'side-chain clash\nDihedral angle:N:CA', (224.85200000000003, 142.504, 200.365)), ('B', '213', 3, 'cablam Outlier', (228.2, 142.3, 202.2)), ('B', '214', 3, 'cablam Outlier', (228.8, 145.8, 203.6)), ('B', '121', 4, 'smoc Outlier', (216.68, 144.847, 225.254)), ('B', '122', 4, 'backbone clash', (213.903, 140.542, 226.353)), ('B', '123', 4, 'cablam CA Geom Outlier', (217.3, 138.2, 226.1)), ('B', '124', 4, 'cablam Outlier', (213.8, 138.8, 224.7)), ('B', '125', 4, 'backbone clash', (213.903, 140.542, 226.353)), ('B', '1302', 4, 'smoc Outlier', (215.5, 137.69899999999998, 231.483)), ('B', '839', 5, 'Bond angle:C\ncablam CA Geom Outlier', (178.57399999999998, 152.23999999999998, 188.316)), ('B', '840', 5, 'Bond angle:N:CA\ncablam Outlier', (180.849, 153.648, 191.12800000000001)), ('B', '843', 5, 'cablam Outlier', (183.2, 150.4, 195.0)), ('B', '846', 5, 'cablam Outlier', (185.1, 153.9, 192.2)), ('B', '847', 5, 'Dihedral angle:CD:NE:CZ:NH1\ncablam Outlier\nsmoc Outlier', (188.567, 155.525, 192.493)), ('B', '848', 5, 'Dihedral angle:CA:CB:CG:OD1', (189.026, 156.696, 188.88000000000002)), ('B', '1304', 6, 'smoc Outlier', (229.60899999999998, 203.259, 218.591)), ('B', '330', 6, 'smoc Outlier', (221.35700000000003, 203.06, 220.305)), ('B', '580', 6, 'Dihedral angle:CA:C', (225.069, 204.818, 216.64499999999998)), ('B', '581', 6, 'Dihedral angle:N:CA', (226.46, 206.58800000000002, 213.608)), ('B', '582', 6, 'smoc Outlier', (224.025, 208.95000000000002, 211.86800000000002)), ('B', '270', 7, 'side-chain clash\nsmoc Outlier', (215.309, 163.373, 213.449)), ('B', '88', 7, 'cablam Outlier', (216.6, 167.3, 215.1)), ('B', '89', 7, 'side-chain clash', (215.309, 163.373, 213.449)), ('B', '90', 7, 'Dihedral angle:CA:C', (218.296, 160.494, 213.95000000000002)), ('B', '91', 7, 'Dihedral angle:N:CA', (218.267, 157.766, 211.369)), ('B', '517', 8, 'Dihedral angle:CA:C\nsmoc Outlier', (206.164, 201.78, 217.646)), ('B', '518', 8, 'Dihedral angle:N:CA\nsmoc Outlier', (208.524, 201.798, 214.66899999999998)), ('B', '519', 8, 'cablam Outlier', (208.0, 205.2, 213.1)), ('B', '520', 8, 'cablam Outlier', (209.9, 208.1, 214.7)), ('B', '564', 8, 'smoc Outlier', (214.30200000000002, 207.538, 211.02700000000002)), ('B', '31', 9, 'Bond angle:C', (222.13899999999998, 156.056, 201.829)), ('B', '32', 9, 'Bond angle:N:CA', (220.54899999999998, 156.52, 198.333)), ('B', '33', 9, 'side-chain clash', (217.331, 153.219, 201.983)), ('B', '34', 9, 'side-chain clash\nsmoc Outlier', (217.331, 153.219, 201.983)), ('B', '62', 9, 'smoc Outlier', (226.05100000000002, 158.42700000000002, 206.87)), ('B', '1070', 10, 'Dihedral angle:CA:C', (206.32600000000002, 172.156, 138.566)), ('B', '1071', 10, 'Dihedral angle:N:CA', (209.02800000000002, 172.289, 135.854)), ('B', '1072', 10, 'smoc Outlier', (209.95700000000002, 175.77599999999998, 134.765)), ('B', '1073', 10, 'smoc Outlier', (211.93200000000002, 177.10899999999998, 131.792)), ('B', '828', 11, 'cablam Outlier', (188.8, 160.7, 175.5)), ('B', '829', 11, 'smoc Outlier', (191.093, 161.181, 178.626)), ('B', '830', 11, 'cablam Outlier', (188.6, 159.7, 181.1)), ('B', '831', 11, 'cablam CA Geom Outlier', (185.5, 161.5, 179.8)), ('B', '794', 12, 'Dihedral angle:CA:C', (181.03, 154.575, 142.947)), ('B', '795', 12, 'side-chain clash\nDihedral angle:N:CA\ncablam CA Geom Outlier', (182.38600000000002, 154.045, 139.569)), ('B', '796', 12, 'side-chain clash', (181.6, 154.124, 136.115)), ('B', '797', 12, 'cablam Outlier', (184.0, 159.4, 137.9)), ('B', '332', 13, 'side-chain clash', (219.772, 201.969, 227.54)), ('B', '336', 13, 'Bond angle:CA:CB:SG', (215.098, 203.471, 233.925)), ('B', '361', 13, 'smoc Outlier', (216.803, 204.39800000000002, 229.16299999999998)), ('B', '362', 13, 'side-chain clash', (219.772, 201.969, 227.54)), ('B', '619', 14, 'backbone clash', (224.903, 185.633, 191.636)), ('B', '623', 14, 'backbone clash\nsmoc Outlier', (224.903, 185.633, 191.636)), ('B', '624', 14, 'smoc Outlier', (222.478, 181.95700000000002, 194.22899999999998)), ('B', '625', 14, 'smoc Outlier', (223.55, 180.814, 197.69)), ('B', '941', 15, 'backbone clash', (202.261, 161.486, 163.375)), ('B', '942', 15, 'backbone clash\ncablam Outlier', (202.261, 161.486, 163.375)), ('B', '943', 15, 'cablam Outlier', (200.2, 163.4, 166.7)), ('B', '945', 15, 'smoc Outlier', (195.24899999999997, 165.88400000000001, 165.791)), ('B', '805', 16, 'Bond length:C', (186.38100000000003, 159.097, 151.795)), ('B', '806', 16, 'Bond length:N', (182.93800000000002, 157.845, 150.96800000000002)), ('B', '808', 16, 'side-chain clash\nDihedral angle:CA:C', (181.496, 152.02700000000002, 153.518)), ('B', '809', 16, 'side-chain clash\nDihedral angle:N:CA', (178.546, 150.577, 151.596)), ('B', '444', 17, 'smoc Outlier', (193.06, 200.727, 257.343)), ('B', '497', 17, 'Bond angle:C', (188.156, 201.53, 251.635)), ('B', '498', 17, 'Bond angle:N:CA', (187.754, 199.255, 254.707)), ('B', '547', 18, 'cablam Outlier', (213.5, 193.3, 211.2)), ('B', '548', 18, 'smoc Outlier', (214.2, 192.252, 207.66299999999998)), ('B', '549', 18, 'cablam CA Geom Outlier', (216.5, 190.6, 205.2)), ('B', '985', 19, 'Dihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (178.21499999999997, 173.086, 218.318)), ('B', '989', 19, 'smoc Outlier', (180.842, 175.85100000000003, 213.965)), ('B', '990', 19, 'smoc Outlier', (179.433, 178.813, 211.974)), ('B', '128', 20, 'side-chain clash', (208.856, 151.324, 225.947)), ('B', '170', 20, 'side-chain clash', (208.856, 151.324, 225.947)), ('B', '172', 20, 'smoc Outlier', (207.399, 144.93800000000002, 226.2)), ('B', '369', 21, 'smoc Outlier', (205.161, 190.20499999999998, 233.80800000000002)), ('B', '371', 21, 'Dihedral angle:CA:C', (206.666, 188.664, 238.651)), ('B', '372', 21, 'side-chain clash\nDihedral angle:N:CA', (203.903, 187.64899999999997, 241.012)), ('B', '833', 22, 'smoc Outlier', (178.454, 161.14899999999997, 179.876)), ('B', '834', 22, 'Dihedral angle:CA:C', (176.6, 157.923, 180.666)), ('B', '835', 22, 'Dihedral angle:N:CA', (177.51899999999998, 154.436, 181.74499999999998)), ('B', '1040', 23, 'Bond angle:C', (195.189, 183.374, 148.41299999999998)), ('B', '1041', 23, 'Bond angle:N:CA', (195.86100000000002, 180.57299999999998, 151.01299999999998)), ('B', '1043', 23, 'cablam Outlier', (191.8, 176.7, 151.0)), ('B', '666', 24, 'cablam Outlier', (214.8, 179.5, 174.9)), ('B', '667', 24, 'smoc Outlier', (214.32800000000003, 183.045, 173.701)), ('B', '1303', 25, 'smoc Outlier', (201.617, 145.935, 192.576)), ('B', '281', 25, 'Dihedral angle:CB:CG:CD:OE1', (197.14899999999997, 149.909, 194.26899999999998)), ('B', '220', 26, 'side-chain clash\nsmoc Outlier', (207.624, 205.438, 205.547)), ('B', '36', 26, 'side-chain clash', (207.624, 205.438, 205.547)), ('B', '1092', 27, 'Dihedral angle:CB:CG:CD:OE1\ncablam Outlier', (195.38800000000003, 186.347, 127.14999999999999)), ('B', '1106', 27, 'smoc Outlier', (199.172, 181.262, 128.655)), ('B', '129', 28, 'side-chain clash', (211.131, 152.436, 233.957)), ('B', '169', 28, 'side-chain clash', (211.131, 152.436, 233.957)), ('B', '53', 29, 'side-chain clash\nsmoc Outlier', (208.563, 164.421, 205.954)), ('B', '55', 29, 'side-chain clash', (208.563, 164.421, 205.954)), ('B', '197', 30, 'smoc Outlier', (208.537, 166.52800000000002, 219.27499999999998)), ('B', '198', 30, 'Dihedral angle:CA:CB:CG:OD1', (206.38000000000002, 168.30200000000002, 221.916)), ('B', '1125', 31, 'Dihedral angle:CA:C', (201.899, 203.159, 117.392)), ('B', '1126', 31, 'Dihedral angle:N:CA', (205.309, 201.76, 118.192)), ('B', '240', 32, 'side-chain clash\nsmoc Outlier', (227.704, 152.008, 220.473)), ('B', '81', 32, 'side-chain clash', (227.704, 152.008, 220.473)), ('B', '837', 33, 'side-chain clash', (179.672, 201.136, 242.865)), ('B', '854', 33, 'side-chain clash', (179.672, 201.136, 242.865)), ('B', '423', 34, 'smoc Outlier', (189.72299999999998, 208.20399999999998, 232.51299999999998)), ('B', '465', 34, 'smoc Outlier', (191.312, 213.924, 229.108)), ('B', '916', 35, 'side-chain clash', (193.218, 167.37, 134.349)), ('B', '923', 35, 'side-chain clash\nsmoc Outlier', (193.218, 167.37, 134.349)), ('B', '871', 36, 'smoc Outlier', (178.65, 161.555, 159.476)), ('B', '872', 36, 'smoc Outlier', (175.29, 161.58800000000002, 157.627)), ('B', '901', 37, 'side-chain clash', (184.32, 170.24, 140.594)), ('B', '905', 37, 'side-chain clash\nsmoc Outlier', (184.32, 170.24, 140.594)), ('B', '450', 38, 'cablam Outlier', (190.7, 210.7, 250.6)), ('B', '451', 38, 'smoc Outlier', (190.577, 208.593, 247.42800000000003)), ('B', '887', 39, 'smoc Outlier', (175.189, 174.226, 142.007)), ('B', '891', 39, 'cablam Outlier', (169.9, 176.1, 144.6)), ('B', '96', 40, 'Dihedral angle:CB:CG:CD:OE1', (225.07399999999998, 142.006, 212.786)), ('B', '98', 40, 'cablam Outlier', (223.5, 137.3, 216.5)), ('B', '469', 41, 'smoc Outlier', (187.399, 221.20499999999998, 238.597)), ('B', '471', 41, 'Dihedral angle:CB:CG:CD:OE1', (181.631, 223.176, 240.518)), ('C', '220', 1, 'smoc Outlier', (204.918, 226.971, 198.34)), ('C', '290', 1, 'smoc Outlier', (193.343, 220.975, 197.207)), ('C', '293', 1, 'cablam CA Geom Outlier', (189.0, 223.7, 195.4)), ('C', '294', 1, 'side-chain clash', (189.333, 223.329, 192.084)), ('C', '295', 1, 'smoc Outlier', (186.417, 220.818, 189.277)), ('C', '299', 1, 'smoc Outlier', (189.95200000000003, 215.94899999999998, 188.157)), ('C', '33', 1, 'cablam Outlier', (198.4, 228.3, 199.1)), ('C', '58', 1, 'smoc Outlier', (193.30800000000002, 227.32500000000002, 199.446)), ('C', '630', 1, 'side-chain clash', (185.208, 228.502, 195.289)), ('C', '631', 1, 'side-chain clash', (180.912, 229.826, 194.486)), ('C', '632', 1, 'side-chain clash', (185.208, 228.502, 195.289)), ('C', '634', 1, 'side-chain clash\nDihedral angle:CD:NE:CZ:NH1', (179.316, 227.835, 192.681)), ('C', '636', 1, 'cablam Outlier\nsmoc Outlier', (179.7, 226.4, 187.7)), ('C', '638', 1, 'cablam CA Geom Outlier', (174.7, 229.5, 187.3)), ('C', '319', 2, 'side-chain clash\nbackbone clash', (175.85, 218.231, 198.152)), ('C', '320', 2, 'backbone clash', (172.129, 214.616, 199.832)), ('C', '321', 2, 'side-chain clash', (173.718, 219.013, 199.821)), ('C', '590', 2, 'smoc Outlier', (168.44899999999998, 213.534, 198.17399999999998)), ('C', '619', 2, 'backbone clash', (169.345, 220.641, 191.575)), ('C', '620', 2, 'Bond angle:CA:C', (171.002, 222.132, 189.096)), ('C', '621', 2, 'Bond angle:N', (171.19899999999998, 224.359, 192.255)), ('C', '623', 2, 'backbone clash\nsmoc Outlier', (169.345, 220.641, 191.575)), ('C', '624', 2, 'smoc Outlier', (173.657, 220.329, 194.29299999999998)), ('C', '625', 2, 'side-chain clash\nDihedral angle:CA:C\nsmoc Outlier', (173.798, 221.592, 197.87)), ('C', '626', 2, 'Dihedral angle:N:CA', (173.525, 225.14499999999998, 196.617)), ('C', '627', 2, 'cablam Outlier', (175.5, 227.5, 198.8)), ('C', '628', 2, 'side-chain clash', (176.685, 222.593, 199.998)), ('C', '831', 3, 'smoc Outlier', (209.555, 197.137, 181.46)), ('C', '833', 3, 'side-chain clash\nsmoc Outlier', (211.244, 191.207, 178.623)), ('C', '834', 3, 'Dihedral angle:CA:C', (217.455, 192.251, 179.176)), ('C', '835', 3, 'Dihedral angle:N:CA\ncablam Outlier', (220.15, 192.92100000000002, 181.76)), ('C', '836', 3, 'Dihedral angle:CA:C', (218.97899999999998, 196.304, 183.07399999999998)), ('C', '837', 3, 'Dihedral angle:N:CA\nsmoc Outlier', (217.228, 194.268, 185.70399999999998)), ('C', '839', 3, 'Bond angle:C\ncablam Outlier', (221.85200000000003, 196.865, 187.99200000000002)), ('C', '840', 3, 'Ramachandran\nBond angle:N:CA\ncablam Outlier', (219.067, 197.873, 190.484)), ('C', '842', 3, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (222.69299999999998, 202.27499999999998, 192.818)), ('C', '843', 3, 'Dihedral angle:N:CA\nDihedral angle:CA:C', (219.718, 202.70499999999998, 195.137)), ('C', '844', 3, 'Dihedral angle:N:CA', (219.10299999999998, 206.39600000000002, 194.51)), ('C', '847', 3, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (213.974, 204.157, 192.433)), ('C', '860', 3, 'side-chain clash', (211.244, 191.207, 178.623)), ('C', '1311', 4, 'smoc Outlier', (191.63299999999998, 226.77299999999997, 241.291)), ('C', '133', 4, 'Dihedral angle:CA:C', (195.24099999999999, 230.611, 236.183)), ('C', '134', 4, 'Dihedral angle:N:CA', (192.864, 233.40800000000002, 236.996)), ('C', '139', 4, 'side-chain clash', (197.985, 238.616, 231.324)), ('C', '157', 4, 'smoc Outlier', (203.961, 240.198, 233.77899999999997)), ('C', '159', 4, 'side-chain clash\ncablam Outlier', (197.985, 238.616, 231.324)), ('C', '160', 4, 'cablam Outlier', (197.5, 236.0, 235.7)), ('C', '161', 4, 'cablam Outlier\nsmoc Outlier', (198.9, 236.8, 239.2)), ('C', '163', 4, 'cablam Outlier\nsmoc Outlier', (199.3, 230.5, 239.2)), ('C', '164', 4, 'Dihedral angle:CA:C', (197.346, 227.98000000000002, 241.265)), ('C', '165', 4, 'Dihedral angle:N:CA', (197.094, 224.202, 240.959)), ('C', '210', 5, 'side-chain clash', (207.452, 239.981, 202.205)), ('C', '211', 5, 'smoc Outlier', (209.73399999999998, 239.82700000000003, 200.138)), ('C', '212', 5, 'side-chain clash', (207.452, 239.981, 202.205)), ('C', '213', 5, 'cablam Outlier', (205.2, 245.0, 202.2)), ('C', '214', 5, 'cablam Outlier', (201.9, 243.7, 203.6)), ('C', '216', 5, 'smoc Outlier', (201.224, 237.177, 201.978)), ('C', '29', 5, 'side-chain clash', (195.364, 237.904, 201.742)), ('C', '30', 5, 'side-chain clash', (195.364, 237.904, 201.742)), ('C', '62', 5, 'smoc Outlier', (192.43, 235.14299999999997, 206.842)), ('C', '1306', 6, 'smoc Outlier', (203.309, 217.304, 179.691)), ('C', '308', 6, 'smoc Outlier', (195.532, 216.695, 182.394)), ('C', '310', 6, 'side-chain clash\ncablam CA Geom Outlier', (191.218, 219.899, 175.483)), ('C', '599', 6, 'side-chain clash\nDihedral angle:CA:C', (189.083, 220.198, 179.45700000000002)), ('C', '600', 6, 'side-chain clash\nDihedral angle:N:CA', (191.572, 221.03, 176.761)), ('C', '601', 6, 'smoc Outlier', (195.16899999999998, 220.29399999999998, 177.725)), ('C', '608', 6, 'side-chain clash', (189.098, 221.108, 182.455)), ('C', '642', 6, 'side-chain clash', (202.004, 219.082, 177.798)), ('C', '651', 6, 'side-chain clash', (202.004, 219.082, 177.798)), ('C', '101', 7, 'smoc Outlier', (204.759, 238.76, 219.29899999999998)), ('C', '102', 7, 'side-chain clash\ncablam Outlier', (209.45, 240.444, 221.554)), ('C', '123', 7, 'cablam Outlier', (213.7, 236.5, 224.4)), ('C', '241', 7, 'smoc Outlier', (199.97899999999998, 238.105, 224.015)), ('C', '242', 7, 'side-chain clash', (197.775, 242.394, 221.654)), ('C', '81', 7, 'side-chain clash', (197.775, 242.394, 221.654)), ('C', '98', 7, 'cablam Outlier\nsmoc Outlier', (211.8, 243.5, 216.6)), ('C', '99', 7, 'side-chain clash', (209.45, 240.444, 221.554)), ('C', '270', 8, 'side-chain clash\nsmoc Outlier', (193.394, 223.019, 213.544)), ('C', '84', 8, 'smoc Outlier', (189.26899999999998, 234.33100000000002, 219.034)), ('C', '86', 8, 'smoc Outlier', (189.672, 227.61899999999997, 218.518)), ('C', '88', 8, 'cablam Outlier\nsmoc Outlier', (189.3, 222.5, 215.1)), ('C', '89', 8, 'side-chain clash', (193.394, 223.019, 213.544)), ('C', '90', 8, 'Dihedral angle:CA:C', (194.335, 227.36700000000002, 213.94899999999998)), ('C', '91', 8, 'Dihedral angle:N:CA', (196.68800000000002, 228.69, 211.341)), ('C', '516', 9, 'smoc Outlier', (163.29, 193.38700000000003, 219.712)), ('C', '517', 9, 'Dihedral angle:CA:C', (164.664, 196.24899999999997, 217.634)), ('C', '518', 9, 'Dihedral angle:N:CA', (163.442, 198.26299999999998, 214.659)), ('C', '519', 9, 'cablam Outlier', (160.8, 196.0, 213.1)), ('C', '520', 9, 'cablam Outlier', (157.4, 196.3, 214.7)), ('C', '546', 9, 'smoc Outlier', (165.74699999999999, 204.292, 212.65200000000002)), ('C', '547', 9, 'cablam Outlier', (168.2, 206.8, 211.2)), ('C', '805', 10, 'Bond length:C', (211.48100000000002, 200.38700000000003, 151.80100000000002)), ('C', '806', 10, 'Bond length:N', (214.305, 198.033, 150.97)), ('C', '808', 10, 'side-chain clash', (220.06, 200.433, 151.929)), ('C', '809', 10, 'side-chain clash', (220.06, 200.433, 151.929)), ('C', '816', 10, 'smoc Outlier', (214.945, 200.04399999999998, 155.92100000000002)), ('C', '819', 10, 'smoc Outlier', (211.33800000000002, 200.92700000000002, 159.42700000000002)), ('C', '332', 11, 'side-chain clash', (157.6, 207.766, 227.803)), ('C', '334', 11, 'smoc Outlier', (155.39800000000002, 208.305, 232.27299999999997)), ('C', '362', 11, 'side-chain clash', (157.6, 207.766, 227.803)), ('C', '391', 11, 'side-chain clash\nsmoc Outlier', (161.896, 203.203, 222.011)), ('C', '525', 11, 'side-chain clash\nBond angle:CA:CB:SG\nsmoc Outlier', (161.79899999999998, 204.164, 224.494)), ('C', '527', 11, 'cablam Outlier', (164.7, 210.1, 226.6)), ('C', '1142', 12, 'Bond angle:CA:C', (184.73999999999998, 192.871, 104.026)), ('C', '1143', 12, 'Bond angle:N', (185.761, 196.251, 102.418)), ('C', '1144', 12, 'Dihedral angle:CA:C', (189.156, 194.62800000000001, 101.723)), ('C', '1145', 12, 'Dihedral angle:N:CA', (188.006, 191.059, 101.206)), ('C', '1040', 13, 'Bond angle:C\nsmoc Outlier', (186.07299999999998, 195.875, 148.429)), ('C', '1041', 13, 'Bond angle:N:CA', (188.05800000000002, 197.948, 151.012)), ('C', '1042', 13, 'smoc Outlier', (190.07899999999998, 195.026, 152.377)), ('C', '1043', 13, 'cablam Outlier', (193.5, 196.3, 151.0)), ('C', '444', 14, 'side-chain clash\nsmoc Outlier', (171.069, 180.946, 258.013)), ('C', '447', 14, 'side-chain clash', (171.069, 180.946, 258.013)), ('C', '498', 14, 'side-chain clash', (173.055, 179.641, 256.577)), ('C', '1070', 15, 'smoc Outlier', (190.23899999999998, 211.192, 138.597)), ('C', '1072', 15, 'smoc Outlier', (185.227, 212.538, 134.768)), ('C', '1073', 15, 'smoc Outlier', (183.141, 213.48600000000002, 131.732)), ('C', '52', 16, 'smoc Outlier', (193.4, 213.305, 204.75)), ('C', '53', 16, 'side-chain clash\nsmoc Outlier', (195.873, 217.2, 205.567)), ('C', '55', 16, 'side-chain clash', (195.873, 217.2, 205.567)), ('C', '1005', 17, 'smoc Outlier', (193.483, 187.105, 190.256)), ('C', '1006', 17, 'smoc Outlier', (192.135, 190.40200000000002, 188.85000000000002)), ('C', '1010', 17, 'smoc Outlier', (192.164, 191.061, 182.52700000000002)), ('C', '369', 18, 'smoc Outlier', (175.207, 201.142, 233.795)), ('C', '371', 18, 'Dihedral angle:CA:C', (175.94, 202.98800000000003, 238.79399999999998)), ('C', '372', 18, 'side-chain clash\nDihedral angle:N:CA', (178.046, 201.084, 241.28)), ('C', '795', 19, 'side-chain clash', (218.312, 197.852, 135.497)), ('C', '796', 19, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (215.966, 198.59, 136.697)), ('C', '797', 19, 'cablam Outlier', (212.4, 198.3, 137.9)), ('C', '740', 20, 'side-chain clash', (210.666, 187.8, 197.454)), ('C', '745', 20, 'cablam Outlier', (210.8, 186.2, 202.3)), ('C', '855', 20, 'side-chain clash', (213.136, 191.638, 193.597)), ('C', '640', 21, 'cablam Outlier', (174.7, 232.7, 181.0)), ('C', '641', 21, 'smoc Outlier', (176.67899999999997, 229.72, 179.531)), ('C', '653', 21, 'smoc Outlier', (180.531, 226.60899999999998, 177.18200000000002)), ('C', '666', 22, 'cablam Outlier', (179.6, 214.9, 174.9)), ('C', '667', 22, 'smoc Outlier', (176.72899999999998, 212.70299999999997, 173.71699999999998)), ('C', '405', 23, 'Dihedral angle:CA:CB:CG:OD1', (180.52200000000002, 181.14499999999998, 240.38000000000002)), ('C', '406', 23, 'smoc Outlier', (177.869, 180.32700000000003, 237.74899999999997)), ('C', '1303', 24, 'smoc Outlier', (215.206, 220.271, 192.593)), ('C', '281', 24, 'Dihedral angle:CB:CG:CD:OE1', (214.029, 214.32100000000003, 194.255)), ('C', '1095', 25, 'smoc Outlier', (178.095, 202.518, 124.1)), ('C', '1104', 25, 'smoc Outlier', (182.315, 201.782, 122.569)), ('C', '125', 26, 'backbone clash', (215.967, 228.067, 226.277)), ('C', '172', 26, 'backbone clash', (215.967, 228.067, 226.277)), ('C', '264', 27, 'backbone clash', (197.962, 242.386, 211.926)), ('C', '65', 27, 'backbone clash', (197.962, 242.386, 211.926)), ('C', '128', 28, 'side-chain clash', (207.429, 223.743, 226.157)), ('C', '170', 28, 'side-chain clash', (207.429, 223.743, 226.157)), ('C', '318', 29, 'side-chain clash', (177.632, 216.12, 189.762)), ('C', '595', 29, 'side-chain clash', (177.632, 216.12, 189.762)), ('C', '111', 30, 'side-chain clash\nsmoc Outlier', (186.414, 230.76, 236.255)), ('C', '113', 30, 'side-chain clash', (186.414, 230.76, 236.255)), ('C', '420', 31, 'side-chain clash', (201.315, 200.816, 160.799)), ('C', '460', 31, 'side-chain clash', (201.315, 200.816, 160.799)), ('C', '916', 32, 'side-chain clash\nsmoc Outlier', (200.659, 202.65, 134.301)), ('C', '923', 32, 'side-chain clash', (200.659, 202.65, 134.301)), ('C', '580', 33, 'Dihedral angle:CA:C', (152.39100000000002, 210.944, 216.593)), ('C', '581', 33, 'Dihedral angle:N:CA', (150.33800000000002, 211.6, 213.51)), ('C', '245', 34, 'side-chain clash\nsmoc Outlier', (204.439, 253.282, 225.789)), ('C', '246', 34, 'side-chain clash', (204.439, 253.282, 225.789)), ('C', '477', 35, 'smoc Outlier', (165.754, 150.731, 236.192)), ('C', '479', 35, 'smoc Outlier', (159.76299999999998, 152.47299999999998, 238.647)), ('C', '770', 36, 'smoc Outlier', (199.48000000000002, 183.698, 177.14399999999998)), ('C', '773', 36, 'smoc Outlier', (200.445, 182.41899999999998, 172.278)), ('C', '486', 37, 'Bond angle:C', (167.165, 154.02700000000002, 246.576)), ('C', '487', 37, 'Bond angle:N:CA', (168.411, 155.554, 243.267)), ('C', '942', 38, 'cablam Outlier', (202.9, 212.9, 166.6)), ('C', '943', 38, 'cablam Outlier', (200.7, 209.9, 167.0))]
data['omega'] = [('B', ' 795 ', 'LYS', None, (181.415, 154.12500000000006, 140.637)), ('C', ' 626 ', 'ALA', None, (173.315, 223.925, 197.4)), ('C', ' 837 ', 'TYR', None, (217.551, 194.77300000000005, 184.37))]
data['rama'] = [('A', ' 797 ', 'PHE', 0.01569588320037699, (164.728, 203.249, 138.069)), ('A', ' 839 ', 'ASP', 0.03848486605419122, (161.146, 212.225, 188.138)), ('A', ' 840 ', 'CYS', 0.012852855886274545, (161.75400000000005, 209.314, 190.637)), ('C', ' 840 ', 'CYS', 0.024562411950695247, (219.06700000000006, 197.873, 190.48400000000004))]
data['cablam'] = [('A', '86', 'PHE', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (150.4, 169.1, 218.1)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (155.1, 171.2, 215.2)), ('A', '98', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (125.6, 180.1, 216.5)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEES--', (151.7, 167.5, 227.9)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (130.7, 185.5, 224.0)), ('A', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (136.7, 171.5, 232.6)), ('A', '213', 'VAL', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (127.8, 173.6, 202.3)), ('A', '214', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (130.5, 171.3, 203.6)), ('A', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS-H', (154.2, 170.3, 195.4)), ('A', '450', 'ASN', 'check CA trace,carbonyls, peptide', ' \nB----', (205.7, 171.7, 250.5)), ('A', '518', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (189.0, 161.0, 214.7)), ('A', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (178.1, 156.1, 226.6)), ('A', '614', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEET--', (171.8, 159.8, 183.2)), ('A', '640', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSS-E', (153.4, 153.7, 181.2)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (166.6, 166.7, 174.9)), ('A', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \nE---E', (168.1, 165.8, 159.3)), ('A', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SHH', (192.2, 201.3, 194.0)), ('A', '839', 'ASP', 'check CA trace,carbonyls, peptide', ' \nHH---', (161.1, 212.2, 188.1)), ('A', '840', 'CYS', 'check CA trace,carbonyls, peptide', ' \nH---S', (161.8, 209.3, 190.6)), ('A', '844', 'ILE', ' alpha helix', 'bend\nSSSS-', (154.2, 205.4, 194.2)), ('A', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (186.1, 207.3, 144.6)), ('A', '940', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nHHS-S', (152.9, 189.7, 160.7)), ('A', '942', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nS-S-T', (156.6, 187.8, 166.5)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (175.6, 187.9, 151.1)), ('A', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSE', (171.9, 182.2, 149.4)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (188.5, 167.6, 110.5)), ('A', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (182.3, 180.1, 127.1)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (175.4, 159.6, 205.2)), ('A', '638', 'THR', 'check CA trace', 'bend\nTSSSS', (157.2, 155.1, 187.0)), ('A', '797', 'PHE', 'check CA trace', 'helix-3\nS-GGG', (164.7, 203.2, 138.1)), ('A', '842', 'GLY', 'check CA trace', 'bend\n--SSS', (156.2, 210.7, 193.0)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (216.6, 167.3, 215.1)), ('B', '98', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (223.5, 137.3, 216.5)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (221.6, 166.2, 227.9)), ('B', '124', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (213.8, 138.8, 224.7)), ('B', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\nEEEES', (225.3, 150.9, 232.4)), ('B', '213', 'VAL', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (228.2, 142.3, 202.2)), ('B', '214', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (228.8, 145.8, 203.6)), ('B', '450', 'ASN', 'check CA trace,carbonyls, peptide', ' \nB----', (190.7, 210.7, 250.6)), ('B', '475', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (170.7, 218.5, 238.3)), ('B', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (208.0, 205.2, 213.1)), ('B', '520', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (209.9, 208.1, 214.7)), ('B', '547', 'THR', ' beta sheet', 'strand\nTEEEE', (213.5, 193.3, 211.2)), ('B', '636', 'TYR', ' three-ten', 'turn\nHTTTS', (224.8, 173.6, 187.7)), ('B', '648', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT--E', (220.4, 185.2, 180.6)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (214.8, 179.5, 174.9)), ('B', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \nE---E', (214.9, 181.2, 159.3)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nHTT-H', (174.4, 166.8, 202.3)), ('B', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SHH', (172.0, 184.4, 194.1)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (184.0, 159.4, 137.9)), ('B', '828', 'LEU', 'check CA trace,carbonyls, peptide', ' \n---SS', (188.8, 160.7, 175.5)), ('B', '830', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (188.6, 159.7, 181.1)), ('B', '840', 'CYS', ' three-ten', 'bend\nH-SSS', (180.8, 153.6, 191.1)), ('B', '843', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (183.2, 150.4, 195.0)), ('B', '846', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nSSTTS', (185.1, 153.9, 192.2)), ('B', '847', 'ARG', 'check CA trace,carbonyls, peptide', 'turn\nSTTSH', (188.6, 155.5, 192.5)), ('B', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (169.9, 176.1, 144.6)), ('B', '942', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nS-S-T', (203.2, 161.1, 166.0)), ('B', '943', 'SER', 'check CA trace,carbonyls, peptide', ' \n-S-TT', (200.2, 163.4, 166.7)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (191.8, 176.7, 151.0)), ('B', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (203.0, 198.0, 110.5)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (195.4, 186.3, 127.1)), ('B', '1143', 'PRO', ' alpha helix', 'turn\nSTTT-', (195.9, 185.4, 102.5)), ('B', '123', 'ALA', 'check CA trace', 'bend\nE-SS-', (217.3, 138.2, 226.1)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (217.9, 166.9, 195.4)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (210.2, 167.3, 176.5)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (216.5, 190.6, 205.2)), ('B', '638', 'THR', 'check CA trace', 'bend\nTTSSS', (229.9, 176.5, 187.3)), ('B', '795', 'LYS', 'check CA trace', ' \n-S--S', (182.4, 154.0, 139.6)), ('B', '831', 'ALA', 'check CA trace', ' \nSS--S', (185.5, 161.5, 179.8)), ('B', '839', 'ASP', 'check CA trace', ' \nHH-SS', (178.6, 152.2, 188.3)), ('C', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (198.4, 228.3, 199.1)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (189.3, 222.5, 215.1)), ('C', '98', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (211.8, 243.5, 216.6)), ('C', '102', 'ARG', 'check CA trace,carbonyls, peptide', 'strand\n-EEEE', (205.1, 236.8, 222.5)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (187.7, 227.3, 227.9)), ('C', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (213.7, 236.5, 224.4)), ('C', '159', 'VAL', ' beta sheet', 'bend\nE-S-S', (198.7, 238.2, 232.8)), ('C', '160', 'TYR', ' beta sheet', ' \n-S-S-', (197.5, 236.0, 235.7)), ('C', '161', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nS-S--', (198.9, 236.8, 239.2)), ('C', '163', 'ALA', 'check CA trace,carbonyls, peptide', ' \nS---S', (199.3, 230.5, 239.2)), ('C', '213', 'VAL', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (205.2, 245.0, 202.2)), ('C', '214', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (201.9, 243.7, 203.6)), ('C', '450', 'ASN', 'check CA trace,carbonyls, peptide', ' \nB----', (164.5, 178.5, 250.5)), ('C', '519', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (160.8, 196.0, 213.1)), ('C', '520', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (157.4, 196.3, 214.7)), ('C', '527', 'PRO', 'check CA trace,carbonyls, peptide', ' \nE----', (164.7, 210.1, 226.6)), ('C', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (159.7, 218.2, 200.9)), ('C', '547', 'THR', ' beta sheet', 'strand\nTEEEE', (168.2, 206.8, 211.2)), ('C', '627', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nTTTTS', (175.5, 227.5, 198.8)), ('C', '636', 'TYR', ' three-ten', 'turn\nHTTSS', (179.7, 226.4, 187.7)), ('C', '640', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSS-E', (174.7, 232.7, 181.0)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (179.6, 214.9, 174.9)), ('C', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \nE---E', (178.1, 214.0, 159.3)), ('C', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nHTT-H', (210.8, 186.2, 202.3)), ('C', '758', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nG-SHH', (196.8, 175.4, 194.0)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nS-STT', (212.4, 198.3, 137.9)), ('C', '835', 'LYS', 'check CA trace,carbonyls, peptide', 'helix-3\nSSGGG', (220.2, 192.9, 181.8)), ('C', '839', 'ASP', 'check CA trace,carbonyls, peptide', ' \nGS---', (221.9, 196.9, 188.0)), ('C', '840', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS---S', (219.1, 197.9, 190.5)), ('C', '891', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTTSS-', (205.0, 177.7, 144.6)), ('C', '940', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nHHS-S', (206.4, 215.1, 160.8)), ('C', '942', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nS-S-T', (202.9, 212.9, 166.6)), ('C', '943', 'SER', 'check CA trace,carbonyls, peptide', ' \n-S-TT', (200.7, 209.9, 167.0)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (193.5, 196.3, 151.0)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (169.4, 195.4, 110.5)), ('C', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (183.4, 194.6, 127.2)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (189.0, 223.7, 195.4)), ('C', '310', 'LYS', 'check CA trace', 'bend\n--SEE', (192.4, 217.0, 176.5)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (169.1, 210.8, 205.2)), ('C', '638', 'THR', 'check CA trace', 'bend\nTSSSS', (174.7, 229.5, 187.3)), ('C', '842', 'GLY', 'check CA trace', 'bend\n--SSS', (222.7, 202.3, 192.8))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-22251/6xlu/Model_validation_1/validation_cootdata/molprobity_probe6xlu_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
