
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['cbeta'] = []
data['jpred'] = []
data['rota'] = [('A', ' 101 ', 'ILE', 0.24201834891397891, (320.361, 237.367, 255.143)), ('A', ' 120 ', 'VAL', 0.18816859403337746, (319.367, 243.56500000000003, 248.30400000000006)), ('A', ' 212 ', 'LEU', 0.12678203864381726, (322.771, 235.94600000000008, 273.7900000000001)), ('A', ' 387 ', 'LEU', 0.18702052989348641, (264.281, 250.142, 237.63)), ('A', ' 581 ', 'THR', 0.10870989602631534, (251.38000000000005, 237.089, 262.657)), ('A', ' 914 ', 'ASN', 0.29821264629196004, (291.2719999999999, 268.644, 344.219)), ('B', ' 125 ', 'ASN', 0.05179703641600847, (227.13000000000008, 247.774, 247.531)), ('B', ' 130 ', 'VAL', 0.2790524814401377, (236.3590000000001, 259.396, 241.518)), ('B', ' 136 ', 'CYS', 0.2952601356076265, (222.5910000000001, 268.02000000000004, 238.349)), ('B', ' 141 ', 'LEU', 0.23983837483204568, (217.73500000000007, 259.02400000000006, 245.486)), ('B', ' 212 ', 'LEU', 0.24119658757566528, (217.29500000000007, 260.32700000000006, 271.998)), ('B', ' 281 ', 'GLU', 0.2968606516415954, (245.42800000000005, 250.96300000000008, 281.021)), ('B', ' 328 ', 'ARG', 0.017218184299053568, (254.659, 309.692, 257.909)), ('B', ' 362 ', 'VAL', 0.08801131205279367, (259.5699999999999, 316.216, 246.992)), ('B', ' 441 ', 'LEU', 0.25213669516052334, (250.52499999999995, 329.111, 219.13900000000004)), ('C', ' 141 ', 'LEU', 0.254779837800861, (291.51299999999986, 337.902, 248.546)), ('C', ' 212 ', 'LEU', 0.20396209120644068, (292.6939999999999, 337.75100000000003, 275.683)), ('C', ' 234 ', 'ASN', 0.2872681470575215, (287.9329999999999, 312.625, 247.36)), ('C', ' 382 ', 'VAL', 0.20639969702123317, (294.46399999999994, 277.126, 249.878)), ('C', ' 553 ', 'THR', 0.14489821908359574, (317.53599999999994, 281.746, 272.97)), ('C', ' 598 ', 'ILE', 0.298515175058501, (297.3009999999998, 302.44300000000004, 291.96)), ('C', ' 864 ', 'LEU', 0.09603086504126303, (254.19899999999996, 289.3400000000001, 299.73)), ('C', ' 866 ', 'THR', 0.18927970297742877, (255.04399999999995, 294.54100000000005, 303.403)), ('C', ' 896 ', 'ILE', 0.20403682260725609, (258.68499999999983, 289.476, 335.162)), ('C', ' 985 ', 'ASP', 0.11772524201983062, (264.0809999999999, 285.9290000000001, 252.465))]
data['clusters'] = [('A', '142', 1, 'side-chain clash', (326.03, 231.549, 244.507)), ('A', '156', 1, 'side-chain clash', (326.03, 231.549, 244.507)), ('A', '19', 1, 'smoc Outlier', (319.01599999999996, 219.899, 245.038)), ('A', '246', 1, 'backbone clash', (328.733, 225.436, 243.882)), ('A', '250', 1, 'smoc Outlier', (333.685, 222.07299999999998, 249.20499999999998)), ('A', '252', 1, 'backbone clash', (328.733, 225.436, 243.882)), ('A', '253', 1, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (328.134, 222.24299999999997, 243.448)), ('A', '254', 1, 'smoc Outlier', (324.392, 222.683, 243.96200000000002)), ('A', '257', 1, 'cablam Outlier', (328.8, 221.3, 248.7)), ('A', '454', 2, 'side-chain clash', (249.608, 257.638, 206.995)), ('A', '455', 2, 'side-chain clash', (253.121, 255.023, 201.814)), ('A', '457', 2, 'side-chain clash', (247.762, 260.467, 212.182)), ('A', '462', 2, 'smoc Outlier', (253.089, 264.66700000000003, 219.64499999999998)), ('A', '465', 2, 'smoc Outlier', (248.76899999999998, 260.93499999999995, 221.29299999999998)), ('A', '467', 2, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (245.82100000000003, 258.64000000000004, 215.701)), ('A', '491', 2, 'side-chain clash\ncablam Outlier', (249.608, 257.638, 206.995)), ('A', '493', 2, 'side-chain clash\nsmoc Outlier', (253.121, 255.023, 201.814)), ('A', '274', 3, 'side-chain clash', (296.279, 251.311, 273.652)), ('A', '291', 3, 'side-chain clash', (296.279, 251.311, 273.652)), ('A', '292', 3, 'cablam Outlier', (294.6, 247.0, 274.7)), ('A', '293', 3, 'cablam Outlier\nsmoc Outlier', (295.9, 243.7, 275.9)), ('A', '52', 3, 'side-chain clash', (295.408, 252.82, 270.016)), ('A', '53', 3, 'Dihedral angle:CA:CB:CG:OD1', (299.78599999999994, 253.394, 265.193)), ('A', '558', 4, 'side-chain clash', (248.443, 242.641, 272.373)), ('A', '559', 4, 'side-chain clash', (247.752, 245.595, 269.304)), ('A', '564', 4, 'cablam Outlier', (250.7, 249.3, 264.8)), ('A', '565', 4, 'cablam Outlier', (253.3, 250.7, 267.2)), ('A', '577', 4, 'side-chain clash', (247.752, 245.595, 269.304)), ('A', '584', 4, 'side-chain clash', (248.443, 242.641, 272.373)), ('A', '106', 5, 'side-chain clash', (306.623, 245.47, 248.606)), ('A', '108', 5, 'cablam Outlier', (302.3, 241.6, 244.5)), ('A', '114', 5, 'smoc Outlier', (303.957, 244.36, 238.46800000000002)), ('A', '117', 5, 'side-chain clash', (309.27, 245.449, 247.608)), ('A', '234', 5, 'smoc Outlier', (300.86400000000003, 247.59, 245.98800000000003)), ('A', '235', 5, 'side-chain clash', (306.623, 245.47, 248.606)), ('A', '1070', 6, 'cablam Outlier', (289.2, 254.8, 330.9)), ('A', '1072', 6, 'Dihedral angle:CB:CG:CD:OE1', (284.88599999999997, 251.71599999999998, 335.029)), ('A', '430', 6, 'backbone clash\nside-chain clash', (278.316, 253.191, 334.011)), ('A', '515', 6, 'backbone clash\nside-chain clash', (278.316, 253.191, 334.011)), ('A', '714', 6, 'smoc Outlier', (281.03, 255.10999999999999, 338.005)), ('A', '32', 7, 'cablam Outlier', (310.1, 240.0, 275.0)), ('A', '34', 7, 'cablam CA Geom Outlier\nsmoc Outlier', (310.5, 244.3, 271.4)), ('A', '35', 7, 'cablam Outlier', (308.9, 246.4, 268.7)), ('A', '59', 7, 'smoc Outlier', (303.803, 238.591, 274.72999999999996)), ('A', '61', 7, 'smoc Outlier', (303.151, 234.04399999999998, 269.734)), ('A', '191', 8, 'smoc Outlier', (315.566, 245.284, 263.582)), ('A', '192', 8, 'side-chain clash', (313.119, 243.749, 259.317)), ('A', '193', 8, 'side-chain clash', (310.737, 249.945, 261.292)), ('A', '204', 8, 'side-chain clash', (310.737, 249.945, 261.292)), ('A', '92', 8, 'side-chain clash', (313.119, 243.749, 259.317)), ('A', '375', 9, 'side-chain clash', (296.496, 264.937, 347.005)), ('A', '436', 9, 'side-chain clash', (296.496, 264.937, 347.005)), ('A', '914', 9, 'Rotamer', (291.2719999999999, 268.644, 344.219)), ('A', '918', 9, 'Dihedral angle:CB:CG:CD:OE1', (296.46299999999997, 265.252, 344.039)), ('A', '262', 10, 'cablam Outlier', (323.3, 229.7, 261.2)), ('A', '263', 10, 'smoc Outlier', (321.02799999999996, 232.74699999999999, 261.70099999999996)), ('A', '68', 10, 'side-chain clash', (321.333, 223.408, 260.868)), ('A', '70', 10, 'side-chain clash', (321.333, 223.408, 260.868)), ('A', '1083', 11, 'cablam Outlier', (265.9, 258.2, 357.8)), ('A', '1084', 11, 'cablam Outlier', (263.9, 260.6, 359.9)), ('A', '1085', 11, 'smoc Outlier', (260.70799999999997, 260.294, 357.845)), ('A', '1134', 11, 'smoc Outlier', (266.717, 253.009, 354.156)), ('A', '195', 12, 'smoc Outlier', (305.074, 249.75, 256.512)), ('A', '270', 12, 'smoc Outlier', (302.21799999999996, 244.787, 263.26599999999996)), ('A', '87', 12, 'cablam Outlier', (299.7, 242.5, 256.2)), ('A', '88', 12, 'cablam Outlier\nsmoc Outlier', (299.6, 246.0, 257.8)), ('A', '309', 13, 'smoc Outlier', (295.77099999999996, 253.605, 293.127)), ('A', '310', 13, 'side-chain clash\ncablam Outlier', (294.273, 250.32, 297.014)), ('A', '600', 13, 'cablam CA Geom Outlier', (293.6, 247.3, 294.9)), ('A', '601', 13, 'cablam Outlier', (297.0, 248.9, 294.4)), ('A', '23', 14, 'backbone clash', (314.363, 224.414, 252.576)), ('A', '79', 14, 'backbone clash', (314.363, 224.414, 252.576)), ('A', '81', 14, 'side-chain clash', (312.802, 228.184, 252.082)), ('A', '277', 15, 'side-chain clash', (305.968, 255.292, 274.295)), ('A', '278', 15, 'side-chain clash', (309.143, 253.869, 280.34)), ('A', '287', 15, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (309.467, 251.934, 278.45099999999996)), ('A', '417', 16, 'side-chain clash\ncablam Outlier', (257.283, 258.896, 208.178)), ('A', '420', 16, 'Dihedral angle:CA:CB:CG:OD1', (258.14300000000003, 260.335, 213.608)), ('A', '421', 16, 'side-chain clash', (257.283, 258.896, 208.178)), ('A', '357', 17, 'Dihedral angle:CD:NE:CZ:NH1', (246.354, 251.29299999999998, 232.70399999999998)), ('A', '359', 17, 'cablam CA Geom Outlier', (248.2, 250.1, 238.7)), ('A', '360', 17, 'cablam Outlier\nsmoc Outlier', (247.0, 249.1, 242.2)), ('A', '797', 18, 'cablam Outlier', (304.3, 275.3, 334.2)), ('A', '801', 18, 'smoc Outlier', (306.684, 271.251, 329.32)), ('A', '898', 18, 'smoc Outlier', (299.122, 276.98599999999993, 334.676)), ('A', '385', 19, 'smoc Outlier', (268.14400000000006, 245.829, 237.33200000000002)), ('A', '387', 19, 'Rotamer', (264.281, 250.142, 237.63)), ('A', '389', 19, 'smoc Outlier', (264.101, 249.74899999999997, 243.04)), ('A', '182', 20, 'side-chain clash', (330.056, 232.315, 263.801)), ('A', '186', 20, 'side-chain clash', (325.477, 236.035, 266.094)), ('A', '97', 20, 'side-chain clash', (325.477, 236.035, 266.094)), ('A', '229', 21, 'smoc Outlier', (310.76599999999996, 256.129, 249.27399999999997)), ('A', '231', 21, 'cablam Outlier', (307.2, 254.8, 245.1)), ('A', '232', 21, 'cablam Outlier', (303.5, 254.2, 245.5)), ('A', '888', 22, 'smoc Outlier', (292.72499999999997, 287.616, 326.319)), ('A', '890', 22, 'smoc Outlier', (287.204, 288.43699999999995, 325.23599999999993)), ('A', '893', 22, 'smoc Outlier', (295.45, 290.592, 329.14400000000006)), ('A', '944', 23, 'smoc Outlier', (300.944, 263.02799999999996, 305.03599999999994)), ('A', '945', 23, 'smoc Outlier', (297.579, 264.824, 305.127)), ('A', '947', 23, 'side-chain clash', (293.019, 266.366, 306.197)), ('A', '1144', 24, 'Dihedral angle:CB:CG:CD:OE1', (279.05, 269.724, 368.075)), ('A', '1146', 24, 'smoc Outlier', (277.373, 268.407, 373.306)), ('A', '406', 25, 'side-chain clash', (275.933, 254.54, 272.01)), ('A', '409', 25, 'side-chain clash', (275.933, 254.54, 272.01)), ('A', '821', 26, 'side-chain clash', (306.367, 264.345, 311.997)), ('A', '939', 26, 'side-chain clash', (306.367, 264.345, 311.997)), ('A', '348', 27, 'cablam CA Geom Outlier\nsmoc Outlier', (246.2, 246.6, 217.0)), ('A', '354', 27, 'smoc Outlier', (245.85500000000002, 250.35100000000003, 222.77599999999998)), ('A', '329', 28, 'Bond angle:CA:C', (257.269, 245.31, 255.18800000000002)), ('A', '330', 28, 'Bond angle:N\ncablam CA Geom Outlier', (254.51, 243.35100000000003, 253.23299999999998)), ('A', '103', 29, 'side-chain clash', (318.402, 242.579, 249.263)), ('A', '120', 29, 'Rotamer\nside-chain clash', (318.402, 242.579, 249.263)), ('A', '264', 30, 'side-chain clash', (298.773, 279.514, 253.67)), ('A', '64', 30, 'side-chain clash', (298.773, 279.514, 253.67)), ('A', '318', 31, 'side-chain clash', (279.477, 248.732, 279.117)), ('A', '594', 31, 'side-chain clash', (279.477, 248.732, 279.117)), ('A', '411', 32, 'smoc Outlier', (263.43699999999995, 254.105, 221.242)), ('A', '414', 32, 'smoc Outlier', (265.4309999999999, 258.07, 217.49800000000002)), ('A', '985', 33, 'side-chain clash', (286.247, 284.325, 303.124)), ('A', '987', 33, 'side-chain clash\nsmoc Outlier', (286.247, 284.325, 303.124)), ('A', '393', 34, 'cablam Outlier', (253.1, 256.5, 240.1)), ('A', '518', 34, 'smoc Outlier', (254.048, 262.445, 239.98100000000002)), ('A', '1123', 35, 'smoc Outlier', (262.20099999999996, 267.612, 350.656)), ('A', '1124', 35, 'smoc Outlier', (258.883, 266.024, 351.58299999999997)), ('A', '1138', 36, 'smoc Outlier', (275.547, 260.639, 360.77599999999995)), ('A', '1139', 36, 'cablam Outlier', (274.5, 264.3, 361.3)), ('A', '578', 37, 'Dihedral angle:CA:CB:CG:OD1', (254.255, 241.742, 264.094)), ('A', '581', 37, 'Rotamer\nsmoc Outlier', (251.38000000000005, 237.089, 262.657)), ('A', '101', 38, 'Rotamer', (320.361, 237.367, 255.143)), ('A', '241', 38, 'smoc Outlier', (316.661, 235.589, 250.844)), ('A', '148', 39, 'side-chain clash', (343.042, 230.825, 244.961)), ('A', '149', 39, 'smoc Outlier', (343.414, 234.226, 246.991)), ('A', '782', 40, 'cablam Outlier', (294.6, 283.7, 311.4)), ('A', '784', 40, 'cablam Outlier', (291.5, 286.7, 316.1)), ('A', '449', 41, 'cablam Outlier', (245.6, 242.3, 205.1)), ('A', '450', 41, 'cablam Outlier', (244.8, 243.4, 208.6)), ('A', '745', 42, 'side-chain clash\nsmoc Outlier', (300.18, 284.837, 266.618)), ('A', '978', 42, 'side-chain clash', (300.18, 284.837, 266.618)), ('A', '852', 43, 'smoc Outlier', (304.835, 278.009, 281.012)), ('A', '853', 43, 'smoc Outlier', (301.309, 278.715, 282.28099999999995)), ('A', '153', 44, 'side-chain clash\nsmoc Outlier', (299.059, 270.805, 310.825)), ('A', '819', 44, 'Dihedral angle:CB:CG:CD:OE1', (304.35200000000003, 273.57599999999996, 312.4959999999999)), ('A', '735', 45, 'smoc Outlier', (293.72499999999997, 284.31, 287.15200000000004)), ('A', '736', 45, 'smoc Outlier', (292.569, 283.603, 283.589)), ('A', '1031', 46, 'smoc Outlier', (285.014, 278.16200000000003, 320.541)), ('A', '1034', 46, 'cablam Outlier', (288.9, 280.7, 323.2)), ('A', '568', 47, 'smoc Outlier', (255.07299999999998, 253.186, 277.383)), ('A', '569', 47, 'side-chain clash', (254.047, 256.319, 280.462)), ('A', '865', 48, 'smoc Outlier', (300.02799999999996, 286.71799999999996, 303.904)), ('A', '867', 48, 'Dihedral angle:CA:CB:CG:OD1', (304.589, 281.947, 305.79799999999994)), ('A', '40', 49, 'side-chain clash', (306.012, 260.006, 265.885)), ('A', '41', 49, 'cablam Outlier', (309.1, 263.2, 264.0)), ('A', '483', 50, 'smoc Outlier', (240.879, 259.843, 195.925)), ('A', '484', 50, 'cablam Outlier', (244.3, 258.3, 195.6)), ('B', '440', 1, 'smoc Outlier', (246.971, 327.876, 219.82100000000003)), ('B', '441', 1, 'Rotamer', (250.52499999999995, 329.111, 219.13900000000004)), ('B', '442', 1, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1\ncablam CA Geom Outlier', (251.423, 328.192, 215.545)), ('B', '443', 1, 'cablam Outlier', (250.5, 325.6, 212.9)), ('B', '446', 1, 'smoc Outlier', (251.11299999999997, 326.64300000000003, 204.177)), ('B', '447', 1, 'cablam Outlier', (253.8, 325.2, 206.5)), ('B', '449', 1, 'smoc Outlier', (258.909, 327.029, 209.75)), ('B', '450', 1, 'cablam Outlier', (259.5, 327.0, 213.5)), ('B', '494', 1, 'smoc Outlier', (261.969, 322.474, 208.206)), ('B', '498', 1, 'side-chain clash', (250.492, 319.757, 209.261)), ('B', '499', 1, 'side-chain clash', (246.321, 320.782, 212.107)), ('B', '505', 1, 'side-chain clash', (250.492, 319.757, 209.261)), ('B', '506', 1, 'side-chain clash', (246.321, 320.782, 212.107)), ('B', '309', 2, 'cablam Outlier', (244.3, 272.3, 294.5)), ('B', '310', 2, 'cablam CA Geom Outlier', (245.2, 275.6, 296.3)), ('B', '598', 2, 'side-chain clash\nsmoc Outlier', (245.722, 286.845, 291.94)), ('B', '599', 2, 'smoc Outlier', (241.71499999999997, 278.68, 291.42699999999996)), ('B', '600', 2, 'cablam Outlier', (240.4, 277.9, 295.0)), ('B', '609', 2, 'side-chain clash', (241.809, 284.011, 290.504)), ('B', '611', 2, 'side-chain clash', (245.722, 286.845, 291.94)), ('B', '650', 2, 'side-chain clash', (243.925, 289.177, 291.324)), ('B', '666', 2, 'cablam Outlier', (248.5, 287.5, 295.8)), ('B', '667', 2, 'cablam Outlier', (250.9, 290.3, 296.5)), ('B', '189', 3, 'side-chain clash', (223.678, 260.811, 265.766)), ('B', '191', 3, 'side-chain clash', (229.262, 260.933, 268.111)), ('B', '220', 3, 'smoc Outlier', (232.317, 260.392, 274.902)), ('B', '221', 3, 'side-chain clash', (235.077, 262.696, 270.821)), ('B', '33', 3, 'cablam Outlier', (232.1, 266.6, 274.0)), ('B', '34', 3, 'side-chain clash', (229.262, 260.933, 268.111)), ('B', '36', 3, 'side-chain clash', (235.077, 262.696, 270.821)), ('B', '95', 3, 'side-chain clash', (223.678, 260.811, 265.766)), ('B', '1054', 4, 'smoc Outlier', (264.52, 256.99799999999993, 313.514)), ('B', '143', 4, 'side-chain clash\nbackbone clash', (260.14, 259.092, 309.873)), ('B', '179', 4, 'side-chain clash\nbackbone clash', (260.14, 259.092, 309.873)), ('B', '819', 4, 'Dihedral angle:CB:CG:CD:OE1', (260.077, 253.363, 311.258)), ('B', '820', 4, 'Dihedral angle:CA:CB:CG:OD1', (257.627, 251.094, 309.417)), ('B', '822', 4, 'side-chain clash', (256.326, 259.642, 311.516)), ('B', '938', 4, 'side-chain clash', (256.326, 259.642, 311.516)), ('B', '124', 5, 'smoc Outlier', (223.43800000000002, 247.185, 246.54)), ('B', '125', 5, 'Rotamer', (227.13000000000008, 247.774, 247.531)), ('B', '126', 5, 'side-chain clash', (231.761, 249.304, 249.375)), ('B', '172', 5, 'side-chain clash', (231.761, 249.304, 249.375)), ('B', '176', 5, 'smoc Outlier', (222.323, 246.348, 253.20899999999997)), ('B', '178', 5, 'side-chain clash', (219.536, 251.535, 255.88)), ('B', '99', 5, 'side-chain clash\ncablam Outlier', (219.536, 251.535, 255.88)), ('B', '410', 6, 'side-chain clash', (262.659, 309.534, 218.877)), ('B', '415', 6, 'cablam Outlier', (264.4, 303.2, 216.5)), ('B', '417', 6, 'cablam Outlier\nsmoc Outlier', (264.9, 309.0, 212.5)), ('B', '419', 6, 'side-chain clash', (262.659, 309.534, 218.877)), ('B', '420', 6, 'Dihedral angle:CA:CB:CG:OD1', (268.24, 308.10200000000003, 216.35700000000003)), ('B', '421', 6, 'cablam Outlier', (269.9, 310.8, 214.3)), ('B', '193', 7, 'side-chain clash', (236.227, 261.244, 260.709)), ('B', '195', 7, 'side-chain clash', (238.209, 267.206, 258.51)), ('B', '204', 7, 'side-chain clash', (236.227, 261.244, 260.709)), ('B', '87', 7, 'smoc Outlier', (236.632, 273.373, 255.32100000000003)), ('B', '88', 7, 'cablam Outlier\nsmoc Outlier', (239.6, 271.7, 257.0)), ('B', '89', 7, 'side-chain clash\ncablam Outlier', (238.209, 267.206, 258.51)), ('B', '357', 8, 'Dihedral angle:CD:NE:CZ:NH1', (267.078, 320.22999999999996, 236.816)), ('B', '359', 8, 'cablam CA Geom Outlier', (265.7, 318.5, 242.9)), ('B', '360', 8, 'cablam Outlier', (266.0, 319.5, 246.5)), ('B', '396', 8, 'side-chain clash', (266.788, 314.472, 232.928)), ('B', '398', 8, 'Dihedral angle:CA:CB:CG:OD1', (263.72799999999995, 318.289, 228.586)), ('B', '514', 8, 'side-chain clash', (266.788, 314.472, 232.928)), ('B', '796', 9, 'Dihedral angle:CA:CB:CG:OD1', (260.166, 248.19899999999998, 332.151)), ('B', '797', 9, 'cablam Outlier', (261.9, 251.6, 332.6)), ('B', '798', 9, 'cablam Outlier', (260.4, 252.9, 335.8)), ('B', '801', 9, 'smoc Outlier', (256.16400000000004, 251.661, 328.35900000000004)), ('B', '803', 9, 'cablam Outlier\nsmoc Outlier', (256.6, 249.4, 322.4)), ('B', '985', 10, 'side-chain clash', (278.19, 261.429, 251.334)), ('B', '987', 10, 'side-chain clash', (278.19, 261.429, 251.334)), ('B', '988', 10, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (276.43399999999997, 266.28299999999996, 253.437)), ('B', '990', 10, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (277.76099999999997, 266.254, 258.97599999999994)), ('B', '994', 10, 'Dihedral angle:CA:CB:CG:OD1', (276.92999999999995, 268.33, 264.509)), ('B', '591', 11, 'cablam Outlier', (252.0, 294.8, 276.7)), ('B', '592', 11, 'side-chain clash\nsmoc Outlier', (250.983, 296.484, 278.929)), ('B', '613', 11, 'cablam Outlier', (250.4, 292.7, 287.4)), ('B', '614', 11, 'Dihedral angle:CA:CB:CG:OD1', (251.007, 295.98599999999993, 285.62)), ('B', '634', 11, 'side-chain clash', (250.983, 296.484, 278.929)), ('B', '108', 12, 'cablam Outlier', (235.1, 272.1, 243.3)), ('B', '110', 12, 'cablam Outlier\nsmoc Outlier', (230.9, 269.7, 239.8)), ('B', '112', 12, 'cablam Outlier', (232.0, 267.2, 234.4)), ('B', '237', 12, 'side-chain clash', (229.547, 273.082, 247.333)), ('B', '83', 12, 'side-chain clash', (229.547, 273.082, 247.333)), ('B', '251', 13, 'smoc Outlier', (201.79899999999998, 259.35, 241.80200000000002)), ('B', '253', 13, 'side-chain clash', (205.206, 261.967, 241.292)), ('B', '255', 13, 'cablam CA Geom Outlier', (207.5, 267.4, 241.9)), ('B', '256', 13, 'cablam Outlier', (205.7, 267.7, 245.2)), ('B', '257', 13, 'cablam Outlier', (203.9, 264.4, 245.7)), ('B', '328', 14, 'Rotamer', (254.659, 309.692, 257.909)), ('B', '329', 14, 'side-chain clash', (255.792, 310.558, 255.599)), ('B', '330', 14, 'side-chain clash\ncablam CA Geom Outlier', (255.792, 310.558, 255.599)), ('B', '528', 14, 'smoc Outlier', (254.435, 310.566, 249.96800000000002)), ('B', '575', 15, 'side-chain clash', (259.595, 309.878, 273.008)), ('B', '576', 15, 'side-chain clash', (260.615, 307.49, 269.406)), ('B', '586', 15, 'side-chain clash', (259.595, 309.878, 273.008)), ('B', '587', 15, 'side-chain clash', (260.615, 307.49, 269.406)), ('B', '454', 16, 'side-chain clash', (276.211, 319.525, 210.923)), ('B', '457', 16, 'side-chain clash', (277.504, 317.932, 215.872)), ('B', '469', 16, 'side-chain clash\nsmoc Outlier', (277.504, 317.932, 215.872)), ('B', '471', 16, 'side-chain clash', (276.211, 319.525, 210.923)), ('B', '481', 17, 'smoc Outlier', (283.93699999999995, 322.772, 198.789)), ('B', '482', 17, 'cablam Outlier', (282.6, 322.3, 202.3)), ('B', '484', 17, 'cablam Outlier', (276.2, 323.0, 200.3)), ('B', '489', 17, 'smoc Outlier', (272.318, 318.4959999999999, 201.17899999999997)), ('B', '1041', 18, 'cablam Outlier', (265.1, 276.5, 318.8)), ('B', '1042', 18, 'cablam Outlier', (267.6, 273.8, 317.8)), ('B', '1043', 18, 'cablam Outlier', (266.3, 270.5, 319.3)), ('B', '1045', 18, 'cablam Outlier', (260.2, 273.9, 320.4)), ('B', '212', 19, 'Rotamer', (217.29500000000007, 260.32700000000006, 271.998)), ('B', '214', 19, 'cablam CA Geom Outlier', (217.0, 266.1, 270.1)), ('B', '215', 19, 'cablam CA Geom Outlier', (220.3, 267.7, 270.8)), ('B', '21', 20, 'backbone clash', (215.214, 270.739, 248.983)), ('B', '79', 20, 'backbone clash', (215.214, 270.739, 248.983)), ('B', '81', 20, 'side-chain clash', (219.246, 270.757, 250.053)), ('B', '262', 21, 'side-chain clash\ncablam CA Geom Outlier', (211.964, 264.163, 258.597)), ('B', '68', 21, 'side-chain clash', (211.964, 264.163, 258.597)), ('B', '70', 21, 'smoc Outlier', (205.889, 266.57, 258.633)), ('B', '853', 22, 'side-chain clash\nsmoc Outlier', (267.596, 255.992, 282.211)), ('B', '854', 22, 'smoc Outlier', (268.865, 251.871, 281.195)), ('B', '858', 22, 'side-chain clash', (267.596, 255.992, 282.211)), ('B', '180', 23, 'Dihedral angle:CB:CG:CD:OE1', (211.48200000000003, 252.39000000000001, 254.65800000000002)), ('B', '182', 23, 'smoc Outlier', (209.38000000000002, 256.18, 259.325)), ('B', '183', 23, 'smoc Outlier', (208.31, 258.98599999999993, 261.666)), ('B', '940', 24, 'smoc Outlier', (248.007, 261.195, 307.575)), ('B', '944', 24, 'smoc Outlier', (252.347, 263.09099999999995, 304.635)), ('B', '945', 24, 'smoc Outlier', (256.137, 263.48799999999994, 304.445)), ('B', '1145', 25, 'smoc Outlier', (271.10900000000004, 276.61, 371.183)), ('B', '1146', 25, 'smoc Outlier', (267.93799999999993, 276.375, 373.29499999999996)), ('B', '661', 26, 'smoc Outlier', (244.814, 283.41799999999995, 307.807)), ('B', '662', 26, 'smoc Outlier', (246.80200000000002, 283.53299999999996, 304.572)), ('B', '1083', 27, 'cablam Outlier', (266.2, 291.7, 358.6)), ('B', '1084', 27, 'cablam Outlier', (268.6, 293.4, 361.2)), ('B', '1079', 28, 'smoc Outlier', (263.749, 291.589, 345.325)), ('B', '1131', 28, 'cablam Outlier', (263.5, 298.4, 346.8)), ('B', '1073', 29, 'smoc Outlier', (249.9, 281.64900000000006, 338.853)), ('B', '1074', 29, 'smoc Outlier', (250.79, 285.15700000000004, 340.02)), ('B', '1070', 30, 'cablam Outlier', (251.2, 274.8, 331.0)), ('B', '717', 30, 'smoc Outlier', (251.695, 272.857, 336.23299999999995)), ('B', '186', 31, 'side-chain clash', (215.823, 257.411, 264.669)), ('B', '97', 31, 'side-chain clash', (215.823, 257.411, 264.669)), ('B', '281', 32, 'Rotamer\nDihedral angle:CB:CG:CD:OE1', (245.42800000000003, 250.963, 281.02099999999996)), ('B', '282', 32, 'smoc Outlier', (243.63299999999998, 249.71499999999997, 277.88)), ('B', '103', 33, 'side-chain clash', (227.141, 258.147, 248.576)), ('B', '120', 33, 'side-chain clash', (227.141, 258.147, 248.576)), ('B', '119', 34, 'side-chain clash', (271.568, 306.097, 272.61)), ('B', '128', 34, 'side-chain clash', (271.568, 306.097, 272.61)), ('B', '30', 35, 'side-chain clash', (228.335, 273.419, 273.989)), ('B', '59', 35, 'side-chain clash', (228.335, 273.419, 273.989)), ('B', '910', 36, 'smoc Outlier', (266.651, 274.98499999999996, 335.79599999999994)), ('B', '911', 36, 'smoc Outlier', (264.294, 272.574, 337.58599999999996)), ('B', '333', 37, 'smoc Outlier', (254.92200000000003, 320.49399999999997, 252.285)), ('B', '334', 37, 'smoc Outlier', (256.603, 322.34900000000005, 249.39000000000001)), ('B', '412', 38, 'smoc Outlier', (262.78099999999995, 303.93699999999995, 225.11599999999999)), ('B', '428', 38, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (267.148, 301.078, 229.706)), ('B', '318', 39, 'side-chain clash', (251.317, 288.832, 280.787)), ('B', '594', 39, 'side-chain clash', (251.317, 288.832, 280.787)), ('B', '393', 40, 'cablam Outlier', (268.9, 311.8, 242.9)), ('B', '394', 40, 'side-chain clash', (269.33, 313.006, 240.132)), ('B', '106', 41, 'side-chain clash', (234.861, 264.283, 246.873)), ('B', '117', 41, 'side-chain clash', (234.861, 264.283, 246.873)), ('B', '365', 42, 'side-chain clash', (254.236, 311.724, 242.373)), ('B', '527', 42, 'side-chain clash', (254.236, 311.724, 242.373)), ('B', '380', 43, 'smoc Outlier', (256.38599999999997, 302.19, 228.91899999999998)), ('B', '381', 43, 'smoc Outlier', (258.548, 299.762, 230.863)), ('B', '433', 44, 'side-chain clash', (260.031, 311.915, 226.287)), ('B', '512', 44, 'side-chain clash', (260.031, 311.915, 226.287)), ('B', '887', 45, 'side-chain clash', (278.885, 257.63, 331.807)), ('B', '894', 45, 'side-chain clash', (278.885, 257.63, 331.807)), ('B', '974', 46, 'smoc Outlier', (265.247, 265.551, 262.251)), ('B', '975', 46, 'cablam Outlier', (266.7, 263.9, 265.4)), ('B', '736', 47, 'smoc Outlier', (274.762, 258.99799999999993, 282.947)), ('B', '738', 47, 'smoc Outlier', (278.512, 260.204, 277.651)), ('B', '1033', 48, 'smoc Outlier', (270.442, 262.719, 320.87)), ('B', '1034', 48, 'smoc Outlier', (274.043, 262.106, 321.98199999999997)), ('B', '1125', 49, 'smoc Outlier', (273.092, 296.875, 354.118)), ('B', '1127', 49, 'Dihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (269.897, 301.60200000000003, 352.632)), ('B', '808', 50, 'Dihedral angle:CA:CB:CG:OD1', (259.924, 244.127, 316.392)), ('B', '810', 50, 'smoc Outlier', (259.007, 238.847, 314.803)), ('B', '725', 51, 'Dihedral angle:CB:CG:CD:OE1', (261.712, 267.214, 312.629)), ('B', '726', 51, 'smoc Outlier', (262.30400000000003, 266.131, 309.024)), ('B', '275', 52, 'smoc Outlier', (244.007, 269.045, 272.98099999999994)), ('B', '277', 52, 'smoc Outlier', (244.60999999999999, 263.32599999999996, 275.383)), ('B', '603', 53, 'smoc Outlier', (237.41, 270.151, 295.83299999999997)), ('B', '604', 53, 'cablam Outlier', (235.2, 273.1, 296.7)), ('B', '744', 54, 'side-chain clash', (275.933, 254.54, 272.01)), ('B', '745', 54, 'Dihedral angle:CA:CB:CG:OD1', (275.632, 252.798, 267.78)), ('B', '44', 55, 'side-chain clash', (251.506, 258.673, 275.402)), ('B', '47', 55, 'side-chain clash', (251.506, 258.673, 275.402)), ('B', '323', 56, 'smoc Outlier', (245.341, 299.245, 266.691)), ('B', '324', 56, 'Dihedral angle:CB:CG:CD:OE1', (246.788, 301.70599999999996, 264.14900000000006)), ('B', '478', 57, 'side-chain clash', (279.026, 315.845, 192.801)), ('B', '486', 57, 'side-chain clash\ncablam Outlier', (279.026, 315.845, 192.801)), ('C', '1019', 1, 'smoc Outlier', (270.09799999999996, 281.003, 302.08799999999997)), ('C', '1058', 1, 'cablam CA Geom Outlier', (266.7, 293.8, 302.9)), ('C', '214', 1, 'side-chain clash', (269.138, 290.678, 305.382)), ('C', '234', 1, 'Rotamer\nside-chain clash\nsmoc Outlier', (265.916, 292.272, 302.664)), ('C', '66', 1, 'side-chain clash', (269.138, 290.678, 305.382)), ('C', '729', 1, 'smoc Outlier', (268.606, 288.14000000000004, 305.019)), ('C', '962', 1, 'side-chain clash', (268.711, 284.813, 306.609)), ('C', '965', 1, 'side-chain clash', (268.711, 284.813, 306.609)), ('C', '108', 2, 'cablam Outlier', (293.8, 316.6, 245.5)), ('C', '112', 2, 'cablam Outlier', (291.9, 321.5, 236.6)), ('C', '113', 2, 'smoc Outlier', (292.205, 317.695, 236.656)), ('C', '114', 2, 'smoc Outlier', (290.183, 316.546, 239.7)), ('C', '132', 2, 'Dihedral angle:CB:CG:CD:OE1', (287.518, 321.941, 238.01)), ('C', '140', 3, 'smoc Outlier', (294.302, 335.39099999999996, 247.94299999999998)), ('C', '141', 3, 'Rotamer', (291.51299999999986, 337.902, 248.546)), ('C', '156', 3, 'Dihedral angle:CB:CG:CD:OE1', (290.677, 341.575, 244.004)), ('C', '158', 3, 'smoc Outlier', (292.134, 336.252, 242.192)), ('C', '159', 3, 'cablam Outlier', (291.2, 332.8, 243.3)), ('C', '412', 4, 'cablam Outlier', (286.4, 268.5, 246.5)), ('C', '413', 4, 'smoc Outlier', (282.677, 267.93899999999996, 247.124)), ('C', '415', 4, 'cablam Outlier', (279.9, 264.0, 242.2)), ('C', '427', 4, 'Dihedral angle:CA:CB:CG:OD1', (286.351, 265.746, 250.255)), ('C', '428', 4, 'side-chain clash', (288.797, 265.896, 252.195)), ('C', '186', 5, 'side-chain clash', (295.826, 337.043, 268.051)), ('C', '215', 5, 'Dihedral angle:CA:CB:CG:OD1\nsmoc Outlier', (296.907, 332.141, 272.258)), ('C', '262', 5, 'cablam CA Geom Outlier', (296.0, 340.5, 262.2)), ('C', '97', 5, 'side-chain clash', (290.056, 340.263, 266.679)), ('C', '280', 6, 'cablam Outlier', (274.3, 316.5, 281.8)), ('C', '44', 6, 'side-chain clash', (273.2, 310.477, 277.696)), ('C', '46', 6, 'cablam Outlier', (272.8, 311.7, 282.2)), ('C', '47', 6, 'side-chain clash', (273.2, 310.477, 277.696)), ('C', '320', 7, 'smoc Outlier', (306.381, 293.594, 273.85900000000004)), ('C', '321', 7, 'smoc Outlier', (305.858, 294.412, 270.191)), ('C', '590', 7, 'side-chain clash', (307.764, 290.212, 277.621)), ('C', '634', 7, 'side-chain clash', (307.764, 290.212, 277.621)), ('C', '309', 8, 'smoc Outlier', (288.168, 305.78999999999996, 295.198)), ('C', '310', 8, 'cablam Outlier\nsmoc Outlier', (291.5, 304.8, 296.7)), ('C', '598', 8, 'Rotamer', (297.3009999999998, 302.44300000000004, 291.96)), ('C', '600', 8, 'cablam CA Geom Outlier', (295.2, 307.4, 296.2)), ('C', '178', 9, 'Dihedral angle:CA:CB:CG:OD1', (282.454, 344.746, 255.538)), ('C', '180', 9, 'Dihedral angle:CB:CG:CD:OE1', (287.73499999999996, 345.29099999999994, 257.556)), ('C', '181', 9, 'smoc Outlier', (291.30400000000003, 344.967, 258.80400000000003)), ('C', '182', 9, 'smoc Outlier', (292.607, 346.624, 261.969)), ('C', '1041', 10, 'cablam Outlier', (282.3, 285.5, 320.9)), ('C', '1042', 10, 'cablam Outlier', (278.9, 284.7, 319.4)), ('C', '1043', 10, 'cablam Outlier', (276.5, 287.6, 320.1)), ('C', '1045', 10, 'cablam Outlier', (282.7, 291.0, 321.4)), ('C', '478', 11, 'cablam Outlier', (273.6, 236.6, 230.8)), ('C', '480', 11, 'cablam Outlier', (279.9, 238.4, 229.8)), ('C', '481', 11, 'cablam Outlier', (283.6, 238.9, 230.6)), ('C', '484', 11, 'Dihedral angle:CB:CG:CD:OE1', (280.047, 238.941, 225.238)), ('C', '403', 12, 'backbone clash', (283.168, 263.334, 222.894)), ('C', '495', 12, 'backbone clash', (283.168, 263.334, 222.894)), ('C', '496', 12, 'cablam Outlier', (284.6, 262.0, 220.2)), ('C', '1070', 13, 'cablam Outlier', (287.8, 297.9, 332.0)), ('C', '881', 13, 'side-chain clash', (284.95, 295.632, 332.691)), ('C', '901', 13, 'side-chain clash', (284.95, 295.632, 332.691)), ('C', '343', 14, 'side-chain clash', (301.315, 276.083, 228.171)), ('C', '371', 14, 'smoc Outlier', (304.269, 279.42999999999995, 229.542)), ('C', '372', 14, 'side-chain clash', (301.315, 276.083, 228.171)), ('C', '742', 15, 'smoc Outlier', (264.282, 285.683, 272.97099999999995)), ('C', '994', 15, 'Dihedral angle:CA:CB:CG:OD1', (269.519, 281.017, 264.91799999999995)), ('C', '997', 15, 'smoc Outlier', (268.564, 282.622, 269.676)), ('C', '276', 16, 'side-chain clash\nsmoc Outlier', (285.94, 306.745, 281.291)), ('C', '301', 16, 'side-chain clash', (285.94, 306.745, 281.291)), ('C', '50', 16, 'smoc Outlier', (282.63, 305.914, 275.382)), ('C', '87', 17, 'smoc Outlier', (295.387, 313.009, 255.504)), ('C', '88', 17, 'cablam CA Geom Outlier\nsmoc Outlier', (292.8, 312.3, 258.3)), ('C', '89', 17, 'cablam Outlier', (290.7, 315.2, 259.7)), ('C', '568', 18, 'smoc Outlier', (305.59599999999995, 269.90599999999995, 274.47099999999995)), ('C', '569', 18, 'smoc Outlier', (302.529, 269.09099999999995, 276.601)), ('C', '571', 18, 'Dihedral angle:CA:CB:CG:OD1', (301.28499999999997, 271.312, 271.48999999999995)), ('C', '1034', 19, 'cablam Outlier', (266.0, 284.5, 323.2)), ('C', '889', 19, 'smoc Outlier', (260.52799999999996, 281.663, 323.42199999999997)), ('C', '890', 19, 'cablam Outlier', (260.2, 278.1, 324.8)), ('C', '637', 20, 'smoc Outlier', (310.14400000000006, 305.139, 281.294)), ('C', '638', 20, 'cablam Outlier', (312.7, 304.7, 284.0)), ('C', '639', 20, 'smoc Outlier', (310.537, 306.585, 286.54900000000004)), ('C', '864', 21, 'Rotamer', (254.19899999999996, 289.3400000000001, 299.73)), ('C', '866', 21, 'Rotamer', (255.04399999999995, 294.54100000000005, 303.403)), ('C', '867', 21, 'Dihedral angle:CA:CB:CG:OD1', (257.66, 296.813, 304.95099999999996)), ('C', '217', 22, 'side-chain clash', (289.846, 327.442, 272.793)), ('C', '34', 22, 'side-chain clash', (289.846, 327.442, 272.793)), ('C', '666', 23, 'cablam Outlier\nsmoc Outlier', (299.8, 295.0, 296.7)), ('C', '667', 23, 'cablam Outlier', (301.2, 291.5, 297.3)), ('C', '110', 24, 'side-chain clash', (291.951, 323.607, 244.263)), ('C', '135', 24, 'side-chain clash', (291.951, 323.607, 244.263)), ('C', '18', 25, 'side-chain clash', (303.588, 337.719, 248.004)), ('C', '21', 25, 'side-chain clash', (303.588, 337.719, 248.004)), ('C', '1078', 26, 'smoc Outlier', (297.047, 280.914, 346.33799999999997)), ('C', '1079', 26, 'smoc Outlier', (296.106, 277.374, 345.256)), ('C', '391', 27, 'smoc Outlier', (306.42599999999993, 275.957, 251.677)), ('C', '525', 27, 'cablam Outlier', (309.5, 275.1, 249.4)), ('C', '401', 28, 'side-chain clash', (294.682, 267.814, 227.76)), ('C', '509', 28, 'side-chain clash', (294.682, 267.814, 227.76)), ('C', '348', 29, 'smoc Outlier', (297.279, 261.126, 229.85500000000002)), ('C', '354', 29, 'smoc Outlier', (300.337, 260.02799999999996, 235.033)), ('C', '676', 30, 'smoc Outlier', (304.09599999999995, 311.073, 305.27599999999995)), ('C', '689', 30, 'smoc Outlier', (303.84900000000005, 316.693, 302.176)), ('C', '102', 31, 'side-chain clash', (285.499, 333.236, 253.934)), ('C', '121', 31, 'side-chain clash', (285.499, 333.236, 253.934)), ('C', '267', 32, 'side-chain clash', (297.578, 322.357, 258.773)), ('C', '84', 32, 'side-chain clash', (297.578, 322.357, 258.773)), ('C', '1062', 33, 'smoc Outlier', (271.151, 293.329, 315.828)), ('C', '725', 33, 'smoc Outlier', (276.17900000000003, 293.67400000000004, 313.29699999999997)), ('C', '359', 34, 'cablam CA Geom Outlier', (310.5, 268.2, 244.5)), ('C', '360', 34, 'cablam Outlier', (313.8, 269.8, 245.2)), ('C', '826', 35, 'smoc Outlier', (269.835, 302.47999999999996, 301.902)), ('C', '827', 35, 'smoc Outlier', (268.697, 304.566, 298.924)), ('C', '292', 36, 'smoc Outlier', (294.566, 306.305, 276.67900000000003)), ('C', '293', 36, 'smoc Outlier', (296.88, 309.274, 277.394)), ('C', '374', 37, 'side-chain clash', (294.552, 277.276, 230.524)), ('C', '436', 37, 'side-chain clash', (294.552, 277.276, 230.524)), ('C', '985', 38, 'Rotamer\nside-chain clash\nDihedral angle:CA:CB:CG:OD1', (264.08099999999996, 285.929, 252.465)), ('C', '987', 38, 'side-chain clash', (262.891, 283.292, 251.659)), ('C', '382', 39, 'Rotamer', (294.46399999999994, 277.126, 249.878)), ('C', '390', 39, 'side-chain clash\ncablam Outlier', (298.773, 279.514, 253.67)), ('C', '796', 40, 'Dihedral angle:CA:CB:CG:OD1', (260.257, 303.742, 332.48299999999995)), ('C', '801', 40, 'smoc Outlier', (265.043, 304.279, 328.656)), ('C', '527', 41, 'smoc Outlier', (311.518, 281.21799999999996, 246.19899999999998)), ('C', '528', 41, 'smoc Outlier', (311.756, 282.14400000000006, 249.89100000000002)), ('C', '422', 42, 'side-chain clash\ncablam CA Geom Outlier', (286.474, 256.601, 233.159)), ('C', '454', 42, 'side-chain clash', (286.474, 256.601, 233.159)), ('C', '145', 43, 'side-chain clash', (291.083, 351.07, 251.758)), ('C', '247', 43, 'side-chain clash', (291.083, 351.07, 251.758)), ('C', '246', 44, 'backbone clash\nside-chain clash', (296.243, 347.36, 248.009)), ('C', '252', 44, 'backbone clash\nside-chain clash', (296.243, 347.36, 248.009)), ('C', '1110', 45, 'smoc Outlier', (286.613, 291.917, 343.509)), ('C', '1111', 45, 'smoc Outlier', (284.66700000000003, 291.137, 346.705)), ('C', '456', 46, 'cablam CA Geom Outlier', (279.7, 251.2, 234.0)), ('C', '458', 46, 'smoc Outlier', (281.32599999999996, 248.166, 239.816)), ('C', '653', 47, 'smoc Outlier', (306.551, 304.60200000000003, 295.40999999999997)), ('C', '654', 47, 'Dihedral angle:CB:CG:CD:OE1', (309.371, 305.327, 297.85)), ('C', '1123', 48, 'smoc Outlier', (289.243, 266.83799999999997, 350.37)), ('C', '1124', 48, 'smoc Outlier', (292.49699999999996, 265.562, 351.84900000000005)), ('C', '465', 49, 'Dihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (294.34200000000004, 255.031, 242.836)), ('C', '466', 49, 'smoc Outlier', (294.44599999999997, 253.845, 239.232)), ('C', '564', 50, 'smoc Outlier', (312.319, 269.325, 262.324)), ('C', '565', 50, 'smoc Outlier', (309.91799999999995, 270.57099999999997, 265.013)), ('C', '957', 51, 'side-chain clash', (274.853, 293.323, 284.145)), ('C', '961', 51, 'side-chain clash', (274.853, 293.323, 284.145)), ('C', '553', 52, 'Rotamer', (317.53599999999994, 281.746, 272.97)), ('C', '554', 52, 'Dihedral angle:CB:CG:CD:OE1', (320.319, 279.16900000000004, 272.99299999999994)), ('C', '895', 53, 'side-chain clash', (253.539, 286.756, 334.074)), ('C', '896', 53, 'Rotamer\nsmoc Outlier', (258.68499999999983, 289.476, 335.162))]
data['probe'] = [(' C  97  LYS  HB3', ' C 186  PHE  HA ', -0.725, (290.056, 340.263, 266.679)), (' B  99  ASN HD22', ' B 178  ASP  H  ', -0.69, (219.536, 251.535, 255.88)), (' C 422  ASN HD21', ' C 454  ARG  H  ', -0.648, (286.474, 256.601, 233.159)), (' A 103  GLY  HA3', ' A 120  VAL  HA ', -0.611, (318.402, 242.579, 249.263)), (' A  97  LYS  HB3', ' A 186  PHE  HA ', -0.583, (325.477, 236.035, 266.094)), (' B  21  ARG  NH2', ' B  79  PHE  O  ', -0.581, (215.214, 270.739, 248.983)), (' C 186  PHE  HE2', ' C 214  ARG  HB3', -0.578, (295.826, 337.043, 268.051)), (' C1047  TYR  HB2', ' C1067  TYR  HB3', -0.578, (279.746, 290.649, 329.131)), (' B 193  VAL  HB ', ' B 204  TYR  HB2', -0.572, (236.227, 261.244, 260.709)), (' B  97  LYS  HB3', ' B 186  PHE  HA ', -0.566, (215.823, 257.411, 264.669)), (' B 985  ASP  N  ', ' B 985  ASP  OD1', -0.566, (274.659, 262.344, 251.718)), (' B 396  TYR  HB2', ' B 514  SER  HB3', -0.566, (266.788, 314.472, 232.928)), (' B 592  PHE  H  ', ' B 634  ARG HH22', -0.558, (250.983, 296.484, 278.929)), (' C 985  ASP  N  ', ' C 985  ASP  OD2', -0.557, (265.453, 286.257, 251.443)), (' A1090  PRO  O  ', ' B 913  GLN  NE2', -0.553, (270.171, 266.167, 344.579)), (' A1028  LYS  NZ ', ' A1042  PHE  O  ', -0.544, (284.933, 271.211, 316.424)), (' B 126  VAL  HB ', ' B 172  SER  HB3', -0.538, (231.761, 249.304, 249.375)), (' B 822  LEU HD21', ' B 938  LEU HD13', -0.537, (256.326, 259.642, 311.516)), (' A 558  LYS  HA ', ' A 584  ILE HG13', -0.533, (248.443, 242.641, 272.373)), (' C 145  TYR  HB3', ' C 247  SER  HA ', -0.531, (291.083, 351.07, 251.758)), (' B 598  ILE  HB ', ' B 609  ALA  HB3', -0.53, (241.809, 284.011, 290.504)), (' B 985  ASP  HB2', ' B 987  PRO  HD2', -0.53, (278.19, 261.429, 251.334)), (' B 103  GLY  HA3', ' B 120  VAL  HA ', -0.529, (227.141, 258.147, 248.576)), (' A 985  ASP  N  ', ' A 985  ASP  OD1', -0.526, (292.292, 283.262, 252.63)), (' B 433  VAL HG22', ' B 512  VAL HG12', -0.524, (260.031, 311.915, 226.287)), (' B1006  THR HG22', ' B1010  GLN HE21', -0.522, (269.644, 272.511, 283.241)), (' C  34  ARG  HE ', ' C 217  PRO  HG2', -0.518, (289.846, 327.442, 272.793)), (' C 985  ASP  HB2', ' C 987  PRO  HD2', -0.517, (262.891, 283.292, 251.659)), (' A  52  GLN  NE2', ' A 274  THR  OG1', -0.515, (295.408, 252.82, 270.016)), (' B 576  VAL  HB ', ' B 587  ILE HD11', -0.514, (260.615, 307.49, 269.406)), (' A 455  LEU HD22', ' A 493  GLN HE22', -0.51, (253.121, 255.023, 201.814)), (' A 985  ASP  HB2', ' A 987  PRO  HD2', -0.509, (291.06, 286.844, 252.168)), (' A 777  ASN  OD1', ' A1019  ARG  NH1', -0.508, (286.247, 284.325, 303.124)), (' C1011  GLN  OE1', ' C1014  ARG  NH1', -0.506, (272.819, 288.23, 289.621)), (' A1076  THR  HB ', ' A1097  SER  HB3', -0.506, (275.172, 249.998, 346.463)), (' C 590  CYS  O  ', ' C 634  ARG  NH2', -0.505, (307.764, 290.212, 277.621)), (' B  30  ASN HD21', ' B  59  PHE  HA ', -0.504, (228.335, 273.419, 273.989)), (' B  89  GLY  HA2', ' B 195  LYS  HG2', -0.5, (238.209, 267.206, 258.51)), (' C  66  HIS  HA ', ' C 214  ARG HH22', -0.497, (300.151, 334.107, 264.366)), (' B 454  ARG HH22', ' B 471  GLU  H  ', -0.495, (276.211, 319.525, 210.923)), (' A 106  PHE  HB2', ' A 117  LEU  HB3', -0.494, (309.27, 245.449, 247.608)), (' A  23  GLN  NE2', ' A  79  PHE  O  ', -0.492, (314.363, 224.414, 252.576)), (' C 729  VAL  H  ', ' C1059  GLY  HA2', -0.492, (269.138, 290.678, 305.382)), (' B  95  THR HG22', ' B 189  LEU HD13', -0.487, (223.678, 260.811, 265.766)), (' A1035  GLY  HA3', ' C1040  VAL HG21', -0.487, (285.564, 280.107, 325.467)), (' B1076  THR  HB ', ' B1097  SER  HB3', -0.486, (253.563, 288.792, 347.615)), (' B 143  VAL HG11', ' B 179  LEU  HB3', -0.484, (214.097, 252.503, 250.082)), (' B 742  ILE  O  ', ' B1000  ARG  NH1', -0.482, (272.775, 261.081, 270.375)), (' C 234  ASN  N  ', ' C 234  ASN  OD1', -0.482, (287.394, 312.797, 245.511)), (' B 822  LEU HD13', ' B1061  VAL HG21', -0.481, (260.14, 259.092, 309.873)), (' B 478  THR HG21', ' B 486  PHE  HD2', -0.48, (279.026, 315.845, 192.801)), (' A 274  THR  HB ', ' A 291  CYS  HB2', -0.479, (296.279, 251.311, 273.652)), (' B 499  PRO  HA ', ' B 506  GLN HE22', -0.479, (246.321, 320.782, 212.107)), (' C 730  SER  HB3', ' C1058  HIS  HA ', -0.478, (265.916, 292.272, 302.664)), (' C 343  ASN  HB2', ' C 372  ALA  HB2', -0.477, (301.315, 276.083, 228.171)), (' A 821  LEU HD21', ' A 939  SER  HB3', -0.475, (306.367, 264.345, 311.997)), (' B 498  GLN  H  ', ' B 505  TYR  HB3', -0.473, (250.492, 319.757, 209.261)), (' B 119  ILE HG12', ' B 128  ILE HG23', -0.473, (234.434, 257.322, 247.568)), (' B 253  ASP  N  ', ' B 253  ASP  OD1', -0.47, (205.206, 261.967, 241.292)), (' B1047  TYR  HB2', ' B1067  TYR  HB3', -0.469, (261.77, 272.023, 328.58)), (' A 193  VAL  HB ', ' A 204  TYR  HB2', -0.469, (310.737, 249.945, 261.292)), (' C 246  ARG  NH1', ' C 252  GLY  O  ', -0.467, (296.397, 346.376, 245.291)), (' C1091  ARG  HE ', ' C1121  PHE  HB3', -0.466, (283.092, 272.953, 350.222)), (' C 403  ARG  NH2', ' C 495  TYR  O  ', -0.465, (283.168, 263.334, 222.894)), (' A 375  SER  H  ', ' A 436  TRP  HA ', -0.464, (261.13, 238.652, 222.058)), (' B 365  TYR  H  ', ' B 527  PRO  HG3', -0.46, (254.236, 311.724, 242.373)), (' B 853  GLN  HB3', ' B 858  LEU  HB2', -0.46, (267.596, 255.992, 282.211)), (' A 918  GLU  HG2', ' C1128  VAL HG11', -0.46, (296.496, 264.937, 347.005)), (' A 278  LYS  HD3', ' A 287  ASP  HB3', -0.459, (309.143, 253.869, 280.34)), (' B  40  ASP  N  ', ' B  40  ASP  OD2', -0.459, (247.18, 259.386, 267.337)), (' C 148  ASN  N  ', ' C 148  ASN  OD1', -0.457, (285.492, 357.765, 247.639)), (' C 957  GLN  O  ', ' C 961  THR  OG1', -0.457, (274.853, 293.323, 284.145)), (' B 442  ASP  N  ', ' B 442  ASP  OD2', -0.456, (251.351, 327.156, 216.944)), (' B1106  GLN  HG3', ' B1109  PHE  H  ', -0.454, (260.234, 276.589, 340.286)), (' A 430  THR  OG1', ' A 515  PHE  O  ', -0.454, (258.811, 257.198, 232.776)), (' A 713  ALA  HB3', ' B 894  LEU  HB3', -0.453, (278.316, 253.191, 334.011)), (' C 276  LEU HD22', ' C 301  CYS  HA ', -0.453, (285.94, 306.745, 281.291)), (' C 428  ASP  N  ', ' C 428  ASP  OD1', -0.452, (288.797, 265.896, 252.195)), (' A  92  PHE  HB3', ' A 192  PHE  HB2', -0.452, (313.119, 243.749, 259.317)), (' C  84  LEU HD22', ' C 267  VAL HG11', -0.452, (297.578, 322.357, 258.773)), (' A 406  GLU  HA ', ' A 409  GLN  HG3', -0.451, (262.352, 250.524, 212.976)), (' A 319  ARG HH12', ' B 744  GLY  HA2', -0.45, (275.933, 254.54, 272.01)), (' C 895  GLN  H  ', ' C 895  GLN  HG3', -0.45, (253.539, 286.756, 334.074)), (' A 457  ARG  NH1', ' A 467  ASP  OD1', -0.45, (247.762, 260.467, 212.182)), (' B 119  ILE HG23', ' B 128  ILE HG12', -0.45, (233.049, 255.626, 248.747)), (' B 567  ARG  HD2', ' C  44  ARG HH12', -0.448, (271.568, 306.097, 272.61)), (' C 102  ARG  O  ', ' C 121  ASN  HB3', -0.448, (285.499, 333.236, 253.934)), (' A 947  LYS  HB2', ' A 947  LYS  HE2', -0.447, (293.019, 266.366, 306.197)), (' B  81  ASN  N  ', ' B  81  ASN  OD1', -0.447, (219.246, 270.757, 250.053)), (' B  34  ARG  NH2', ' B 191  GLU  OE2', -0.444, (229.262, 260.933, 268.111)), (' B 457  ARG HH21', ' B 469  SER  HB2', -0.443, (277.504, 317.932, 215.872)), (' B 410  ILE HD13', ' B 419  ALA  HB2', -0.441, (262.659, 309.534, 218.877)), (' C1106  GLN  HG3', ' C1108  ASN  H  ', -0.441, (284.31, 287.068, 340.501)), (' A  40  ASP  N  ', ' A  40  ASP  OD1', -0.438, (306.012, 260.006, 265.885)), (' A 253  ASP  N  ', ' A 253  ASP  OD2', -0.437, (328.982, 221.803, 244.892)), (' A 142  GLY  HA3', ' A 156  GLU  HB2', -0.437, (326.03, 231.549, 244.507)), (' B 394  ASN  N  ', ' B 394  ASN  OD1', -0.437, (269.33, 313.006, 240.132)), (' A 745  ASP  HB2', ' A 978  ASN HD21', -0.437, (300.18, 284.837, 266.618)), (' A 148  ASN  N  ', ' A 148  ASN  OD1', -0.436, (343.042, 230.825, 244.961)), (' C  18  LEU  HB2', ' C  21  ARG  HD2', -0.435, (303.588, 337.719, 248.004)), (' A  64  TRP  HE1', ' A 264  ALA  HB1', -0.434, (315.412, 231.987, 265.318)), (' A 983  ARG  HA ', ' C 390  LEU HD11', -0.434, (298.773, 279.514, 253.67)), (' A 559  PHE  HB2', ' A 577  ARG HH21', -0.433, (247.752, 245.595, 269.304)), (' A 318  PHE  H  ', ' A 594  GLY  HA2', -0.43, (279.477, 248.732, 279.117)), (' C 790  LYS  HA ', ' C 790  LYS  HD3', -0.43, (251.443, 295.787, 320.444)), (' C 153  MET  H  ', ' C 153  MET  HG3', -0.427, (284.464, 348.577, 248.4)), (' C 110  LEU HD22', ' C 135  PHE  HE1', -0.426, (291.951, 323.607, 244.263)), (' B  36  VAL  HB ', ' B 221  SER  HB3', -0.426, (235.077, 262.696, 270.821)), (' C  44  ARG  HB3', ' C  47  VAL HG12', -0.424, (273.2, 310.477, 277.696)), (' B 106  PHE  HB2', ' B 117  LEU  HB3', -0.423, (234.861, 264.283, 246.873)), (' B  44  ARG HH11', ' B  47  VAL HG11', -0.422, (251.506, 258.673, 275.402)), (' A 454  ARG  HD2', ' A 491  PRO  HB2', -0.422, (249.608, 257.638, 206.995)), (' A 106  PHE  HB3', ' A 235  ILE HD12', -0.422, (306.623, 245.47, 248.606)), (' B1115  ILE HG22', ' B1137  VAL HG13', -0.421, (265.377, 283.973, 356.77)), (' B  83  VAL HG12', ' B 237  ARG  HB3', -0.421, (229.547, 273.082, 247.333)), (' C 962  LEU  HA ', ' C 965  GLN HE21', -0.417, (272.206, 290.425, 279.126)), (' A  81  ASN  N  ', ' A  81  ASN  OD1', -0.417, (312.802, 228.184, 252.082)), (' C1119  ASN  HA ', ' C1119  ASN HD22', -0.417, (281.55, 279.038, 351.432)), (' B 329  PHE  N  ', ' B 330  PRO  HD2', -0.415, (255.792, 310.558, 255.599)), (' C 729  VAL HG23', ' C1022  ALA  HA ', -0.415, (268.711, 284.813, 306.609)), (' C 246  ARG  HD2', ' C 252  GLY  HA2', -0.415, (296.243, 347.36, 248.009)), (' A 246  ARG  NH1', ' A 252  GLY  O  ', -0.414, (328.733, 225.436, 243.882)), (' B 611  LEU HD13', ' B 650  LEU HD13', -0.414, (243.925, 289.177, 291.324)), (' A 182  LYS  HB2', ' A 182  LYS  HE3', -0.414, (330.056, 232.315, 263.801)), (' B  68  ILE  HA ', ' B 262  ALA  HA ', -0.413, (211.964, 264.163, 258.597)), (' B 598  ILE HD11', ' B 611  LEU HD22', -0.413, (245.722, 286.845, 291.94)), (' C 401  VAL HG22', ' C 509  ARG  HG2', -0.411, (294.682, 267.814, 227.76)), (' A 310  LYS  HB2', ' A 310  LYS  HE3', -0.41, (294.273, 250.32, 297.014)), (' B 428  ASP  N  ', ' B 428  ASP  OD2', -0.41, (268.48, 301.83, 228.892)), (' C 374  PHE  HA ', ' C 436  TRP  HB3', -0.408, (294.552, 277.276, 230.524)), (' A 153  MET  H  ', ' A 153  MET  HG3', -0.408, (335.493, 235.822, 245.85)), (' A 819  GLU  HG2', ' A1055  SER  H  ', -0.408, (301.292, 275.871, 312.988)), (' C 881  THR  O  ', ' C 901  GLN  NE2', -0.408, (262.381, 290.722, 329.818)), (' A 822  LEU HD13', ' A1061  VAL HG21', -0.406, (299.059, 270.805, 310.825)), (' A 277  LEU  HA ', ' A 277  LEU HD13', -0.404, (305.968, 255.292, 274.295)), (' A1142  GLN  HB3', ' A1143  PRO  HD3', -0.403, (275.623, 264.951, 366.065)), (' B 887  THR HG21', ' B 894  LEU HD12', -0.402, (278.885, 257.63, 331.807)), (' B 318  PHE  H  ', ' B 594  GLY  HA2', -0.402, (251.317, 288.832, 280.787)), (' C 718  PHE  HA ', ' C1069  PRO  HA ', -0.402, (284.95, 295.632, 332.691)), (' A 569  ILE  HA ', ' A 569  ILE HD12', -0.401, (254.047, 256.319, 280.462)), (' A  68  ILE HG23', ' A  70  VAL  H  ', -0.4, (321.333, 223.408, 260.868)), (' A 417  LYS  HD3', ' A 421  TYR  HD2', -0.4, (257.283, 258.896, 208.178)), (' B 575  ALA  HA ', ' B 586  ASP  HA ', -0.4, (259.595, 309.878, 273.008))]
data['cablam'] = [('A', '32', 'PHE', 'check CA trace,carbonyls, peptide', ' \nE--S-', (310.1, 240.0, 275.0)), ('A', '35', 'GLY', 'check CA trace,carbonyls, peptide', ' \nS---B', (308.9, 246.4, 268.7)), ('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSB-', (309.1, 263.2, 264.0)), ('A', '87', 'ASN', 'check CA trace,carbonyls, peptide', ' \nE--S-', (299.7, 242.5, 256.2)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--S-E', (299.6, 246.0, 257.8)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (302.3, 241.6, 244.5)), ('A', '124', 'THR', ' alpha helix', 'bend\n-SS-E', (329.4, 246.1, 247.8)), ('A', '231', 'ILE', ' beta sheet', ' \nE----', (307.2, 254.8, 245.1)), ('A', '232', 'GLY', ' beta sheet', ' \n-----', (303.5, 254.2, 245.5)), ('A', '257', 'GLY', 'check CA trace,carbonyls, peptide', ' \nSS---', (328.8, 221.3, 248.7)), ('A', '262', 'ALA', 'check CA trace,carbonyls, peptide', ' \n----E', (323.3, 229.7, 261.2)), ('A', '292', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (294.6, 247.0, 274.7)), ('A', '293', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSH', (295.9, 243.7, 275.9)), ('A', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (293.1, 251.9, 295.2)), ('A', '345', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nT-S--', (244.7, 237.2, 221.6)), ('A', '360', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nE-SSB', (247.0, 249.1, 242.2)), ('A', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (253.1, 256.5, 240.1)), ('A', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSII', (259.3, 257.0, 209.8)), ('A', '449', 'TYR', 'check CA trace,carbonyls, peptide', ' \n---S-', (245.6, 242.3, 205.1)), ('A', '450', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--S-E', (244.8, 243.4, 208.6)), ('A', '484', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nTSSBT', (244.3, 258.3, 195.6)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nSBTTE', (248.2, 262.5, 191.4)), ('A', '491', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-SEE', (249.3, 256.8, 204.1)), ('A', '496', 'GLY', ' beta sheet', ' \nE----', (253.6, 241.9, 204.6)), ('A', '504', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (262.0, 242.3, 207.6)), ('A', '564', 'GLN', 'check CA trace,carbonyls, peptide', ' \nT--EE', (250.7, 249.3, 264.8)), ('A', '565', 'PHE', 'check CA trace,carbonyls, peptide', 'strand\n--EEE', (253.3, 250.7, 267.2)), ('A', '601', 'GLY', 'check CA trace,carbonyls, peptide', ' \nES-TT', (297.0, 248.9, 294.4)), ('A', '614', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESS--', (274.1, 244.9, 285.2)), ('A', '639', 'GLY', 'check CA trace,carbonyls, peptide', ' \nS---S', (284.4, 232.3, 284.2)), ('A', '782', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nHHS--', (294.6, 283.7, 311.4)), ('A', '784', 'GLN', 'check CA trace,carbonyls, peptide', ' \nS---S', (291.5, 286.7, 316.1)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (304.3, 275.3, 334.2)), ('A', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (288.9, 280.7, 323.2)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSS', (286.1, 270.4, 319.6)), ('A', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (285.9, 263.4, 320.8)), ('A', '1070', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE---', (289.2, 254.8, 330.9)), ('A', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (265.9, 258.2, 357.8)), ('A', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (263.9, 260.6, 359.9)), ('A', '1107', 'ARG', 'check CA trace,carbonyls, peptide', 'bend\nE-SSS', (278.6, 262.2, 338.9)), ('A', '1131', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (261.7, 253.7, 345.0)), ('A', '1139', 'ASP', ' beta sheet', ' \n---TT', (274.5, 264.3, 361.3)), ('A', '34', 'ARG', 'check CA trace', ' \n-S---', (310.5, 244.3, 271.4)), ('A', '330', 'PRO', 'check CA trace', ' \n---S-', (254.5, 243.4, 253.2)), ('A', '348', 'ALA', 'check CA trace', ' \n----S', (246.2, 246.6, 217.0)), ('A', '359', 'SER', 'check CA trace', ' \nEE-SS', (248.2, 250.1, 238.7)), ('A', '600', 'PRO', 'check CA trace', 'bend\nEES-T', (293.6, 247.3, 294.9)), ('B', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SS-S', (232.1, 266.6, 274.0)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--S-E', (239.6, 271.7, 257.0)), ('B', '89', 'GLY', 'check CA trace,carbonyls, peptide', ' \n-S-EE', (237.9, 268.9, 258.9)), ('B', '99', 'ASN', 'check CA trace,carbonyls, peptide', ' \nSS---', (219.1, 255.4, 256.9)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (235.1, 272.1, 243.3)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-SS', (230.9, 269.7, 239.8)), ('B', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (232.0, 267.2, 234.4)), ('B', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'turn\n-TT-S', (223.0, 261.0, 241.0)), ('B', '256', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (205.7, 267.7, 245.2)), ('B', '257', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nSSS-B', (203.9, 264.4, 245.7)), ('B', '293', 'LEU', ' alpha helix', 'bend\nSSS-H', (238.4, 277.3, 275.7)), ('B', '309', 'GLU', 'check CA trace,carbonyls, peptide', ' \n---SS', (244.3, 272.3, 294.5)), ('B', '315', 'THR', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (249.2, 281.2, 282.5)), ('B', '345', 'THR', 'check CA trace,carbonyls, peptide', ' \nT----', (252.5, 326.2, 226.1)), ('B', '360', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nE-SSB', (266.0, 319.5, 246.5)), ('B', '375', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSB-', (247.0, 313.7, 225.7)), ('B', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-BSEE', (268.9, 311.8, 242.9)), ('B', '415', 'THR', ' beta sheet', ' \nT--SS', (264.4, 303.2, 216.5)), ('B', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSTT', (264.9, 309.0, 212.5)), ('B', '421', 'TYR', ' alpha helix', 'turn\nTTTTS', (269.9, 310.8, 214.3)), ('B', '443', 'SER', 'check CA trace,carbonyls, peptide', ' \nS---T', (250.5, 325.6, 212.9)), ('B', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT---', (253.8, 325.2, 206.5)), ('B', '450', 'ASN', 'check CA trace,carbonyls, peptide', ' \n----E', (259.5, 327.0, 213.5)), ('B', '477', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (282.5, 311.3, 197.7)), ('B', '482', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n--SSS', (282.6, 322.3, 202.3)), ('B', '484', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nSSSBT', (276.2, 323.0, 200.3)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\nSBTTB', (276.5, 318.6, 194.7)), ('B', '564', 'GLN', 'check CA trace,carbonyls, peptide', ' \nT--EE', (266.2, 313.6, 266.1)), ('B', '591', 'SER', 'check CA trace,carbonyls, peptide', ' \n----S', (252.0, 294.8, 276.7)), ('B', '600', 'PRO', 'check CA trace,carbonyls, peptide', ' \n----S', (240.4, 277.9, 295.0)), ('B', '604', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (235.2, 273.1, 296.7)), ('B', '613', 'GLN', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (250.4, 292.7, 287.4)), ('B', '638', 'THR', 'check CA trace,carbonyls, peptide', ' \nSS--S', (233.8, 292.8, 281.2)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (248.5, 287.5, 295.8)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nE-SSS', (250.9, 290.3, 296.5)), ('B', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \n---SE', (249.5, 288.8, 312.3)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (261.9, 251.6, 332.6)), ('B', '798', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nBSSS-', (260.4, 252.9, 335.8)), ('B', '803', 'SER', 'check CA trace,carbonyls, peptide', ' \nB--SS', (256.6, 249.4, 322.4)), ('B', '975', 'SER', 'check CA trace,carbonyls, peptide', ' \nS---H', (266.7, 263.9, 265.4)), ('B', '1041', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (265.1, 276.5, 318.8)), ('B', '1042', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (267.6, 273.8, 317.8)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (266.3, 270.5, 319.3)), ('B', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (260.2, 273.9, 320.4)), ('B', '1070', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE--E', (251.2, 274.8, 331.0)), ('B', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (266.2, 291.7, 358.6)), ('B', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSS-', (268.6, 293.4, 361.2)), ('B', '1131', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (263.5, 298.4, 346.8)), ('B', '214', 'ARG', 'check CA trace', 'bend\n-SSS-', (217.0, 266.1, 270.1)), ('B', '215', 'ASP', 'check CA trace', 'bend\nSSS--', (220.3, 267.7, 270.8)), ('B', '255', 'SER', 'check CA trace', 'bend\n-SSSS', (207.5, 267.4, 241.9)), ('B', '262', 'ALA', 'check CA trace', ' \n----E', (212.7, 262.2, 259.0)), ('B', '310', 'LYS', 'check CA trace', 'bend\n--SS-', (245.2, 275.6, 296.3)), ('B', '330', 'PRO', 'check CA trace', ' \n-----', (257.5, 313.4, 254.4)), ('B', '359', 'SER', 'check CA trace', ' \nEE-SS', (265.7, 318.5, 242.9)), ('B', '442', 'ASP', 'check CA trace', ' \nSS---', (251.4, 328.2, 215.5)), ('C', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (290.7, 320.7, 275.9)), ('C', '46', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (272.8, 311.7, 282.2)), ('C', '89', 'GLY', 'check CA trace,carbonyls, peptide', ' \nSS-EE', (290.7, 315.2, 259.7)), ('C', '99', 'ASN', 'check CA trace,carbonyls, peptide', ' \nSS--S', (286.7, 337.3, 259.8)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (293.8, 316.6, 245.5)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (291.9, 321.5, 236.6)), ('C', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (291.2, 332.8, 243.3)), ('C', '255', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (304.2, 345.0, 245.6)), ('C', '280', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-TT', (274.3, 316.5, 281.8)), ('C', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (291.5, 304.8, 296.7)), ('C', '315', 'THR', 'check CA trace,carbonyls, peptide', ' \nEE---', (294.0, 297.9, 283.6)), ('C', '360', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nE-SSB', (313.8, 269.8, 245.2)), ('C', '390', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (304.4, 279.0, 252.6)), ('C', '412', 'PRO', 'check CA trace,carbonyls, peptide', 'turn\nSSTT-', (286.4, 268.5, 246.5)), ('C', '415', 'THR', ' beta sheet', ' \nT--SS', (279.9, 264.0, 242.2)), ('C', '478', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (273.6, 236.6, 230.8)), ('C', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS--TT', (279.9, 238.4, 229.8)), ('C', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TTS', (283.6, 238.9, 230.6)), ('C', '496', 'GLY', ' beta sheet', ' \nE----', (284.6, 262.0, 220.2)), ('C', '525', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS---S', (309.5, 275.1, 249.4)), ('C', '531', 'THR', 'check CA trace,carbonyls, peptide', ' \n-----', (317.9, 285.5, 255.8)), ('C', '614', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESS--', (306.2, 290.2, 285.9)), ('C', '638', 'THR', 'check CA trace,carbonyls, peptide', ' \nSS--S', (312.7, 304.7, 284.0)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (299.8, 295.0, 296.7)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (301.2, 291.5, 297.3)), ('C', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--S-S', (257.4, 290.4, 266.5)), ('C', '890', 'ALA', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (260.2, 278.1, 324.8)), ('C', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (266.0, 284.5, 323.2)), ('C', '1041', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (282.3, 285.5, 320.9)), ('C', '1042', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (278.9, 284.7, 319.4)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (276.5, 287.6, 320.1)), ('C', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (282.7, 291.0, 321.4)), ('C', '1070', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE--E', (287.8, 297.9, 332.0)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nE-SSE', (295.9, 272.5, 361.1)), ('C', '1099', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (300.0, 292.2, 351.1)), ('C', '88', 'ASP', 'check CA trace', 'bend\n-SS-E', (292.8, 312.3, 258.3)), ('C', '262', 'ALA', 'check CA trace', 'strand\n--EEE', (296.0, 340.5, 262.2)), ('C', '359', 'SER', 'check CA trace', ' \nEE-SS', (310.5, 268.2, 244.5)), ('C', '422', 'ASN', 'check CA trace', 'bend\nHHS--', (287.5, 257.5, 237.3)), ('C', '456', 'PHE', 'check CA trace', 'bend\nE-SSS', (279.7, 251.2, 234.0)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (306.5, 285.2, 268.0)), ('C', '600', 'PRO', 'check CA trace', 'bend\nEES-T', (295.2, 307.4, 296.2)), ('C', '1058', 'HIS', 'check CA trace', 'turn\nETTEE', (266.7, 293.8, 302.9))]
data['smoc'] = [('A', 19, u'THR', 0.731012077708136, (319.01599999999996, 219.899, 245.038)), ('A', 25, u'PRO', 0.6508581257373072, (308.71799999999996, 222.654, 259.75)), ('A', 34, u'ARG', 0.7854461943679248, (310.48299999999995, 244.313, 271.448)), ('A', 59, u'PHE', 0.8035340591894706, (303.803, 238.591, 274.72999999999996)), ('A', 61, u'ASN', 0.7833964119079723, (303.151, 234.04399999999998, 269.734)), ('A', 88, u'ASP', 0.7065459931951722, (299.558, 245.953, 257.832)), ('A', 114, u'THR', 0.7644418399647608, (303.957, 244.36, 238.46800000000002)), ('A', 149, u'ASN', 0.7558927218578785, (343.414, 234.226, 246.991)), ('A', 153, u'MET', 0.7772936390317854, (333.369, 237.261, 245.60299999999998)), ('A', 165, u'ASN', 0.7759101432028581, (310.052, 248.36, 232.618)), ('A', 191, u'GLU', 0.8032157595882631, (315.566, 245.284, 263.582)), ('A', 195, u'LYS', 0.8108270059459106, (305.074, 249.75, 256.512)), ('A', 215, u'ASP', 0.7741755827441721, (314.807, 234.835, 272.324)), ('A', 221, u'SER', 0.778958333278019, (315.36400000000003, 250.48800000000003, 271.989)), ('A', 229, u'LEU', 0.8134946942776647, (310.76599999999996, 256.129, 249.27399999999997)), ('A', 234, u'ASN', 0.749641871633037, (300.86400000000003, 247.59, 245.98800000000003)), ('A', 241, u'LEU', 0.7798888723863404, (316.661, 235.589, 250.844)), ('A', 250, u'THR', 0.7324650209164874, (333.685, 222.07299999999998, 249.20499999999998)), ('A', 253, u'ASP', 0.7662838064079176, (328.134, 222.24299999999997, 243.448)), ('A', 254, u'SER', 0.7590349536275476, (324.392, 222.683, 243.96200000000002)), ('A', 259, u'THR', 0.7808158049482463, (326.77, 225.706, 253.954)), ('A', 263, u'ALA', 0.756674285895508, (321.02799999999996, 232.74699999999999, 261.70099999999996)), ('A', 267, u'VAL', 0.8105848820037307, (308.97799999999995, 237.593, 261.698)), ('A', 270, u'LEU', 0.7835229936181324, (302.21799999999996, 244.787, 263.26599999999996)), ('A', 293, u'LEU', 0.758180918307606, (295.90299999999996, 243.677, 275.944)), ('A', 309, u'GLU', 0.7251701446322899, (295.77099999999996, 253.605, 293.127)), ('A', 313, u'TYR', 0.813320931869554, (287.454, 253.136, 287.675)), ('A', 334, u'ASN', 0.698785858596352, (250.008, 240.197, 244.454)), ('A', 337, u'PRO', 0.7122935241032098, (248.65800000000002, 241.19899999999998, 235.464)), ('A', 348, u'ALA', 0.7638699943573787, (246.19, 246.60299999999998, 216.967)), ('A', 354, u'ASN', 0.7746261825194567, (245.85500000000002, 250.35100000000003, 222.77599999999998)), ('A', 360, u'ASN', 0.701206191015237, (246.983, 249.132, 242.184)), ('A', 371, u'SER', 0.6785693808803532, (262.48499999999996, 234.136, 231.92800000000003)), ('A', 374, u'PHE', 0.7675827159942367, (261.892, 237.478, 225.002)), ('A', 385, u'THR', 0.7531800762339219, (268.14400000000006, 245.829, 237.33200000000002)), ('A', 389, u'ASP', 0.7592812005948566, (264.101, 249.74899999999997, 243.04)), ('A', 407, u'VAL', 0.7966837533421369, (261.97799999999995, 247.505, 216.636)), ('A', 411, u'ALA', 0.7163968522076888, (263.43699999999995, 254.105, 221.242)), ('A', 414, u'GLN', 0.7161235171342957, (265.4309999999999, 258.07, 217.49800000000002)), ('A', 440, u'ASN', 0.6809131369559948, (251.915, 231.737, 215.79399999999998)), ('A', 459, u'SER', 0.7303996378678954, (252.58700000000002, 267.767, 211.08700000000002)), ('A', 462, u'LYS', 0.73765494321063, (253.089, 264.66700000000003, 219.64499999999998)), ('A', 465, u'GLU', 0.742341957712952, (248.76899999999998, 260.93499999999995, 221.29299999999998)), ('A', 479, u'PRO', 0.686772641527889, (242.748, 268.385, 192.702)), ('A', 483, u'VAL', 0.6774580700054618, (240.879, 259.843, 195.925)), ('A', 493, u'GLN', 0.7646016558410165, (249.111, 250.569, 203.491)), ('A', 518, u'LEU', 0.7533549151986318, (254.048, 262.445, 239.98100000000002)), ('A', 538, u'CYS', 0.7978805450568819, (269.064, 240.52100000000002, 270.2)), ('A', 554, u'GLU', 0.804187316063954, (256.547, 237.871, 274.173)), ('A', 568, u'ASP', 0.7862417854551079, (255.07299999999998, 253.186, 277.383)), ('A', 581, u'THR', 0.7533264945628388, (251.38000000000002, 237.089, 262.65700000000004)), ('A', 607, u'GLN', 0.7919825048748673, (295.59299999999996, 240.696, 290.245)), ('A', 633, u'TRP', 0.697527800634383, (275.372, 234.751, 279.34200000000004)), ('A', 646, u'ARG', 0.783779264659621, (272.409, 243.178, 293.82599999999996)), ('A', 662, u'CYS', 0.7452383200895862, (284.52599999999995, 247.88400000000001, 303.734)), ('A', 689, u'SER', 0.7106091747839302, (298.60900000000004, 233.795, 299.99399999999997)), ('A', 702, u'GLU', 0.7844691517440733, (277.627, 243.85700000000003, 318.599)), ('A', 714, u'ILE', 0.7933365652295443, (281.03, 255.10999999999999, 338.005)), ('A', 730, u'SER', 0.7831682899071171, (292.03599999999994, 278.629, 301.204)), ('A', 733, u'LYS', 0.7974692911076989, (294.382, 281.319, 293.51099999999997)), ('A', 735, u'SER', 0.7718718937802662, (293.72499999999997, 284.31, 287.15200000000004)), ('A', 736, u'VAL', 0.7422043888470256, (292.569, 283.603, 283.589)), ('A', 742, u'ILE', 0.8094856405561052, (291.126, 283.357, 272.881)), ('A', 745, u'ASP', 0.7935660824052362, (298.467, 287.394, 267.42099999999994)), ('A', 770, u'ILE', 0.8350565140606813, (286.912, 284.356, 293.949)), ('A', 793, u'PRO', 0.7848028513055142, (311.07099999999997, 282.814, 329.23699999999997)), ('A', 801, u'ASN', 0.7802057877332005, (306.684, 271.251, 329.32)), ('A', 827, u'THR', 0.6966346005246401, (303.845, 268.607, 298.887)), ('A', 852, u'ALA', 0.7241710238367292, (304.835, 278.009, 281.012)), ('A', 853, u'GLN', 0.7757485305715467, (301.309, 278.715, 282.28099999999995)), ('A', 865, u'LEU', 0.78414783180943, (300.02799999999996, 286.71799999999996, 303.904)), ('A', 888, u'PHE', 0.8165639173186849, (292.72499999999997, 287.616, 326.319)), ('A', 890, u'ALA', 0.8141976374951304, (287.204, 288.43699999999995, 325.23599999999993)), ('A', 893, u'ALA', 0.8129201256328334, (295.45, 290.592, 329.14400000000006)), ('A', 898, u'PHE', 0.7945964050895954, (299.122, 276.98599999999993, 334.676)), ('A', 944, u'ALA', 0.6476563225270503, (300.944, 263.02799999999996, 305.03599999999994)), ('A', 945, u'LEU', 0.7070343709445366, (297.579, 264.824, 305.127)), ('A', 970, u'PHE', 0.7937621140229602, (286.51599999999996, 271.989, 267.267)), ('A', 973, u'ILE', 0.8188348746356191, (291.404, 272.527, 260.168)), ('A', 987, u'PRO', 0.7996133656642148, (287.672, 286.572, 253.26)), ('A', 988, u'GLU', 0.7720370497575793, (287.887, 282.755, 253.439)), ('A', 1031, u'GLU', 0.782918142160506, (285.014, 278.16200000000003, 320.541)), ('A', 1043, u'CYS', 0.7611491945638489, (286.06, 270.367, 319.618)), ('A', 1045, u'LYS', 0.7005818021411351, (285.93899999999996, 263.41799999999995, 320.79499999999996)), ('A', 1079, u'PRO', 0.7460691179286804, (267.53299999999996, 257.694, 344.09)), ('A', 1085, u'GLY', 0.8075473559103087, (260.70799999999997, 260.294, 357.845)), ('A', 1111, u'GLU', 0.8171027851892871, (285.017, 259.65400000000005, 345.592)), ('A', 1123, u'SER', 0.8026124847649156, (262.20099999999996, 267.612, 350.656)), ('A', 1124, u'GLY', 0.7878270223624987, (258.883, 266.024, 351.58299999999997)), ('A', 1131, u'GLY', 0.7787570587738932, (261.72099999999995, 253.74499999999998, 344.99899999999997)), ('A', 1134, u'ASN', 0.7921655282857732, (266.717, 253.009, 354.156)), ('A', 1138, u'TYR', 0.8029323519353436, (275.547, 260.639, 360.77599999999995)), ('A', 1146, u'ASP', 0.7342357425485577, (277.373, 268.407, 373.306)), ('B', 25, u'PRO', 0.6987519545461333, (214.841, 277.474, 258.837)), ('B', 70, u'VAL', 0.7277102772838511, (205.889, 266.57, 258.633)), ('B', 87, u'ASN', 0.8073133735204473, (236.632, 273.373, 255.32100000000003)), ('B', 88, u'ASP', 0.8019663870165352, (239.602, 271.724, 257.04)), ('B', 110, u'LEU', 0.7606253263455696, (230.945, 269.72999999999996, 239.816)), ('B', 124, u'THR', 0.7389675328351567, (223.43800000000002, 247.185, 246.54)), ('B', 148, u'ASN', 0.7327647065206819, (202.701, 243.14, 245.041)), ('B', 150, u'LYS', 0.760689038970892, (205.901, 244.41, 251.18)), ('B', 176, u'LEU', 0.7245617083123997, (222.323, 246.348, 253.20899999999997)), ('B', 182, u'LYS', 0.6498434517480152, (209.38000000000002, 256.18, 259.325)), ('B', 183, u'GLN', 0.642245478831452, (208.31, 258.98599999999993, 261.666)), ('B', 207, u'HIS', 0.795706950875415, (228.80800000000002, 253.49800000000002, 264.54400000000004)), ('B', 220, u'PHE', 0.7646514557248275, (232.317, 260.392, 274.902)), ('B', 224, u'GLU', 0.811909779339347, (238.33200000000002, 255.067, 264.57099999999997)), ('B', 251, u'PRO', 0.7011021310186364, (201.79899999999998, 259.35, 241.80200000000002)), ('B', 275, u'PHE', 0.780300813228474, (244.007, 269.045, 272.98099999999994)), ('B', 277, u'LEU', 0.7388684731892788, (244.60999999999999, 263.32599999999996, 275.383)), ('B', 282, u'ASN', 0.7817087290015229, (243.63299999999998, 249.71499999999997, 277.88)), ('B', 323, u'THR', 0.7842822433397926, (245.341, 299.245, 266.691)), ('B', 333, u'THR', 0.6333239716179818, (254.92200000000003, 320.49399999999997, 252.285)), ('B', 334, u'ASN', 0.7297450842270613, (256.603, 322.34900000000005, 249.39000000000001)), ('B', 343, u'ASN', 0.6852118800948584, (251.57, 323.575, 232.647)), ('B', 348, u'ALA', 0.7656365428657006, (262.108, 325.02299999999997, 222.054)), ('B', 380, u'TYR', 0.6712375391030109, (256.38599999999997, 302.19, 228.91899999999998)), ('B', 381, u'GLY', 0.6254168847312324, (258.548, 299.762, 230.863)), ('B', 412, u'PRO', 0.6906449462885447, (262.78099999999995, 303.93699999999995, 225.11599999999999)), ('B', 417, u'LYS', 0.7175880314789003, (264.872, 309.02599999999995, 212.491)), ('B', 440, u'ASN', 0.6778623189044107, (246.971, 327.876, 219.82100000000003)), ('B', 446, u'GLY', 0.7155192843607916, (251.11299999999997, 326.64300000000003, 204.177)), ('B', 449, u'TYR', 0.7537126007753259, (258.909, 327.029, 209.75)), ('B', 460, u'ASN', 0.6523892297728423, (276.91099999999994, 308.27599999999995, 216.575)), ('B', 469, u'SER', 0.7384208348506972, (277.653, 320.837, 215.72899999999998)), ('B', 481, u'ASN', 0.7137761980878816, (283.93699999999995, 322.772, 198.789)), ('B', 489, u'TYR', 0.699245542512459, (272.318, 318.4959999999999, 201.17899999999997)), ('B', 494, u'SER', 0.7536955784194879, (261.969, 322.474, 208.206)), ('B', 528, u'LYS', 0.7587161409852736, (254.435, 310.566, 249.96800000000002)), ('B', 546, u'LEU', 0.8109705999208848, (263.03099999999995, 304.15000000000003, 262.63)), ('B', 554, u'GLU', 0.810711749566978, (253.461, 314.661, 275.924)), ('B', 592, u'PHE', 0.7663039904553365, (253.068, 295.10400000000004, 280.35400000000004)), ('B', 598, u'ILE', 0.7915582725000654, (243.46, 281.96799999999996, 290.612)), ('B', 599, u'THR', 0.7901177314402521, (241.71499999999997, 278.68, 291.42699999999996)), ('B', 603, u'ASN', 0.7541000718354707, (237.41, 270.151, 295.83299999999997)), ('B', 633, u'TRP', 0.6952574766209921, (241.24499999999998, 299.97599999999994, 279.942)), ('B', 646, u'ARG', 0.8188288551703925, (249.38500000000002, 297.722, 294.546)), ('B', 657, u'ASN', 0.7850851356607729, (237.24099999999999, 293.91499999999996, 306.124)), ('B', 661, u'GLU', 0.7686617257170514, (244.814, 283.41799999999995, 307.807)), ('B', 662, u'CYS', 0.7796405015342333, (246.80200000000002, 283.53299999999996, 304.572)), ('B', 717, u'ASN', 0.7928812184976054, (251.695, 272.857, 336.23299999999995)), ('B', 726, u'ILE', 0.7816536454587512, (262.30400000000003, 266.131, 309.024)), ('B', 731, u'MET', 0.8187643361025487, (269.759, 261.944, 297.46299999999997)), ('B', 736, u'VAL', 0.8243931420107806, (274.762, 258.99799999999993, 282.947)), ('B', 738, u'CYS', 0.7762076994101392, (278.512, 260.204, 277.651)), ('B', 756, u'TYR', 0.7809423970782491, (285.10200000000003, 267.29799999999994, 272.019)), ('B', 791, u'THR', 0.7725539152972631, (268.251, 246.618, 322.899)), ('B', 801, u'ASN', 0.7573173625881879, (256.16400000000004, 251.661, 328.35900000000004)), ('B', 803, u'SER', 0.7883128212570784, (256.57099999999997, 249.38800000000003, 322.409)), ('B', 810, u'SER', 0.7868645537322938, (259.007, 238.847, 314.803)), ('B', 827, u'THR', 0.694538930180296, (255.516, 256.835, 298.045)), ('B', 853, u'GLN', 0.7140938299270287, (266.068, 254.469, 281.061)), ('B', 854, u'LYS', 0.7674467530100406, (268.865, 251.871, 281.195)), ('B', 864, u'LEU', 0.8237974704914961, (276.45, 251.993, 300.066)), ('B', 867, u'ASP', 0.7953890525338146, (267.57099999999997, 249.287, 304.047)), ('B', 877, u'LEU', 0.8175346812190302, (271.34200000000004, 254.946, 319.19599999999997)), ('B', 882, u'ILE', 0.8223715591579522, (268.212, 254.52800000000002, 327.412)), ('B', 902, u'MET', 0.8232489420404626, (265.49299999999994, 261.55, 333.48499999999996)), ('B', 910, u'GLY', 0.8003080684707683, (266.651, 274.98499999999996, 335.79599999999994)), ('B', 911, u'VAL', 0.8019987398312066, (264.294, 272.574, 337.58599999999996)), ('B', 940, u'SER', 0.7256600985194159, (248.007, 261.195, 307.575)), ('B', 944, u'ALA', 0.7318189807778837, (252.347, 263.09099999999995, 304.635)), ('B', 945, u'LEU', 0.770039029690539, (256.137, 263.48799999999994, 304.445)), ('B', 970, u'PHE', 0.8370363123576673, (267.727, 271.69, 267.775)), ('B', 974, u'SER', 0.8154628550744468, (265.247, 265.551, 262.251)), ('B', 988, u'GLU', 0.8129331001246137, (276.43399999999997, 266.28299999999996, 253.437)), ('B', 990, u'GLU', 0.8330111317323557, (277.76099999999997, 266.254, 258.97599999999994)), ('B', 1003, u'SER', 0.8222983877196196, (271.45799999999997, 269.545, 277.802)), ('B', 1010, u'GLN', 0.8235402393590264, (271.27099999999996, 271.56, 288.40999999999997)), ('B', 1033, u'VAL', 0.7618699134803754, (270.442, 262.719, 320.87)), ('B', 1034, u'LEU', 0.7340763053725793, (274.043, 262.106, 321.98199999999997)), ('B', 1054, u'GLN', 0.7827961351954756, (264.52, 256.99799999999993, 313.514)), ('B', 1073, u'LYS', 0.8243074912986942, (249.9, 281.64900000000006, 338.853)), ('B', 1074, u'ASN', 0.7939190408932134, (250.79, 285.15700000000004, 340.02)), ('B', 1079, u'PRO', 0.7738320676901168, (263.749, 291.589, 345.325)), ('B', 1092, u'GLU', 0.7697217918336623, (269.113, 280.829, 343.119)), ('B', 1107, u'ARG', 0.802546635437186, (262.212, 280.306, 339.197)), ('B', 1125, u'ASN', 0.8050526063534621, (273.092, 296.875, 354.118)), ('B', 1127, u'ASP', 0.8057416548002481, (269.897, 301.60200000000003, 352.632)), ('B', 1145, u'LEU', 0.765221652929719, (271.10900000000004, 276.61, 371.183)), ('B', 1146, u'ASP', 0.6691168516491841, (267.93799999999993, 276.375, 373.29499999999996)), ('C', 16, u'VAL', 0.6831932905628741, (300.184, 337.627, 239.786)), ('C', 50, u'SER', 0.7212301338446067, (282.63, 305.914, 275.382)), ('C', 62, u'VAL', 0.8045994194419036, (300.258, 321.82, 267.04900000000004)), ('C', 87, u'ASN', 0.750485158859601, (295.387, 313.009, 255.504)), ('C', 88, u'ASP', 0.7319729147010632, (292.812, 312.26599999999996, 258.274)), ('C', 113, u'LYS', 0.7716791089164378, (292.205, 317.695, 236.656)), ('C', 114, u'THR', 0.7432536676828185, (290.183, 316.546, 239.7)), ('C', 140, u'PHE', 0.7744503417323501, (294.302, 335.39099999999996, 247.94299999999998)), ('C', 158, u'ARG', 0.746225059318193, (292.134, 336.252, 242.192)), ('C', 172, u'SER', 0.7695154396724104, (273.807, 330.868, 250.818)), ('C', 181, u'GLY', 0.6978422990318408, (291.30400000000003, 344.967, 258.80400000000003)), ('C', 182, u'LYS', 0.6563887184513693, (292.607, 346.624, 261.969)), ('C', 207, u'HIS', 0.783104099510428, (280.89799999999997, 331.158, 267.70599999999996)), ('C', 215, u'ASP', 0.7281265912441742, (296.907, 332.141, 272.258)), ('C', 233, u'ILE', 0.7328356255220493, (284.57099999999997, 313.319, 245.701)), ('C', 234, u'ASN', 0.7165920177393852, (287.93299999999994, 312.625, 247.36)), ('C', 276, u'LEU', 0.761445716104658, (284.76099999999997, 309.639, 277.843)), ('C', 292, u'ALA', 0.7640311087630789, (294.566, 306.305, 276.67900000000003)), ('C', 293, u'LEU', 0.7825923683190251, (296.88, 309.274, 277.394)), ('C', 309, u'GLU', 0.7857073683083987, (288.168, 305.78999999999996, 295.198)), ('C', 310, u'LYS', 0.8146653470333062, (291.53799999999995, 304.83799999999997, 296.663)), ('C', 320, u'VAL', 0.7819936904212691, (306.381, 293.594, 273.85900000000004)), ('C', 321, u'GLN', 0.7820901997755304, (305.858, 294.412, 270.191)), ('C', 346, u'ARG', 0.7391500934841663, (300.269, 264.799, 224.577)), ('C', 348, u'ALA', 0.7880007280266459, (297.279, 261.126, 229.85500000000002)), ('C', 354, u'ASN', 0.804806460449683, (300.337, 260.02799999999996, 235.033)), ('C', 371, u'SER', 0.6564810888045015, (304.269, 279.42999999999995, 229.542)), ('C', 391, u'CYS', 0.7951763166867148, (306.42599999999993, 275.957, 251.677)), ('C', 402, u'ILE', 0.8221858676937895, (288.575, 265.23499999999996, 230.045)), ('C', 413, u'GLY', 0.7451493822672551, (282.677, 267.93899999999996, 247.124)), ('C', 446, u'GLY', 0.6921713258551185, (288.93699999999995, 262.53099999999995, 212.008)), ('C', 458, u'LYS', 0.77811585568765, (281.32599999999996, 248.166, 239.816)), ('C', 465, u'GLU', 0.7558795105897029, (294.34200000000004, 255.031, 242.836)), ('C', 466, u'ARG', 0.7644284470111854, (294.44599999999997, 253.845, 239.232)), ('C', 489, u'TYR', 0.7580549937970857, (277.853, 246.811, 227.023)), ('C', 527, u'PRO', 0.7522697555758953, (311.518, 281.21799999999996, 246.19899999999998)), ('C', 528, u'LYS', 0.7339919393260367, (311.756, 282.14400000000006, 249.89100000000002)), ('C', 564, u'GLN', 0.7399835619917562, (312.319, 269.325, 262.324)), ('C', 565, u'PHE', 0.7561198544404482, (309.91799999999995, 270.57099999999997, 265.013)), ('C', 568, u'ASP', 0.8191690103760433, (305.59599999999995, 269.90599999999995, 274.47099999999995)), ('C', 569, u'ILE', 0.8177611651809839, (302.529, 269.09099999999995, 276.601)), ('C', 603, u'ASN', 0.7713096695739163, (289.834, 314.037, 295.265)), ('C', 607, u'GLN', 0.7930028141116653, (299.99699999999996, 311.315, 290.88599999999997)), ('C', 617, u'CYS', 0.758241139640788, (313.855, 295.73599999999993, 287.758)), ('C', 637, u'SER', 0.6168958176240535, (310.14400000000006, 305.139, 281.294)), ('C', 639, u'GLY', 0.7198947301966225, (310.537, 306.585, 286.54900000000004)), ('C', 646, u'ARG', 0.7923188710492476, (308.01099999999997, 289.484, 295.08)), ('C', 653, u'ALA', 0.8165788600518731, (306.551, 304.60200000000003, 295.40999999999997)), ('C', 666, u'ILE', 0.7905633557427246, (299.832, 294.957, 296.665)), ('C', 676, u'THR', 0.8128078410327825, (304.09599999999995, 311.073, 305.27599999999995)), ('C', 689, u'SER', 0.7471717987169695, (303.84900000000005, 316.693, 302.176)), ('C', 706, u'ALA', 0.7810760272456917, (305.346, 288.13, 332.48599999999993)), ('C', 725, u'GLU', 0.7707703920985098, (276.17900000000003, 293.67400000000004, 313.29699999999997)), ('C', 729, u'VAL', 0.7897131211425986, (268.606, 288.14000000000004, 305.019)), ('C', 742, u'ILE', 0.7828335004244352, (264.282, 285.683, 272.97099999999995)), ('C', 784, u'GLN', 0.803988313376445, (259.34700000000004, 283.51599999999996, 315.453)), ('C', 801, u'ASN', 0.7983803504881315, (265.043, 304.279, 328.656)), ('C', 813, u'SER', 0.787515196980795, (254.56, 304.772, 310.45)), ('C', 826, u'VAL', 0.7811240545269481, (269.835, 302.47999999999996, 301.902)), ('C', 827, u'THR', 0.6656729615359464, (268.697, 304.566, 298.924)), ('C', 852, u'ALA', 0.6589607394111864, (262.681, 301.385, 282.719)), ('C', 889, u'GLY', 0.7182481066186058, (260.52799999999996, 281.663, 323.42199999999997)), ('C', 896, u'ILE', 0.8082844826730995, (258.685, 289.47599999999994, 335.16200000000003)), ('C', 912, u'THR', 0.814260795994135, (276.35400000000004, 288.402, 340.92499999999995)), ('C', 938, u'LEU', 0.8157072216969032, (274.98199999999997, 305.253, 312.07099999999997)), ('C', 945, u'LEU', 0.7613623351312987, (276.687, 299.873, 305.765)), ('C', 954, u'GLN', 0.8577420950428788, (274.84900000000005, 293.065, 292.23599999999993)), ('C', 966, u'LEU', 0.8240276637555314, (270.311, 292.42999999999995, 273.20799999999997)), ('C', 971, u'GLY', 0.800819664614393, (278.666, 286.96799999999996, 264.977)), ('C', 997, u'ILE', 0.8275766267693072, (268.564, 282.622, 269.676)), ('C', 1019, u'ARG', 0.8388439525413262, (270.09799999999996, 281.003, 302.08799999999997)), ('C', 1037, u'SER', 0.7730878730071058, (274.068, 282.52, 324.71)), ('C', 1062, u'PHE', 0.7738594555119327, (271.151, 293.329, 315.828)), ('C', 1078, u'ALA', 0.7996297587434612, (297.047, 280.914, 346.33799999999997)), ('C', 1079, u'PRO', 0.7519975652924065, (296.106, 277.374, 345.256)), ('C', 1091, u'ARG', 0.8118391875250099, (284.09799999999996, 276.004, 346.26)), ('C', 1110, u'TYR', 0.8225665042200792, (286.613, 291.917, 343.509)), ('C', 1111, u'GLU', 0.821895407118677, (284.66700000000003, 291.137, 346.705)), ('C', 1123, u'SER', 0.8035580356960634, (289.243, 266.83799999999997, 350.37)), ('C', 1124, u'GLY', 0.8063331438085637, (292.49699999999996, 265.562, 351.84900000000005)), ('C', 1134, u'ASN', 0.8082960963260519, (299.675, 278.64400000000006, 356.027)), ('C', 1138, u'TYR', 0.8333721156506976, (287.672, 281.79599999999994, 360.93299999999994)), ('C', 1146, u'ASP', 0.6859097444963036, (279.58099999999996, 280.807, 374.09299999999996))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-11683/7a93/Model_validation_1/validation_cootdata/molprobity_probe7a93_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
