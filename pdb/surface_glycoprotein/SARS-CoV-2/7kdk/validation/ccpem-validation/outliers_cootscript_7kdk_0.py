
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' C1050  MET  HE3', ' C1052  PHE  CZ ', -0.6, (143.629, 171.389, 120.722)), (' A1050  MET  HE3', ' A1052  PHE  CZ ', -0.593, (155.369, 139.348, 120.794)), (' A1050  MET  HE3', ' A1052  PHE  CE2', -0.575, (154.942, 139.501, 120.969)), (' C1050  MET  HE3', ' C1052  PHE  CE2', -0.569, (143.893, 171.55, 120.886)), (' A 391  CYS  HB2', ' A 525  CYS  HA ', -0.539, (187.014, 168.383, 193.778)), (' B 391  CYS  HB2', ' B 525  CYS  HA ', -0.525, (136.134, 178.259, 193.841)), (' C 391  CYS  HB2', ' C 525  CYS  HA ', -0.52, (152.954, 128.897, 194.304)), (' A1131  GLY  HA3', ' A1309  NAG  H83', -0.509, (183.453, 165.03, 103.134)), (' A 105  ILE HG22', ' A 110  LEU HD23', -0.505, (187.956, 122.896, 197.896)), (' B1105  THR HG23', ' B1111  GLU  H  ', -0.492, (160.849, 175.827, 102.7)), (' C 115  GLN HE22', ' C 167  THR  CG2', -0.431, (121.855, 157.361, 205.71)), (' B  64  TRP  CD1', ' B 266  TYR  CE2', -0.426, (179.239, 209.629, 177.729)), (' B1075  PHE  CB ', ' B1096  VAL HG13', -0.415, (153.981, 180.933, 103.021)), (' C 391  CYS  CB ', ' C 525  CYS  HA ', -0.402, (152.891, 129.309, 193.857))]
data['cbeta'] = [('A', '  99 ', 'ASN', ' ', 0.6778523075196052, (183.108, 105.914, 186.829)), ('A', ' 123 ', 'ALA', ' ', 0.2528456691742738, (179.37499999999994, 104.20999999999997, 191.992)), ('A', ' 391 ', 'CYS', ' ', 0.3387212806491526, (186.62, 168.214, 192.516)), ('A', ' 571 ', 'ASP', ' ', 0.2659504956441618, (177.66199999999995, 170.435, 174.621)), ('A', '1083 ', 'HIS', ' ', 0.27414990438347875, (175.03599999999994, 163.44700000000006, 89.454)), ('B', ' 123 ', 'ALA', ' ', 0.2564308550947556, (193.259, 200.551, 187.669)), ('B', ' 391 ', 'CYS', ' ', 0.29431680832575485, (136.542, 178.10599999999994, 192.546)), ('C', ' 391 ', 'CYS', ' ', 0.3029139659195047, (153.022, 129.699, 192.626))]
data['smoc'] = [('A', 67, u'ALA', 0.7267286531935051, (193.833, 109.03, 186.127)), ('A', 104, u'TRP', 0.6344258478853187, (184.98800000000003, 118.232, 193.198)), ('A', 110, u'LEU', 0.7203695135561419, (190.01299999999998, 125.288, 201.089)), ('A', 133, u'PHE', 0.7529045175665949, (185.809, 120.304, 208.033)), ('A', 136, u'CYS', 0.8150152005012334, (192.77599999999998, 115.111, 203.6)), ('A', 201, u'PHE', 0.7625594281983805, (176.094, 127.67099999999999, 192.23299999999998)), ('A', 213, u'VAL', 0.7810178751288384, (190.85200000000003, 107.74900000000001, 173.038)), ('A', 216, u'LEU', 0.7900301213073124, (188.024, 115.64999999999999, 173.369)), ('A', 217, u'PRO', 0.7814124044450209, (185.71699999999998, 114.67999999999999, 170.41899999999998)), ('A', 220, u'PHE', 0.7308581394729843, (178.499, 119.26400000000001, 168.71299999999997)), ('A', 279, u'TYR', 0.7218850953983139, (167.18, 124.76, 168.242)), ('A', 299, u'THR', 0.6902338926958368, (178.92800000000003, 137.823, 160.623)), ('A', 309, u'GLU', 0.7774660108088478, (175.686, 134.672, 151.21299999999997)), ('A', 347, u'PHE', 0.8619081796510071, (174.725, 177.997, 214.61499999999998)), ('A', 365, u'TYR', 0.7741527452112057, (182.748, 163.52100000000002, 201.971)), ('A', 381, u'GLY', 0.7934165084520822, (171.895, 166.594, 191.062)), ('A', 382, u'VAL', 0.7694319226925771, (174.61399999999998, 164.414, 192.795)), ('A', 389, u'ASP', 0.7120211531466958, (185.19, 161.038, 192.55700000000002)), ('A', 398, u'ASP', 0.7552678579588483, (174.641, 177.32200000000003, 204.72)), ('A', 413, u'GLY', 0.7380002434097555, (160.622, 173.964, 194.74099999999999)), ('A', 423, u'TYR', 0.7680881192079694, (165.44, 179.984, 203.154)), ('A', 427, u'ASP', 0.7756395655987431, (164.30100000000002, 175.22, 191.99)), ('A', 442, u'ASP', 0.8512817426876587, (170.594, 174.191, 221.32000000000002)), ('A', 491, u'PRO', 0.6461300722262232, (157.136, 188.758, 210.33200000000002)), ('A', 495, u'TYR', 0.7833599781242672, (160.429, 178.813, 218.965)), ('A', 503, u'VAL', 0.8173030435739964, (160.131, 165.267, 219.36200000000002)), ('A', 519, u'HIS', 0.6080236350560889, (183.165, 173.761, 184.05200000000002)), ('A', 524, u'VAL', 0.7755271278382346, (187.393, 172.076, 196.366)), ('A', 547, u'THR', 0.7132597810946095, (185.55800000000002, 161.45100000000002, 183.086)), ('A', 566, u'GLY', 0.6713149893002555, (186.72, 173.73299999999998, 175.60899999999998)), ('A', 570, u'ALA', 0.525026022051406, (177.91, 168.272, 170.445)), ('A', 595, u'VAL', 0.6451451850232421, (184.314, 146.14399999999998, 160.879)), ('A', 596, u'SER', 0.6692140307584885, (182.94, 145.19, 157.48700000000002)), ('A', 650, u'LEU', 0.6433135790397658, (191.73, 145.69, 154.38100000000003)), ('A', 653, u'ALA', 0.7015426919326615, (192.55200000000002, 139.77499999999998, 151.064)), ('A', 669, u'GLY', 0.5837089811321694, (187.155, 151.783, 143.21499999999997)), ('A', 699, u'LEU', 0.7150086949407092, (184.73499999999999, 149.508, 134.242)), ('A', 741, u'TYR', 0.6164047532335809, (149.622, 144.201, 168.74399999999997)), ('A', 745, u'ASP', 0.7142313953173642, (143.646, 141.37800000000001, 174.71499999999997)), ('A', 755, u'GLN', 0.663039196933915, (145.123, 158.10899999999998, 176.61399999999998)), ('A', 760, u'CYS', 0.6462009356629257, (146.046, 153.694, 166.815)), ('A', 796, u'ASP', 0.6432284624533757, (149.559, 129.80100000000002, 112.533)), ('A', 816, u'SER', 0.5602376209256323, (152.287, 129.54, 130.899)), ('A', 819, u'GLU', 0.5973249529704462, (154.937, 131.82100000000003, 134.411)), ('A', 870, u'ILE', 0.569123721476684, (146.48800000000003, 137.98800000000003, 136.88000000000002)), ('A', 876, u'ALA', 0.5355768986696979, (144.60299999999998, 138.51399999999998, 127.268)), ('A', 877, u'LEU', 0.5943161418655432, (147.411, 141.101, 126.93)), ('A', 888, u'PHE', 0.559997439111236, (144.10899999999998, 146.46, 120.79100000000001)), ('A', 904, u'TYR', 0.4520284709524345, (155.45800000000003, 146.657, 111.081)), ('A', 924, u'ALA', 0.5135527554372745, (161.542, 133.011, 113.928)), ('A', 945, u'LEU', 0.5681579301963653, (164.266, 136.875, 140.335)), ('A', 948, u'LEU', 0.5639125387949314, (160.809, 140.177, 143.48700000000002)), ('A', 962, u'LEU', 0.6117959155982641, (157.74399999999997, 143.947, 164.35800000000003)), ('A', 970, u'PHE', 0.6035024040255607, (161.509, 149.08, 176.815)), ('A', 989, u'ALA', 0.6037653772363808, (151.29, 147.953, 186.866)), ('A', 996, u'LEU', 0.5524459333238189, (155.425, 148.752, 176.89800000000002)), ('A', 997, u'ILE', 0.5509621602579795, (152.678, 150.89200000000002, 175.225)), ('A', 1014, u'ARG', 0.5942563726859326, (158.442, 151.142, 150.83700000000002)), ('A', 1015, u'ALA', 0.6001602871016983, (154.893, 151.38700000000003, 149.38200000000003)), ('A', 1039, u'ARG', 0.5028377025685097, (162.512, 155.38700000000003, 123.88199999999999)), ('A', 1042, u'PHE', 0.47559463030613164, (163.20899999999997, 151.656, 127.864)), ('A', 1078, u'ALA', 0.4485461067396217, (179.994, 160.317, 101.785)), ('A', 1137, u'VAL', 0.6455746183423955, (173.517, 158.783, 89.781)), ('A', 1303, u'NAG', 0.8284188976188828, (164.82600000000002, 117.334, 163.30800000000002)), ('A', 1304, u'NAG', 0.772964063008895, (199.04299999999998, 174.657, 195.78)), ('A', 1306, u'NAG', 0.7556150110774962, (175.515, 130.61299999999997, 144.725)), ('B', 58, u'PHE', 0.7170215142206735, (172.767, 197.13299999999998, 170.748)), ('B', 67, u'ALA', 0.6736312941430395, (184.123, 213.108, 186.10299999999998)), ('B', 95, u'THR', 0.741734614108953, (186.752, 207.32800000000003, 178.782)), ('B', 101, u'ILE', 0.625224610021034, (186.70399999999998, 206.88000000000002, 188.66299999999998)), ('B', 104, u'TRP', 0.6749554845945203, (180.817, 201.8, 193.171)), ('B', 114, u'THR', 0.7520635723148547, (170.622, 197.40200000000002, 205.26999999999998)), ('B', 117, u'LEU', 0.6571112920911965, (177.74699999999999, 196.303, 198.58700000000002)), ('B', 121, u'ASN', 0.5864770958418135, (188.972, 199.70399999999998, 192.72)), ('B', 128, u'ILE', 0.6358169221507936, (184.88800000000003, 194.86200000000002, 198.467)), ('B', 217, u'PRO', 0.7916684355935928, (183.061, 204.555, 170.529)), ('B', 220, u'PHE', 0.7003177531914494, (183.11499999999998, 195.383, 169.077)), ('B', 232, u'GLY', 0.7544878786654692, (172.71499999999997, 186.77499999999998, 199.18)), ('B', 240, u'THR', 0.6328619704718434, (179.972, 205.718, 191.74099999999999)), ('B', 270, u'LEU', 0.6849603527516898, (171.255, 195.14, 180.869)), ('B', 289, u'VAL', 0.694878447663529, (173.918, 189.88200000000003, 166.767)), ('B', 308, u'VAL', 0.8022640472331766, (171.88200000000003, 186.218, 154.953)), ('B', 327, u'VAL', 0.7054492397384025, (138.95700000000002, 187.753, 186.955)), ('B', 363, u'ALA', 0.8147179901495138, (137.04299999999998, 179.312, 201.08800000000002)), ('B', 365, u'TYR', 0.7592506976225953, (142.622, 176.82000000000002, 201.90200000000002)), ('B', 373, u'SER', 0.8891503261854495, (147.455, 171.708, 213.617)), ('B', 381, u'GLY', 0.7725641398972076, (145.226, 166.23, 191.583)), ('B', 382, u'VAL', 0.7229276608243739, (145.772, 169.835, 192.866)), ('B', 406, u'GLU', 0.8085006752247865, (146.454, 153.429, 209.42800000000003)), ('B', 423, u'TYR', 0.7894962065437384, (136.765, 154.061, 203.345)), ('B', 433, u'VAL', 0.7671797334514131, (143.657, 164.059, 202.74299999999997)), ('B', 442, u'ASP', 0.8540197568395489, (139.51299999999998, 160.864, 221.434)), ('B', 449, u'TYR', 0.8378642653091929, (135.83700000000002, 151.68800000000002, 222.185)), ('B', 462, u'LYS', 0.7623683828739541, (133.654, 150.539, 196.58800000000002)), ('B', 489, u'TYR', 0.7196970928090037, (130.815, 136.97899999999998, 214.228)), ('B', 501, u'ASN', 0.8388493884150773, (149.27899999999997, 154.612, 223.819)), ('B', 512, u'VAL', 0.7250799093806917, (139.185, 164.178, 203.18)), ('B', 519, u'HIS', 0.6622538250254509, (131.271, 171.997, 184.21699999999998)), ('B', 566, u'GLY', 0.6586594700540819, (131.656, 175.43800000000002, 175.565)), ('B', 596, u'SER', 0.6461453783074486, (158.495, 186.637, 157.57899999999998)), ('B', 597, u'VAL', 0.6676829319193512, (161.45000000000002, 188.92200000000003, 156.853)), ('B', 611, u'LEU', 0.642708057936646, (155.254, 190.296, 156.248)), ('B', 668, u'ALA', 0.6967575788589327, (148.77599999999998, 185.403, 146.36100000000002)), ('B', 699, u'LEU', 0.5877369140891118, (153.664, 185.85500000000002, 134.197)), ('B', 714, u'ILE', 0.5499111743457197, (157.86700000000002, 179.44899999999998, 108.73100000000001)), ('B', 729, u'VAL', 0.5809887668916436, (172.26999999999998, 161.26399999999998, 141.17499999999998)), ('B', 735, u'SER', 0.650670167876397, (176.75, 155.123, 158.35700000000003)), ('B', 738, u'CYS', 0.4893481622791156, (173.59, 154.05800000000002, 166.68)), ('B', 742, u'ILE', 0.5480778782684868, (173.289, 157.317, 171.539)), ('B', 759, u'PHE', 0.6454057775831809, (165.607, 149.737, 167.089)), ('B', 796, u'ASP', 0.6021267911282857, (188.318, 165.195, 112.516)), ('B', 870, u'ILE', 0.5042026784055935, (182.73399999999998, 158.52, 136.854)), ('B', 876, u'ALA', 0.508435176421708, (183.236, 156.57299999999998, 127.28)), ('B', 890, u'ALA', 0.5778635859360917, (171.63899999999998, 149.523, 120.51)), ('B', 896, u'ILE', 0.5518548284885345, (180.033, 157.287, 111.52499999999999)), ('B', 897, u'PRO', 0.5439432980362342, (181.531, 160.722, 110.577)), ('B', 901, u'GLN', 0.5076244876366537, (175.642, 161.70499999999998, 112.55499999999999)), ('B', 912, u'THR', 0.5063068611182897, (165.869, 167.76, 105.762)), ('B', 917, u'TYR', 0.5326984333736605, (175.485, 169.969, 105.0)), ('B', 923, u'ILE', 0.4534838881595947, (176.016, 174.97299999999998, 112.68799999999999)), ('B', 930, u'ALA', 0.4555398831699821, (177.153, 177.75, 122.614)), ('B', 934, u'ILE', 0.5820081467414521, (178.55, 177.189, 128.94899999999998)), ('B', 980, u'ILE', 0.6302428050634978, (175.30800000000002, 161.824, 184.697)), ('B', 997, u'ILE', 0.6193196193249134, (168.471, 157.38000000000002, 175.225)), ('B', 1016, u'ALA', 0.6349390194474176, (163.58700000000002, 158.323, 147.648)), ('B', 1030, u'SER', 0.4926814560219983, (169.42200000000003, 156.42100000000002, 127.74600000000001)), ('B', 1039, u'ARG', 0.5343676271244846, (159.665, 163.73399999999998, 123.826)), ('B', 1040, u'VAL', 0.5626389209855978, (158.999, 167.508, 123.979)), ('B', 1042, u'PHE', 0.486410128334931, (162.651, 166.008, 127.89)), ('B', 1062, u'PHE', 0.5197119202790546, (173.58200000000002, 167.107, 130.49)), ('B', 1066, u'THR', 0.4942974384597902, (168.72299999999998, 171.464, 120.561)), ('B', 1072, u'GLU', 0.5819292322138804, (160.151, 183.635, 110.98)), ('B', 1095, u'PHE', 0.517024951957501, (152.015, 174.758, 100.752)), ('B', 1121, u'PHE', 0.6085416903965497, (149.864, 163.282, 96.43)), ('B', 1145, u'LEU', 0.7093773076661624, (157.532, 163.42600000000002, 76.97)), ('B', 1301, u'NAG', 0.7726148709303621, (124.809, 184.70899999999997, 190.954)), ('B', 1303, u'NAG', 0.7735900186310929, (173.627, 188.316, 145.21599999999998)), ('B', 1307, u'NAG', 0.8521159012837739, (191.37, 184.79399999999998, 163.196)), ('C', 36, u'VAL', 0.6904852639608156, (119.57, 159.60899999999998, 175.189)), ('C', 80, u'ASP', 0.6826879615329149, (100.67699999999999, 147.648, 189.49)), ('C', 92, u'PHE', 0.5928642142915863, (111.988, 155.354, 183.267)), ('C', 137, u'ASN', 0.7145844654948996, (105.48100000000001, 149.684, 202.22899999999998)), ('C', 168, u'PHE', 0.7362862415695703, (120.868, 162.343, 203.86100000000002)), ('C', 201, u'PHE', 0.7335543927372572, (123.109, 159.202, 192.281)), ('C', 211, u'ASN', 0.7767915067106155, (100.708, 161.73399999999998, 168.762)), ('C', 220, u'PHE', 0.6979592271222258, (114.377, 161.228, 168.67499999999998)), ('C', 245, u'HIS', 0.7219647110271515, (91.928, 157.491, 197.153)), ('C', 263, u'ALA', 0.711127976328944, (98.203, 156.425, 182.844)), ('C', 275, u'PHE', 0.6533612055380837, (127.092, 156.439, 171.323)), ('C', 279, u'TYR', 0.7291462993459753, (125.04, 168.35200000000003, 168.221)), ('C', 296, u'LEU', 0.7227513629512513, (125.96700000000001, 149.859, 160.04399999999998)), ('C', 315, u'THR', 0.5875965183748341, (134.906, 148.43800000000002, 161.756)), ('C', 331, u'ASN', 0.7906572993536001, (149.334, 118.745, 193.20499999999998)), ('C', 340, u'GLU', 0.8755986907066777, (159.91299999999998, 128.70899999999997, 211.434)), ('C', 346, u'ARG', 0.825280429982918, (166.43, 133.839, 218.05100000000002)), ('C', 365, u'TYR', 0.8239637478206938, (150.97, 135.74499999999998, 201.847)), ('C', 382, u'VAL', 0.7329095044626497, (155.718, 142.12, 192.829)), ('C', 389, u'ASP', 0.7122318943381805, (147.461, 134.17399999999998, 192.753)), ('C', 391, u'CYS', 0.7426654929531771, (153.77499999999998, 130.939, 192.17299999999997)), ('C', 410, u'ILE', 0.7707199784824705, (167.903, 146.761, 202.79899999999998)), ('C', 423, u'TYR', 0.7804345498446607, (174.01899999999998, 142.102, 202.912)), ('C', 432, u'CYS', 0.7829344662449114, (159.721, 141.57, 199.75)), ('C', 467, u'ASP', 0.8173345147909138, (181.024, 136.32700000000003, 205.141)), ('C', 503, u'VAL', 0.8531265733109651, (163.525, 154.201, 219.048)), ('C', 511, u'VAL', 0.7577075910342203, (162.819, 138.612, 206.978)), ('C', 513, u'LEU', 0.7606402236076066, (161.65200000000002, 136.899, 200.90800000000002)), ('C', 546, u'LEU', 0.7487405402276457, (151.11299999999997, 132.258, 184.13)), ('C', 552, u'LEU', 0.7883408590162772, (144.52800000000002, 124.51, 174.788)), ('C', 565, u'PHE', 0.671603784144447, (157.017, 126.288, 179.21699999999998)), ('C', 566, u'GLY', 0.6485033847016253, (157.74299999999997, 126.81700000000001, 175.483)), ('C', 596, u'SER', 0.6390087485354247, (134.883, 144.507, 157.472)), ('C', 672, u'ALA', 0.6607985638590684, (129.804, 142.57299999999998, 146.176)), ('C', 689, u'SER', 0.7947096322404009, (113.48400000000001, 142.737, 145.55200000000002)), ('C', 712, u'ILE', 0.56333998004315, (143.43800000000002, 141.57899999999998, 108.465)), ('C', 713, u'ALA', 0.5265551316012237, (140.85000000000002, 143.963, 109.952)), ('C', 738, u'CYS', 0.49663629905439904, (155.24599999999998, 173.97299999999998, 166.648)), ('C', 741, u'TYR', 0.5625614390871969, (150.692, 173.811, 168.73499999999999)), ('C', 746, u'SER', 0.6455749551733055, (152.35000000000002, 178.791, 178.12)), ('C', 749, u'CYS', 0.568930659737492, (155.707, 174.67, 178.555)), ('C', 752, u'LEU', 0.6256333940567317, (160.314, 172.672, 178.86200000000002)), ('C', 753, u'LEU', 0.5506201014132766, (160.153, 172.444, 175.024)), ('C', 770, u'ILE', 0.5794017470701736, (156.86, 170.972, 151.64499999999998)), ('C', 777, u'ASN', 0.4876886599121949, (155.17899999999997, 171.88400000000001, 141.51399999999998)), ('C', 781, u'VAL', 0.46169889971320727, (153.20399999999998, 172.395, 135.41299999999998)), ('C', 796, u'ASP', 0.6257070233840297, (138.252, 181.04899999999998, 112.52499999999999)), ('C', 854, u'LYS', 0.602852690029872, (142.566, 175.502, 163.14899999999997)), ('C', 871, u'ALA', 0.513002473619135, (143.923, 180.434, 134.47899999999998)), ('C', 887, u'THR', 0.5858976332739806, (155.765, 175.271, 117.729)), ('C', 896, u'ILE', 0.5483787400082042, (149.272, 177.863, 111.516)), ('C', 905, u'ARG', 0.5014485566128293, (148.347, 165.691, 114.09)), ('C', 911, u'VAL', 0.5443705354466744, (146.79399999999998, 158.67299999999997, 108.98)), ('C', 912, u'THR', 0.516661391615492, (147.32000000000002, 160.57299999999998, 105.68499999999999)), ('C', 922, u'LEU', 0.5802778724811297, (132.712, 165.39800000000002, 110.598)), ('C', 926, u'GLN', 0.5523496285124828, (132.89200000000002, 164.76999999999998, 116.667)), ('C', 936, u'ASP', 0.6137600929402736, (127.483, 167.038, 130.60999999999999)), ('C', 975, u'SER', 0.610699480411473, (144.437, 167.27299999999997, 177.935)), ('C', 979, u'ASP', 0.6346277286753407, (144.202, 172.874, 183.918)), ('C', 980, u'ILE', 0.6467235395989617, (147.69, 171.535, 184.71499999999997)), ('C', 988, u'GLU', 0.6428895878258952, (154.415, 168.722, 190.18800000000002)), ('C', 1003, u'SER', 0.5927344793174943, (151.70899999999997, 163.80800000000002, 167.135)), ('C', 1021, u'SER', 0.5611546227294878, (152.033, 163.505, 140.291)), ('C', 1031, u'GLU', 0.48100973656094487, (154.556, 165.954, 125.771)), ('C', 1064, u'HIS', 0.4917848218121972, (143.202, 164.45000000000002, 125.706)), ('C', 1066, u'THR', 0.4819551787756467, (142.612, 161.056, 120.542)), ('C', 1077, u'THR', 0.5427528736683023, (145.984, 140.21599999999998, 103.17199999999998)), ('C', 1078, u'ALA', 0.5573918438163056, (149.46, 139.336, 101.85)), ('C', 1087, u'ALA', 0.4788211629685705, (158.42200000000003, 140.535, 95.18499999999999)), ('C', 1301, u'NAG', 0.7863231972889603, (108.979, 143.803, 172.07899999999998)), ('C', 1303, u'NAG', 0.7614450536497843, (152.251, 113.548, 187.985)), ('C', 1304, u'NAG', 0.7921509573130288, (123.99600000000001, 157.191, 144.985)), ('C', 1306, u'NAG', 0.8197080295012145, (153.568, 133.10899999999998, 210.389))]
data['rota'] = [('A', ' 760 ', 'CYS', 0.06658192723989487, (146.046, 153.694, 166.81500000000003)), ('C', ' 603 ', 'ASN', 0.11884262083286619, (121.876, 157.495, 150.565)), ('C', ' 760 ', 'CYS', 0.1266841125105817, (160.683, 172.128, 166.832))]
data['clusters'] = [('A', '1039', 1, 'smoc Outlier', (162.512, 155.38700000000003, 123.88199999999999)), ('A', '1042', 1, 'smoc Outlier', (163.20899999999997, 151.656, 127.864)), ('A', '1043', 1, 'cablam Outlier', (162.3, 148.1, 126.8)), ('A', '1048', 1, 'Bond angle:CB:CG:CD2', (162.605, 147.43200000000002, 120.618)), ('A', '1052', 1, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (155.395, 140.034, 126.296)), ('A', '1054', 1, 'Bond angle:OE1:CD:NE2', (154.395, 137.24499999999998, 132.201)), ('A', '1064', 1, 'Bond angle:CB:CG:CD2', (161.515, 142.394, 125.695)), ('A', '802', 1, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (154.726, 131.39800000000002, 121.886)), ('A', '804', 1, 'Bond angle:OE1:CD:NE2', (156.136, 128.512, 126.43400000000001)), ('A', '816', 1, 'smoc Outlier', (152.287, 129.54, 130.899)), ('A', '819', 1, 'smoc Outlier', (154.937, 131.82100000000003, 134.411)), ('A', '389', 2, 'Dihedral angle:CA:C\nsmoc Outlier', (185.19, 161.038, 192.55700000000002)), ('A', '390', 2, 'Dihedral angle:N:CA', (184.14499999999998, 164.569, 191.505)), ('A', '391', 2, 'C-beta\nside-chain clash\nDihedral angle:CA:C\nBond angle:CA:CB:SG', (185.168, 168.23899999999998, 192.061)), ('A', '392', 2, 'Dihedral angle:N:CA', (184.064, 171.859, 192.21399999999997)), ('A', '524', 2, 'smoc Outlier', (187.393, 172.076, 196.366)), ('A', '525', 2, 'side-chain clash', (187.014, 168.383, 193.778)), ('A', '544', 2, 'cablam Outlier', (188.8, 167.6, 188.1)), ('A', '111', 3, 'cablam Outlier', (192.0, 124.9, 204.4)), ('A', '112', 3, 'cablam Outlier', (189.2, 125.1, 207.0)), ('A', '114', 3, 'Dihedral angle:CA:C', (186.27399999999997, 129.19899999999998, 205.07)), ('A', '115', 3, 'Dihedral angle:N:CA\nBond angle:OE1:CD:NE2', (183.069, 127.337, 204.23)), ('A', '1311', 3, 'Bond length:C5:O5', (184.024, 123.787, 212.905)), ('A', '133', 3, 'Bond angle:CA:CB:CG\nsmoc Outlier', (185.809, 120.304, 208.033)), ('A', '1308', 4, 'Bond length:C5:O5', (200.95000000000002, 143.083, 145.034)), ('A', '643', 4, 'Bond angle:CA:CB:CG', (196.316, 146.436, 152.191)), ('A', '650', 4, 'smoc Outlier', (191.73, 145.69, 154.38100000000003)), ('A', '653', 4, 'smoc Outlier', (192.55200000000002, 139.77499999999998, 151.064)), ('A', '655', 4, 'Bond angle:CB:CG:CD2', (196.055, 142.91299999999998, 146.683)), ('A', '1078', 5, 'smoc Outlier', (179.994, 160.317, 101.785)), ('A', '1309', 5, 'Bond length:C5:O5', (183.945, 164.518, 105.184)), ('A', '707', 5, 'Dihedral angle:CA:C', (186.52, 156.80100000000002, 113.636)), ('A', '708', 5, 'Dihedral angle:N:CA', (187.55100000000002, 158.78, 110.604)), ('A', '709', 5, 'cablam Outlier', (185.8, 161.6, 108.7)), ('A', '220', 6, 'cablam CA Geom Outlier\nsmoc Outlier', (178.5, 119.3, 168.7)), ('A', '293', 6, 'cablam CA Geom Outlier', (185.6, 133.2, 167.7)), ('A', '33', 6, 'cablam Outlier', (182.6, 122.6, 169.3)), ('A', '34', 6, 'cablam CA Geom Outlier', (182.1, 121.6, 173.0)), ('A', '58', 6, 'Bond angle:CA:CB:CG', (184.914, 127.084, 170.666)), ('A', '309', 7, 'smoc Outlier', (175.686, 134.672, 151.21299999999997)), ('A', '310', 7, 'cablam Outlier', (178.5, 136.3, 149.1)), ('A', '599', 7, 'Dihedral angle:CA:C', (182.923, 136.73399999999998, 152.509)), ('A', '600', 7, 'Dihedral angle:N:CA', (182.23899999999998, 134.516, 149.526)), ('A', '519', 8, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (183.165, 173.761, 184.05200000000002)), ('A', '520', 8, 'cablam CA Geom Outlier', (185.6, 176.4, 185.4)), ('A', '559', 8, 'Bond angle:CA:CB:CG', (192.516, 179.48800000000003, 176.265)), ('A', '563', 8, 'Bond angle:OE1:CD:NE2', (188.814, 179.16299999999998, 180.73499999999999)), ('A', '1058', 9, 'Bond angle:CB:CG:CD2', (154.178, 140.39200000000002, 143.506)), ('A', '945', 9, 'smoc Outlier', (164.266, 136.875, 140.335)), ('A', '948', 9, 'smoc Outlier', (160.809, 140.177, 143.48700000000002)), ('A', '949', 9, 'Bond angle:OE1:CD:NE2', (162.48800000000003, 137.918, 146.053)), ('A', '666', 10, 'cablam Outlier', (184.6, 147.6, 149.1)), ('A', '667', 10, 'cablam Outlier', (184.6, 151.3, 148.1)), ('A', '669', 10, 'smoc Outlier', (187.155, 151.783, 143.21499999999997)), ('A', '136', 11, 'smoc Outlier', (192.77599999999998, 115.111, 203.6)), ('A', '138', 11, 'Dihedral angle:CA:C', (196.547, 115.377, 199.785)), ('A', '139', 11, 'Dihedral angle:N:CA', (192.92600000000002, 114.595, 198.76299999999998)), ('A', '1069', 12, 'Dihedral angle:CA:C', (172.64899999999997, 144.546, 114.90100000000001)), ('A', '1070', 12, 'Dihedral angle:N:CA', (175.394, 141.89200000000002, 114.94300000000001)), ('A', '718', 12, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (171.281, 140.924, 113.236)), ('A', '970', 13, 'smoc Outlier', (161.509, 149.08, 176.815)), ('A', '996', 13, 'smoc Outlier', (155.425, 148.752, 176.89800000000002)), ('A', '997', 13, 'smoc Outlier', (152.678, 150.89200000000002, 175.225)), ('A', '417', 14, 'Dihedral angle:CA:C\ncablam Outlier', (157.121, 179.86700000000002, 206.477)), ('A', '418', 14, 'Dihedral angle:N:CA', (160.76899999999998, 178.924, 205.757)), ('A', '423', 14, 'smoc Outlier', (165.44, 179.984, 203.154)), ('A', '413', 15, 'smoc Outlier', (160.622, 173.964, 194.74099999999999)), ('A', '427', 15, 'smoc Outlier', (164.30100000000002, 175.22, 191.99)), ('A', '428', 15, 'Dihedral angle:CA:CB:CG:OD1', (167.29299999999998, 173.376, 190.32000000000002)), ('A', '985', 16, 'Dihedral angle:CA:C\nDihedral angle:CA:CB:CG:OD1', (148.68200000000002, 145.86100000000002, 191.448)), ('A', '986', 16, 'Dihedral angle:N:CA', (147.135, 148.54299999999998, 189.183)), ('A', '989', 16, 'smoc Outlier', (151.29, 147.953, 186.866)), ('A', '595', 17, 'smoc Outlier', (184.314, 146.14399999999998, 160.879)), ('A', '596', 17, 'smoc Outlier', (182.94, 145.19, 157.48700000000002)), ('A', '613', 17, 'Bond angle:OE1:CD:NE2', (186.27599999999998, 151.231, 157.594)), ('A', '581', 18, 'Dihedral angle:CA:C', (200.70299999999997, 172.305, 184.46200000000002)), ('A', '582', 18, 'Dihedral angle:N:CA', (198.687, 174.963, 182.606)), ('A', '583', 18, 'Dihedral angle:CB:CG:CD:OE1', (199.178, 173.596, 179.01899999999998)), ('A', '123', 19, 'C-beta\ncablam Outlier', (179.37499999999994, 104.20999999999997, 191.992)), ('A', '1302', 19, 'Bond length:C5:O5', (177.584, 101.92, 196.972)), ('A', '758', 20, 'cablam Outlier', (143.9, 158.6, 167.5)), ('A', '760', 20, 'Rotamer\nsmoc Outlier', (146.046, 153.694, 166.81500000000003)), ('A', '451', 21, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (166.42200000000003, 180.90800000000002, 217.023)), ('A', '495', 21, 'smoc Outlier', (160.429, 178.813, 218.965)), ('A', '812', 22, 'Dihedral angle:CA:C', (144.787, 124.199, 137.694)), ('A', '813', 22, 'Dihedral angle:N:CA', (145.836, 127.867, 137.371)), ('A', '531', 23, 'Dihedral angle:CA:C', (198.631, 160.238, 188.202)), ('A', '532', 23, 'Dihedral angle:N:CA', (201.35000000000002, 161.414, 185.83)), ('A', '924', 24, 'smoc Outlier', (161.542, 133.011, 113.928)), ('A', '926', 24, 'Bond angle:OE1:CD:NE2', (166.345, 133.30800000000002, 116.681)), ('A', '1083', 25, 'C-beta\nBond angle:C:CA:CB\nBond angle:CB:CG:CD2\ncablam Outlier', (176.316, 164.289, 89.512)), ('A', '1137', 25, 'smoc Outlier', (173.517, 158.783, 89.781)), ('A', '979', 26, 'Bond angle:CA:CB:CG', (153.664, 139.055, 183.924)), ('A', '983', 26, 'Planar group:CD:NE:CZ:NH1:NH2', (152.731, 140.406, 189.52700000000002)), ('A', '1122', 27, 'Dihedral angle:CA:C', (169.026, 167.068, 95.048)), ('A', '1123', 27, 'Dihedral angle:N:CA\ncablam Outlier', (169.88500000000002, 170.253, 96.895)), ('A', '273', 28, 'Dihedral angle:CA:C', (180.306, 135.05200000000002, 175.277)), ('A', '274', 28, 'Dihedral angle:N:CA', (177.371, 135.668, 172.978)), ('A', '105', 29, 'side-chain clash', (187.956, 122.896, 197.896)), ('A', '110', 29, 'side-chain clash\ncablam Outlier\nsmoc Outlier', (187.956, 122.896, 197.896)), ('A', '355', 30, 'Planar group:CD:NE:CZ:NH1:NH2', (177.183, 180.967, 204.52200000000002)), ('A', '398', 30, 'smoc Outlier', (174.641, 177.32200000000003, 204.72)), ('A', '84', 31, 'Dihedral angle:CA:C', (193.168, 124.699, 189.89600000000002)), ('A', '85', 31, 'Dihedral angle:N:CA', (191.92200000000003, 128.317, 189.70999999999998)), ('A', '796', 32, 'Bond angle:CA:CB:CG\nsmoc Outlier', (149.559, 129.80100000000002, 112.533)), ('A', '797', 32, 'cablam Outlier', (152.1, 132.5, 113.6)), ('A', '1014', 33, 'smoc Outlier', (158.442, 151.142, 150.83700000000002)), ('A', '1015', 33, 'smoc Outlier', (154.893, 151.38700000000003, 149.38200000000003)), ('A', '441', 34, 'Dihedral angle:CA:C', (173.11899999999997, 171.442, 222.13899999999998)), ('A', '442', 34, 'Dihedral angle:N:CA\nsmoc Outlier', (170.594, 174.191, 221.32000000000002)), ('A', '381', 35, 'smoc Outlier', (171.895, 166.594, 191.062)), ('A', '382', 35, 'smoc Outlier', (174.61399999999998, 164.414, 192.795)), ('A', '904', 36, 'Bond angle:CA:CB:CG\nsmoc Outlier', (155.45800000000003, 146.657, 111.081)), ('A', '905', 36, 'Planar group:CD:NE:CZ:NH1:NH2', (157.785, 146.21399999999997, 114.127)), ('A', '570', 37, 'smoc Outlier', (177.91, 168.272, 170.445)), ('A', '571', 37, 'C-beta', (177.66199999999995, 170.435, 174.621)), ('A', '66', 38, 'Bond angle:CB:CG:CD2', (195.35100000000003, 111.429, 183.52100000000002)), ('A', '67', 38, 'smoc Outlier', (193.833, 109.03, 186.127)), ('A', '886', 39, 'Planar group:CB:CG:CD1:CD2:NE1:CE2:CE3:CZ2:CZ3:CH2', (149.46800000000002, 147.37, 118.94900000000001)), ('A', '888', 39, 'smoc Outlier', (144.10899999999998, 146.46, 120.79100000000001)), ('A', '741', 40, 'smoc Outlier', (149.622, 144.201, 168.74399999999997)), ('A', '856', 40, 'cablam Outlier', (149.5, 139.3, 167.5)), ('A', '216', 41, 'smoc Outlier', (188.024, 115.64999999999999, 173.369)), ('A', '217', 41, 'smoc Outlier', (185.71699999999998, 114.67999999999999, 170.41899999999998)), ('A', '191', 42, 'Dihedral angle:CB:CG:CD:OE1', (180.833, 116.49300000000001, 180.38600000000002)), ('A', '207', 42, 'Bond angle:CA:CB:CG', (177.075, 111.702, 178.906)), ('A', '98', 43, 'Bond angle:C', (185.876, 102.456, 185.177)), ('A', '99', 43, 'C-beta\nBond angle:N:CA:C\nBond angle:N:CA', (184.661, 105.848, 186.72)), ('A', '90', 44, 'Dihedral angle:CA:C', (184.55800000000002, 125.87499999999999, 184.672)), ('A', '91', 44, 'Dihedral angle:N:CA', (183.762, 123.32199999999999, 182.018)), ('A', '962', 45, 'smoc Outlier', (157.74399999999997, 143.947, 164.35800000000003)), ('A', '965', 45, 'Bond angle:OE1:CD:NE2', (159.91899999999998, 143.841, 169.167)), ('A', '876', 46, 'smoc Outlier', (144.60299999999998, 138.51399999999998, 127.268)), ('A', '877', 46, 'smoc Outlier', (147.411, 141.101, 126.93)), ('A', '940', 47, 'Dihedral angle:CA:C', (169.03, 126.94500000000001, 136.266)), ('A', '941', 47, 'Dihedral angle:N:CA', (169.651, 130.376, 137.84)), ('B', '1039', 1, 'smoc Outlier', (159.665, 163.73399999999998, 123.826)), ('B', '1040', 1, 'smoc Outlier', (158.999, 167.508, 123.979)), ('B', '1042', 1, 'smoc Outlier', (162.651, 166.008, 127.89)), ('B', '1043', 1, 'cablam Outlier', (166.1, 166.7, 126.5)), ('B', '1048', 1, 'Bond angle:CB:CG:CD2', (166.45600000000002, 167.752, 120.62199999999999)), ('B', '1049', 1, 'Dihedral angle:CA:C', (169.508, 166.98600000000002, 118.479)), ('B', '1050', 1, 'Dihedral angle:N:CA', (171.92100000000002, 165.405, 120.96000000000001)), ('B', '1054', 1, 'Bond angle:OE1:CD:NE2', (179.436, 165.678, 132.208)), ('B', '1062', 1, 'smoc Outlier', (173.58200000000002, 167.107, 130.49)), ('B', '1064', 1, 'Bond angle:CB:CG:CD2', (171.42600000000002, 169.254, 125.71300000000001)), ('B', '1066', 1, 'smoc Outlier', (168.72299999999998, 171.464, 120.561)), ('B', '721', 1, 'Dihedral angle:CA:C', (171.094, 176.01399999999998, 121.563)), ('B', '722', 1, 'Dihedral angle:N:CA', (173.2, 174.187, 124.131)), ('B', '796', 1, 'Bond angle:CA:CB:CG\nsmoc Outlier', (188.318, 165.195, 112.516)), ('B', '797', 1, 'cablam Outlier', (184.7, 166.0, 113.7)), ('B', '896', 1, 'smoc Outlier', (180.033, 157.287, 111.52499999999999)), ('B', '897', 1, 'smoc Outlier', (181.531, 160.722, 110.577)), ('B', '901', 1, 'smoc Outlier', (175.642, 161.70499999999998, 112.55499999999999)), ('B', '904', 1, 'Bond angle:CA:CB:CG', (170.73499999999999, 161.99, 111.021)), ('B', '905', 1, 'Planar group:CD:NE:CZ:NH1:NH2', (169.95700000000002, 164.167, 114.11)), ('B', '923', 1, 'smoc Outlier', (176.016, 174.97299999999998, 112.68799999999999)), ('B', '926', 1, 'Bond angle:OE1:CD:NE2', (176.86, 177.995, 116.65899999999999)), ('B', '930', 1, 'smoc Outlier', (177.153, 177.75, 122.614)), ('B', '934', 1, 'smoc Outlier', (178.55, 177.189, 128.94899999999998)), ('B', '104', 2, 'Planar group:CB:CG:CD1:CD2:NE1:CE2:CE3:CZ2:CZ3:CH2\nsmoc Outlier', (180.817, 201.8, 193.171)), ('B', '106', 2, 'Bond angle:CA:CB:CG', (174.977, 199.105, 195.5)), ('B', '108', 2, 'cablam Outlier', (168.3, 199.1, 198.4)), ('B', '110', 2, 'cablam Outlier', (171.9, 202.7, 201.1)), ('B', '111', 2, 'cablam Outlier', (171.5, 204.4, 204.6)), ('B', '114', 2, 'Dihedral angle:CA:C\nsmoc Outlier', (170.622, 197.40200000000002, 205.26999999999998)), ('B', '115', 2, 'Dihedral angle:N:CA', (173.76, 195.58800000000002, 204.155)), ('B', '117', 2, 'smoc Outlier', (177.74699999999999, 196.303, 198.58700000000002)), ('B', '131', 2, 'cablam Outlier', (178.6, 196.0, 205.6)), ('B', '133', 2, 'Dihedral angle:CA:C', (177.525, 201.494, 205.823)), ('B', '134', 2, 'Dihedral angle:N:CA', (176.678, 205.171, 205.752)), ('B', '240', 2, 'smoc Outlier', (179.972, 205.718, 191.74099999999999)), ('B', '519', 3, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (131.271, 171.997, 184.21699999999998)), ('B', '563', 3, 'Bond angle:OE1:CD:NE2', (126.06400000000001, 174.52100000000002, 180.805)), ('B', '564', 3, 'Bond angle:OE1:CD:NE2', (128.82700000000003, 176.925, 182.039)), ('B', '565', 3, 'Bond angle:CA:CB:CG', (131.499, 176.341, 179.29)), ('B', '566', 3, 'smoc Outlier', (131.656, 175.43800000000002, 175.565)), ('B', '576', 3, 'Dihedral angle:CA:C', (131.89200000000002, 180.83700000000002, 178.57899999999998)), ('B', '577', 3, 'Dihedral angle:N:CA', (128.805, 181.88400000000001, 180.494)), ('B', '581', 3, 'Dihedral angle:CA:C', (125.86999999999999, 188.766, 184.64)), ('B', '582', 3, 'Ramachandran\nDihedral angle:N:CA', (125.104, 185.465, 182.863)), ('B', '583', 3, 'Dihedral angle:CB:CG:CD:OE1', (125.79700000000001, 186.474, 179.18)), ('B', '585', 3, 'Dihedral angle:CA:C', (130.92700000000002, 185.17, 175.61299999999997)), ('B', '586', 3, 'Dihedral angle:N:CA', (132.823, 183.73399999999998, 172.68)), ('B', '1069', 4, 'Dihedral angle:CA:C', (163.978, 177.873, 114.849)), ('B', '1070', 4, 'Dihedral angle:N:CA', (164.89200000000002, 181.586, 114.87199999999999)), ('B', '1072', 4, 'Dihedral angle:CA:C\nDihedral angle:CB:CG:CD:OE1\nsmoc Outlier', (160.151, 183.635, 110.98)), ('B', '1073', 4, 'Dihedral angle:N:CA', (158.553, 185.071, 107.88199999999999)), ('B', '1075', 4, 'Bond angle:CA:CB:CG', (153.171, 183.563, 104.41400000000002)), ('B', '1109', 4, 'cablam Outlier', (162.9, 175.5, 107.9)), ('B', '714', 4, 'smoc Outlier', (157.86700000000002, 179.44899999999998, 108.73100000000001)), ('B', '718', 4, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (167.84, 178.46800000000002, 113.229)), ('B', '314', 5, 'Bond angle:OE1:CD:NE2', (159.924, 183.038, 158.812)), ('B', '596', 5, 'smoc Outlier', (158.495, 186.637, 157.57899999999998)), ('B', '597', 5, 'smoc Outlier', (161.45000000000002, 188.92200000000003, 156.853)), ('B', '599', 5, 'Dihedral angle:CA:C', (165.636, 190.624, 152.483)), ('B', '600', 5, 'Dihedral angle:N:CA', (167.94899999999998, 191.178, 149.546)), ('B', '611', 5, 'smoc Outlier', (155.254, 190.296, 156.248)), ('B', '613', 5, 'Bond angle:OE1:CD:NE2', (151.266, 186.433, 157.55)), ('B', '101', 6, 'smoc Outlier', (186.70399999999998, 206.88000000000002, 188.66299999999998)), ('B', '102', 6, 'cablam Outlier', (187.6, 204.6, 191.6)), ('B', '121', 6, 'smoc Outlier', (188.972, 199.70399999999998, 192.72)), ('B', '123', 6, 'C-beta\nDihedral angle:CA:C\ncablam Outlier', (193.30100000000002, 199.694, 188.946)), ('B', '124', 6, 'Dihedral angle:N:CA', (196.157, 198.20899999999997, 191.105)), ('B', '1306', 6, 'Bond length:C5:O5', (197.74899999999997, 203.535, 191.445)), ('B', '389', 7, 'Dihedral angle:CA:C', (143.548, 180.27599999999998, 192.58700000000002)), ('B', '390', 7, 'Dihedral angle:N:CA', (140.91, 177.722, 191.55700000000002)), ('B', '391', 7, 'C-beta\nside-chain clash\nDihedral angle:CA:C\nBond angle:CA:CB:SG', (137.208, 176.80700000000002, 192.117)), ('B', '392', 7, 'Dihedral angle:N:CA', (134.589, 174.077, 192.303)), ('B', '525', 7, 'side-chain clash', (136.134, 178.259, 193.841)), ('B', '544', 7, 'cablam Outlier', (136.1, 180.4, 188.1)), ('B', '269', 8, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (170.98800000000003, 198.847, 181.653)), ('B', '270', 8, 'smoc Outlier', (171.255, 195.14, 180.869)), ('B', '88', 8, 'cablam Outlier', (168.2, 193.9, 186.4)), ('B', '90', 8, 'Dihedral angle:CA:C', (174.29299999999998, 197.601, 184.668)), ('B', '91', 8, 'Dihedral angle:N:CA', (176.90200000000002, 198.238, 182.011)), ('B', '215', 9, 'cablam CA Geom Outlier', (182.4, 210.1, 173.2)), ('B', '217', 9, 'smoc Outlier', (183.061, 204.555, 170.529)), ('B', '266', 9, 'side-chain clash', (179.239, 209.629, 177.729)), ('B', '64', 9, 'side-chain clash', (179.239, 209.629, 177.729)), ('B', '1088', 10, 'Bond angle:CB:CG:CD2', (146.87800000000001, 167.72, 95.774)), ('B', '1121', 10, 'smoc Outlier', (149.864, 163.282, 96.43)), ('B', '1122', 10, 'Dihedral angle:CA:C', (146.32100000000003, 163.44, 94.976)), ('B', '1123', 10, 'Dihedral angle:N:CA', (143.18800000000002, 162.536, 96.865)), ('B', '191', 11, 'Dihedral angle:CB:CG:CD:OE1', (184.20899999999997, 198.90800000000002, 180.319)), ('B', '207', 11, 'Bond angle:CA:CB:CG', (190.282, 197.931, 178.657)), ('B', '208', 11, 'Dihedral angle:CA:C', (191.071, 199.48100000000002, 175.222)), ('B', '209', 11, 'Dihedral angle:N:CA', (192.91299999999998, 202.431, 173.64499999999998)), ('B', '95', 12, 'Dihedral angle:CA:C\nsmoc Outlier', (186.752, 207.32800000000003, 178.782)), ('B', '96', 12, 'Dihedral angle:N:CA', (189.85700000000003, 208.257, 180.71699999999998)), ('B', '97', 12, 'Dihedral angle:CA:C', (193.597, 209.323, 180.98200000000003)), ('B', '98', 12, 'Ramachandran\nDihedral angle:N:CA', (193.78, 210.112, 184.721)), ('B', '1305', 13, 'Bond length:C5:O5', (152.09, 203.748, 144.226)), ('B', '643', 13, 'Bond angle:CA:CB:CG', (150.435, 197.434, 152.26999999999998)), ('B', '655', 13, 'Bond angle:CB:CG:CD2', (153.781, 198.95700000000002, 146.66899999999998)), ('B', '666', 14, 'cablam Outlier', (155.3, 186.8, 149.1)), ('B', '667', 14, 'cablam Outlier', (152.2, 184.8, 148.1)), ('B', '668', 14, 'smoc Outlier', (148.77599999999998, 185.403, 146.36100000000002)), ('B', '738', 15, 'smoc Outlier', (173.59, 154.05800000000002, 166.68)), ('B', '742', 15, 'smoc Outlier', (173.289, 157.317, 171.539)), ('B', '997', 15, 'smoc Outlier', (168.471, 157.38000000000002, 175.225)), ('B', '293', 16, 'cablam CA Geom Outlier', (167.4, 194.8, 167.7)), ('B', '294', 16, 'Bond angle:CA:CB:CG', (165.708, 194.678, 164.24299999999997)), ('B', '58', 16, 'Bond angle:CA:CB:CG\nsmoc Outlier', (172.767, 197.13299999999998, 170.748)), ('B', '417', 17, 'Dihedral angle:CA:C\ncablam Outlier', (141.108, 146.87800000000001, 206.71099999999998)), ('B', '418', 17, 'Dihedral angle:N:CA', (140.14299999999997, 150.535, 206.089)), ('B', '423', 17, 'smoc Outlier', (136.765, 154.061, 203.345)), ('B', '327', 18, 'smoc Outlier', (138.95700000000002, 187.753, 186.955)), ('B', '531', 18, 'Dihedral angle:CA:C', (137.463, 192.52, 188.17)), ('B', '532', 18, 'Dihedral angle:N:CA', (135.12800000000001, 194.39700000000002, 185.848)), ('B', '363', 19, 'Dihedral angle:CA:C\nsmoc Outlier', (137.04299999999998, 179.312, 201.08800000000002)), ('B', '364', 19, 'Dihedral angle:N:CA', (140.638, 180.064, 202.053)), ('B', '365', 19, 'smoc Outlier', (142.622, 176.82000000000002, 201.90200000000002)), ('B', '1058', 20, 'Bond angle:CB:CG:CD2\ncablam Outlier', (176.796, 163.985, 143.56)), ('B', '729', 20, 'smoc Outlier', (172.26999999999998, 161.26399999999998, 141.17499999999998)), ('B', '777', 20, 'Bond angle:CA:CB:CG', (171.9, 155.112, 141.542)), ('B', '1145', 21, 'Dihedral angle:CA:C\ncablam Outlier\nsmoc Outlier', (157.532, 163.42600000000002, 76.97)), ('B', '1146', 21, 'Dihedral angle:N:CA\nDihedral angle:CA:CB:CG:OD1', (158.959, 165.42800000000003, 74.049)), ('B', '449', 22, 'smoc Outlier', (135.83700000000002, 151.68800000000002, 222.185)), ('B', '495', 22, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (139.99200000000002, 150.80800000000002, 218.712)), ('B', '812', 23, 'Dihedral angle:CA:C', (195.099, 164.86700000000002, 137.91299999999998)), ('B', '813', 23, 'Dihedral angle:N:CA', (191.79399999999998, 163.039, 137.369)), ('B', '128', 24, 'smoc Outlier', (184.88800000000003, 194.86200000000002, 198.467)), ('B', '169', 24, 'Dihedral angle:CB:CG:CD:OE1', (184.40800000000002, 191.15800000000002, 202.546)), ('B', '433', 25, 'smoc Outlier', (143.657, 164.059, 202.74299999999997)), ('B', '512', 25, 'smoc Outlier', (139.185, 164.178, 203.18)), ('B', '707', 26, 'Dihedral angle:CA:C', (146.38500000000002, 183.70899999999997, 113.582)), ('B', '708', 26, 'Dihedral angle:N:CA', (144.097, 183.515, 110.55499999999999)), ('B', '985', 27, 'Dihedral angle:CA:C\nDihedral angle:CA:CB:CG:OD1', (174.85800000000003, 156.48200000000003, 191.548)), ('B', '986', 27, 'Dihedral angle:N:CA', (173.38700000000003, 153.665, 189.38800000000003)), ('B', '355', 28, 'Planar group:CD:NE:CZ:NH1:NH2', (130.202, 163.65800000000002, 204.73)), ('B', '396', 28, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (132.73, 167.317, 200.031)), ('B', '381', 29, 'smoc Outlier', (145.226, 166.23, 191.583)), ('B', '382', 29, 'smoc Outlier', (145.772, 169.835, 192.866)), ('B', '220', 30, 'cablam CA Geom Outlier\nsmoc Outlier', (183.1, 195.4, 169.1)), ('B', '34', 30, 'Planar group:CD:NE:CZ:NH1:NH2\ncablam CA Geom Outlier', (179.417, 197.88600000000002, 172.98700000000002)), ('B', '332', 31, 'Dihedral angle:CA:C', (128.772, 184.914, 196.843)), ('B', '333', 31, 'Dihedral angle:N:CA', (129.627, 186.238, 200.334)), ('B', '745', 32, 'Dihedral angle:CA:C', (181.067, 154.135, 174.395)), ('B', '746', 32, 'Dihedral angle:N:CA', (179.45000000000002, 154.08200000000002, 177.88500000000002)), ('B', '979', 33, 'Bond angle:CA:CB:CG', (178.232, 164.155, 183.907)), ('B', '980', 33, 'smoc Outlier', (175.30800000000002, 161.824, 184.697)), ('B', '758', 34, 'cablam Outlier', (166.2, 145.9, 167.4)), ('B', '759', 34, 'smoc Outlier', (165.607, 149.737, 167.089)), ('B', '940', 35, 'Dihedral angle:CA:C', (181.05700000000002, 183.57299999999998, 136.201)), ('B', '941', 35, 'Dihedral angle:N:CA', (177.942, 182.23299999999998, 137.977)), ('B', '802', 36, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (184.38200000000003, 168.903, 121.836)), ('B', '804', 36, 'Bond angle:OE1:CD:NE2', (186.099, 171.586, 126.38499999999999)), ('C', '1069', 1, 'Dihedral angle:CA:C', (139.484, 153.67, 114.908)), ('C', '1070', 1, 'Dihedral angle:N:CA', (135.812, 152.612, 114.918)), ('C', '1072', 1, 'Dihedral angle:CA:C\nDihedral angle:CB:CG:CD:OE1', (136.29, 147.48800000000003, 110.909)), ('C', '1073', 1, 'Dihedral angle:N:CA', (135.948, 145.383, 107.826)), ('C', '1077', 1, 'smoc Outlier', (145.984, 140.21599999999998, 103.17199999999998)), ('C', '1078', 1, 'smoc Outlier', (149.46, 139.336, 101.85)), ('C', '712', 1, 'smoc Outlier', (143.43800000000002, 141.57899999999998, 108.465)), ('C', '713', 1, 'smoc Outlier', (140.85000000000002, 143.963, 109.952)), ('C', '718', 1, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (137.02100000000002, 156.708, 113.271)), ('C', '738', 2, 'smoc Outlier', (155.24599999999998, 173.97299999999998, 166.648)), ('C', '741', 2, 'smoc Outlier', (150.692, 173.811, 168.73499999999999)), ('C', '758', 2, 'cablam Outlier', (166.0, 171.6, 167.4)), ('C', '760', 2, 'Rotamer', (160.683, 172.128, 166.832)), ('C', '854', 2, 'smoc Outlier', (142.566, 175.502, 163.14899999999997)), ('C', '855', 2, 'Ramachandran', (143.552, 178.41999999999996, 165.519)), ('C', '856', 2, 'cablam CA Geom Outlier', (146.1, 176.2, 167.5)), ('C', '1043', 3, 'cablam Outlier', (148.0, 161.1, 126.6)), ('C', '1048', 3, 'Bond angle:CB:CG:CD2', (146.969, 160.94299999999998, 120.607)), ('C', '1052', 3, 'Planar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (144.17899999999997, 170.914, 126.319)), ('C', '1054', 3, 'Bond angle:OE1:CD:NE2', (142.32500000000002, 173.183, 132.262)), ('C', '1064', 3, 'Bond angle:CB:CG:CD2\nsmoc Outlier', (143.202, 164.45000000000002, 125.706)), ('C', '1066', 3, 'smoc Outlier', (142.612, 161.056, 120.542)), ('C', '106', 4, 'Bond angle:CA:CB:CG', (115.783, 152.346, 195.627)), ('C', '108', 4, 'cablam Outlier', (118.7, 146.4, 198.6)), ('C', '110', 4, 'cablam Outlier', (113.7, 148.6, 200.8)), ('C', '237', 4, 'Planar group:CD:NE:CZ:NH1:NH2', (116.56, 147.018, 193.536)), ('C', '84', 4, 'Dihedral angle:CA:C', (112.17099999999999, 145.637, 190.05200000000002)), ('C', '85', 4, 'Dihedral angle:N:CA', (115.93400000000001, 145.018, 189.89100000000002)), ('C', '519', 5, 'Bond angle:CB:CG:CD2', (160.974, 128.178, 184.33)), ('C', '559', 5, 'Bond angle:CA:CB:CG', (159.839, 118.995, 176.117)), ('C', '563', 5, 'Bond angle:OE1:CD:NE2', (161.35500000000002, 122.535, 180.77299999999997)), ('C', '564', 5, 'Bond angle:OE1:CD:NE2', (157.901, 123.752, 182.01299999999998)), ('C', '565', 5, 'smoc Outlier', (157.017, 126.288, 179.21699999999998)), ('C', '566', 5, 'smoc Outlier', (157.74299999999997, 126.81700000000001, 175.483)), ('C', '745', 6, 'cablam Outlier', (150.9, 180.6, 175.0)), ('C', '746', 6, 'smoc Outlier', (152.35000000000002, 178.791, 178.12)), ('C', '748', 6, 'Dihedral angle:CB:CG:CD:OE1', (156.281, 177.183, 181.364)), ('C', '749', 6, 'smoc Outlier', (155.707, 174.67, 178.555)), ('C', '752', 6, 'smoc Outlier', (160.314, 172.672, 178.86200000000002)), ('C', '753', 6, 'smoc Outlier', (160.153, 172.444, 175.024)), ('C', '661', 7, 'Dihedral angle:CB:CG:CD:OE1', (132.24699999999999, 143.96200000000002, 136.94299999999998)), ('C', '663', 7, 'Dihedral angle:CA:CB:CG:OD1', (131.532, 147.053, 142.52100000000002)), ('C', '666', 7, 'cablam Outlier', (136.1, 141.9, 149.0)), ('C', '667', 7, 'cablam Outlier', (139.3, 140.0, 148.0)), ('C', '672', 7, 'smoc Outlier', (129.804, 142.57299999999998, 146.176)), ('C', '115', 8, 'side-chain clash', (121.855, 157.361, 205.71)), ('C', '130', 8, 'Dihedral angle:CA:C', (117.579, 158.061, 202.518)), ('C', '131', 8, 'Dihedral angle:N:CA', (116.051, 157.879, 205.99800000000002)), ('C', '167', 8, 'side-chain clash\nDihedral angle:CA:C', (121.74400000000001, 160.62800000000001, 207.20399999999998)), ('C', '168', 8, 'Dihedral angle:N:CA\nsmoc Outlier', (120.868, 162.343, 203.86100000000002)), ('C', '391', 9, 'C-beta\nside-chain clash\nDihedral angle:CA:C\nBond angle:CA:CB:SG\nsmoc Outlier', (153.77499999999998, 130.939, 192.17299999999997)), ('C', '392', 9, 'Dihedral angle:N:CA', (157.455, 130.1, 192.226)), ('C', '525', 9, 'side-chain clash', (152.891, 129.309, 193.857)), ('C', '544', 9, 'cablam Outlier', (151.3, 128.2, 188.2)), ('C', '546', 9, 'smoc Outlier', (151.11299999999997, 132.258, 184.13)), ('C', '263', 10, 'smoc Outlier', (98.203, 156.425, 182.844)), ('C', '66', 10, 'Bond angle:CB:CG:CD2', (99.565, 150.318, 183.44299999999998)), ('C', '80', 10, 'smoc Outlier', (100.67699999999999, 147.648, 189.49)), ('C', '95', 10, 'Dihedral angle:CA:C', (102.774, 158.32100000000003, 178.79)), ('C', '96', 10, 'Dihedral angle:N:CA', (100.427, 160.635, 180.66)), ('C', '1083', 11, 'Bond angle:CB:CG:CD2', (154.789, 140.60899999999998, 89.589)), ('C', '1087', 11, 'smoc Outlier', (158.42200000000003, 140.535, 95.18499999999999)), ('C', '1088', 11, 'Bond angle:CB:CG:CD2', (156.786, 143.961, 95.80199999999999)), ('C', '1122', 11, 'Dihedral angle:CA:C', (160.73499999999999, 145.602, 94.979)), ('C', '1123', 11, 'Dihedral angle:N:CA', (163.076, 143.309, 96.833)), ('C', '421', 12, 'Dihedral angle:CA:C', (179.787, 144.86200000000002, 203.086)), ('C', '422', 12, 'Dihedral angle:N:CA', (177.563, 142.086, 204.464)), ('C', '423', 12, 'smoc Outlier', (174.01899999999998, 142.102, 202.912)), ('C', '465', 12, 'Dihedral angle:CB:CG:CD:OE1', (177.53, 137.001, 199.578)), ('C', '467', 12, 'smoc Outlier', (181.024, 136.32700000000003, 205.141)), ('C', '410', 13, 'smoc Outlier', (167.903, 146.761, 202.79899999999998)), ('C', '411', 13, 'Dihedral angle:CA:C', (166.85700000000003, 147.45700000000002, 199.16)), ('C', '412', 13, 'Dihedral angle:N:CA', (167.98000000000002, 147.399, 195.51)), ('C', '428', 13, 'Dihedral angle:CA:CB:CG:OD1', (167.04, 143.96800000000002, 190.137)), ('C', '1309', 14, 'Bond length:C5:O5', (124.4, 129.937, 145.431)), ('C', '643', 14, 'Bond angle:CA:CB:CG', (129.272, 132.24599999999998, 152.157)), ('C', '655', 14, 'Bond angle:CB:CG:CD2', (126.273, 134.306, 146.685)), ('C', '936', 15, 'smoc Outlier', (127.483, 167.038, 130.60999999999999)), ('C', '940', 15, 'Dihedral angle:CA:C', (125.983, 165.849, 136.257)), ('C', '941', 15, 'Dihedral angle:N:CA', (128.71399999999997, 163.824, 138.02)), ('C', '1109', 16, 'cablam Outlier', (142.1, 154.0, 108.0)), ('C', '911', 16, 'smoc Outlier', (146.79399999999998, 158.67299999999997, 108.98)), ('C', '912', 16, 'smoc Outlier', (147.32000000000002, 160.57299999999998, 105.68499999999999)), ('C', '985', 17, 'Dihedral angle:CA:C', (152.722, 173.99, 191.311)), ('C', '986', 17, 'Dihedral angle:N:CA', (156.039, 173.98800000000003, 189.30800000000002)), ('C', '988', 17, 'smoc Outlier', (154.415, 168.722, 190.18800000000002)), ('C', '220', 18, 'smoc Outlier', (114.377, 161.228, 168.67499999999998)), ('C', '34', 18, 'cablam CA Geom Outlier', (114.4, 157.2, 172.9)), ('C', '36', 18, 'smoc Outlier', (119.57, 159.60899999999998, 175.189)), ('C', '432', 19, 'smoc Outlier', (159.721, 141.57, 199.75)), ('C', '511', 19, 'smoc Outlier', (162.819, 138.612, 206.978)), ('C', '513', 19, 'smoc Outlier', (161.65200000000002, 136.899, 200.90800000000002)), ('C', '90', 20, 'Dihedral angle:CA:C', (117.192, 152.778, 184.548)), ('C', '91', 20, 'Dihedral angle:N:CA', (115.482, 154.788, 181.86100000000002)), ('C', '92', 20, 'smoc Outlier', (111.988, 155.354, 183.267)), ('C', '1101', 21, 'Bond angle:CB:CG:CD2', (140.82800000000003, 142.848, 93.618)), ('C', '1103', 21, 'Dihedral angle:CA:C', (144.783, 147.271, 96.91000000000001)), ('C', '1104', 21, 'Dihedral angle:N:CA', (147.442, 149.03, 98.974)), ('C', '207', 22, 'Bond angle:CA:CB:CG', (108.82, 166.35000000000002, 178.653)), ('C', '208', 22, 'Dihedral angle:CA:C', (106.848, 166.43, 175.329)), ('C', '209', 22, 'Dihedral angle:N:CA', (103.35199999999999, 166.194, 173.781)), ('C', '1304', 23, 'Bond length:C5:O5\nsmoc Outlier', (123.99600000000001, 157.191, 144.985)), ('C', '603', 23, 'Rotamer', (121.876, 157.495, 150.565)), ('C', '214', 24, 'Dihedral angle:CA:C', (99.143, 153.585, 173.01)), ('C', '215', 24, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (102.898, 153.74299999999997, 173.41)), ('C', '1144', 25, 'Dihedral angle:CB:CG:CD:OE1', (151.99200000000002, 157.77399999999997, 79.268)), ('C', '1146', 25, 'Dihedral angle:CA:CB:CG:OD1', (151.001, 154.017, 75.529)), ('C', '812', 26, 'Dihedral angle:CA:C', (136.272, 188.22299999999998, 137.759)), ('C', '813', 26, 'Dihedral angle:N:CA', (138.70399999999998, 185.309, 137.318)), ('C', '122', 27, 'cablam Outlier', (104.4, 166.1, 196.2)), ('C', '1311', 27, 'Bond length:C5:O5', (100.868, 170.227, 197.67399999999998)), ('C', '531', 28, 'Dihedral angle:CA:C', (140.13899999999998, 123.38199999999999, 188.30700000000002)), ('C', '532', 28, 'Dihedral angle:N:CA', (139.941, 120.44400000000002, 185.89600000000002)), ('C', '922', 29, 'smoc Outlier', (132.712, 165.39800000000002, 110.598)), ('C', '926', 29, 'Bond angle:OE1:CD:NE2\nsmoc Outlier', (132.89200000000002, 164.76999999999998, 116.667)), ('C', '707', 30, 'Dihedral angle:CA:C', (143.176, 135.54899999999998, 113.593)), ('C', '708', 30, 'Dihedral angle:N:CA', (144.472, 133.64499999999998, 110.579)), ('C', '315', 31, 'smoc Outlier', (134.906, 148.43800000000002, 161.756)), ('C', '596', 31, 'smoc Outlier', (134.883, 144.507, 157.472)), ('C', '599', 32, 'Dihedral angle:CA:C', (127.566, 148.67, 152.474)), ('C', '600', 32, 'Dihedral angle:N:CA', (125.918, 150.429, 149.559)), ('C', '113', 33, 'Dihedral angle:CA:C', (116.29400000000001, 147.529, 207.91299999999998)), ('C', '114', 33, 'Dihedral angle:N:CA', (119.197, 148.819, 205.805)), ('C', '796', 34, 'Bond angle:CA:CB:CG\nsmoc Outlier', (138.252, 181.04899999999998, 112.52499999999999)), ('C', '797', 34, 'cablam Outlier', (139.4, 177.5, 113.6)), ('C', '441', 35, 'Dihedral angle:CA:C', (162.48200000000003, 139.88700000000003, 222.259)), ('C', '442', 35, 'Dihedral angle:N:CA', (166.102, 140.789, 221.465)), ('C', '777', 36, 'smoc Outlier', (155.17899999999997, 171.88400000000001, 141.51399999999998)), ('C', '781', 36, 'smoc Outlier', (153.20399999999998, 172.395, 135.41299999999998)), ('C', '904', 37, 'Bond angle:CA:CB:CG\nPlanar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (149.86100000000002, 167.495, 111.033)), ('C', '905', 37, 'Planar group:CD:NE:CZ:NH1:NH2\nsmoc Outlier', (148.347, 165.691, 114.09)), ('C', '1003', 38, 'smoc Outlier', (151.70899999999997, 163.80800000000002, 167.135)), ('C', '965', 38, 'Bond angle:OE1:CD:NE2', (145.187, 165.05100000000002, 169.166)), ('C', '979', 39, 'smoc Outlier', (144.202, 172.874, 183.918)), ('C', '980', 39, 'smoc Outlier', (147.69, 171.535, 184.71499999999997)), ('C', '949', 40, 'Bond angle:OE1:CD:NE2', (138.85200000000003, 165.789, 146.097)), ('C', '950', 40, 'Dihedral angle:CA:CB:CG:OD1', (140.86100000000002, 162.88100000000003, 147.65800000000002)), ('D', '1', 1, 'Bond length:C4:O4\nBond length:C5:O5', (182.506, 138.668, 196.483)), ('D', '2', 1, 'Bond length:C5:O5', (193.61399999999998, 138.258, 195.14499999999998)), ('E', '1', 1, 'Bond length:C4:O4', (174.142, 136.477, 105.458)), ('E', '2', 1, 'Bond length:C5:O5', (169.79, 130.74099999999999, 114.084)), ('F', '1', 1, 'Bond length:C4:O4', (154.155, 124.04100000000001, 116.503)), ('F', '2', 1, 'Bond length:C5:O5', (157.49200000000002, 121.363, 126.67499999999998)), ('G', '1', 1, 'Bond length:C4:O4\nBond length:C5:O5', (186.11899999999997, 146.006, 95.97)), ('G', '2', 1, 'Bond length:C5:O5', (178.401, 146.546, 87.827)), ('H', '1', 1, 'Bond length:C4:O4', (186.829, 165.48600000000002, 94.93900000000001)), ('H', '2', 1, 'Bond length:C5:O5', (183.537, 171.766, 86.24600000000001)), ('I', '1', 1, 'Bond length:C4:O4\nBond length:C5:O5', (163.67, 189.836, 197.124)), ('I', '2', 1, 'Bond length:C5:O5', (160.58100000000002, 200.517, 194.83200000000002)), ('J', '1', 1, 'Bond length:C4:O4', (190.901, 172.016, 116.28)), ('J', '2', 1, 'Bond length:C5:O5', (191.14899999999997, 177.023, 126.389)), ('K', '1', 1, 'Bond length:C4:O4', (138.76, 180.04299999999998, 94.603)), ('K', '2', 1, 'Bond length:C5:O5', (134.72899999999998, 172.94899999999998, 87.245)), ('L', '1', 1, 'Bond length:C4:O4', (170.52, 183.17499999999998, 105.477)), ('L', '2', 1, 'Bond length:C5:O5', (177.448, 182.16899999999998, 114.09100000000001)), ('M', '1', 1, 'Bond length:C4:O4\nBond length:C5:O5', (156.006, 188.686, 95.869)), ('M', '2', 1, 'Bond length:C5:O5', (159.30200000000002, 181.89600000000002, 87.78)), ('N', '1', 1, 'Bond length:C4:O4\nBond length:C5:O5', (129.724, 146.97, 197.84)), ('N', '2', 1, 'Bond length:C5:O5', (121.823, 139.58700000000002, 194.541)), ('O', '1', 1, 'Bond length:C4:O4\nBond length:C5:O5', (133.98800000000003, 141.38500000000002, 95.899)), ('O', '2', 1, 'Bond length:C5:O5', (138.001, 147.437, 87.438)), ('P', '1', 1, 'Bond length:C4:O4', (150.096, 131.29399999999998, 94.799)), ('P', '2', 1, 'Bond length:C5:O5', (157.945, 130.657, 87.205)), ('Q', '1', 1, 'Bond length:C4:O4', (130.997, 180.191, 116.52)), ('Q', '2', 1, 'Bond length:C5:O5', (126.94400000000002, 178.16899999999998, 126.819)), ('R', '1', 1, 'Bond length:C4:O4', (131.691, 156.671, 105.486)), ('R', '2', 1, 'Bond length:C5:O5', (128.899, 163.05200000000002, 114.161))]
data['rama'] = [('B', '  98 ', 'SER', 0.030150292830444198, (193.78, 210.112, 184.721)), ('B', ' 582 ', 'LEU', 0.02298147653993426, (125.10400000000006, 185.465, 182.86300000000003)), ('C', ' 855 ', 'PHE', 0.016996550001701107, (143.552, 178.41999999999996, 165.519))]
data['cablam'] = [('A', '33', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--S--', (182.6, 122.6, 169.3)), ('A', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (164.6, 126.1, 181.1)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (184.4, 133.0, 186.5)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (188.9, 130.6, 198.2)), ('A', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-SS', (190.0, 125.3, 201.1)), ('A', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (192.0, 124.9, 204.4)), ('A', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (189.2, 125.1, 207.0)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (178.3, 105.3, 192.2)), ('A', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (178.5, 136.3, 149.1)), ('A', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'turn\n-STTT', (157.1, 179.9, 206.5)), ('A', '491', 'PRO', 'check CA trace,carbonyls, peptide', ' \n----B', (157.1, 188.8, 210.3)), ('A', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (190.8, 162.9, 198.0)), ('A', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (188.8, 167.6, 188.1)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (184.6, 147.6, 149.1)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (184.6, 151.3, 148.1)), ('A', '709', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TTE', (185.8, 161.6, 108.7)), ('A', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nTTTHH', (143.9, 158.6, 167.5)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (152.1, 132.5, 113.6)), ('A', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (149.5, 139.3, 167.5)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (162.3, 148.1, 126.8)), ('A', '1083', 'HIS', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (176.3, 164.3, 89.5)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (171.1, 146.7, 108.0)), ('A', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (169.9, 170.3, 96.9)), ('A', '34', 'ARG', 'check CA trace', ' \n-S---', (182.1, 121.6, 173.0)), ('A', '220', 'PHE', 'check CA trace', ' \nSS---', (178.5, 119.3, 168.7)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (185.6, 133.2, 167.7)), ('A', '520', 'ALA', 'check CA trace', 'bend\n-SS--', (185.6, 176.4, 185.4)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (188.5, 158.5, 177.0)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (184.0, 180.1, 181.2)), ('B', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (168.2, 193.9, 186.4)), ('B', '102', 'ARG', 'check CA trace,carbonyls, peptide', ' \n---EE', (187.6, 204.6, 191.6)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (168.3, 199.1, 198.4)), ('B', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-BS', (171.9, 202.7, 201.1)), ('B', '111', 'ASP', 'check CA trace,carbonyls, peptide', 'beta bridge\nS-BSS', (171.5, 204.4, 204.6)), ('B', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (193.3, 199.7, 188.9)), ('B', '131', 'CYS', ' beta sheet', ' \nE----', (178.6, 196.0, 205.6)), ('B', '417', 'LYS', 'check CA trace,carbonyls, peptide', 'turn\n-STTT', (141.1, 146.9, 206.7)), ('B', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (136.1, 180.4, 188.1)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (155.3, 186.8, 149.1)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (152.2, 184.8, 148.1)), ('B', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nTTTHH', (166.2, 145.9, 167.4)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (184.7, 166.0, 113.7)), ('B', '856', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (180.0, 160.7, 167.5)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (166.1, 166.7, 126.5)), ('B', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (176.8, 164.0, 143.6)), ('B', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (162.9, 175.5, 107.9)), ('B', '1145', 'LEU', 'check CA trace,carbonyls, peptide', 'turn\nHHTT-', (157.5, 163.4, 77.0)), ('B', '34', 'ARG', 'check CA trace', ' \nTT---', (179.4, 197.9, 173.0)), ('B', '215', 'ASP', 'check CA trace', 'bend\nSSS--', (182.4, 210.1, 173.2)), ('B', '220', 'PHE', 'check CA trace', ' \n-S---', (183.1, 195.4, 169.1)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (167.4, 194.8, 167.7)), ('B', '549', 'THR', 'check CA trace', ' \nE--EE', (144.2, 184.6, 177.0)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (127.5, 169.9, 181.2)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TTEE', (123.4, 149.3, 186.4)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (118.7, 146.4, 198.6)), ('C', '110', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (113.7, 148.6, 200.8)), ('C', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (104.4, 166.1, 196.2)), ('C', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (146.3, 129.0, 198.2)), ('C', '544', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (151.3, 128.2, 188.2)), ('C', '614', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nEES--', (140.5, 135.1, 157.4)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (136.1, 141.9, 149.0)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (139.3, 140.0, 148.0)), ('C', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nHTT-H', (150.9, 180.6, 175.0)), ('C', '758', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nTTTHH', (166.0, 171.6, 167.4)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (139.4, 177.5, 113.6)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'bend\nTTSSS', (148.0, 161.1, 126.6)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (145.0, 171.8, 143.5)), ('C', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (142.1, 154.0, 108.0)), ('C', '34', 'ARG', 'check CA trace', ' \nTT--E', (114.4, 157.2, 172.9)), ('C', '215', 'ASP', 'check CA trace', 'bend\nSSS--', (102.9, 153.7, 173.4)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (123.1, 148.3, 167.6)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (143.6, 133.1, 177.1)), ('C', '856', 'ASN', 'check CA trace', 'turn\n-TTTE', (146.1, 176.2, 167.5))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-22825/7kdk/Model_validation_1/validation_cootdata/molprobity_probe7kdk_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
