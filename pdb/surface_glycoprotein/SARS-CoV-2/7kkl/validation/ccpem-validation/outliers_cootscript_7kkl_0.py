
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['cbeta'] = []
data['jpred'] = []
data['rota'] = [('A', '  61 ', 'ASN', 0.04293326678677513, (184.94199999999998, 116.808, 158.256)), ('A', ' 603 ', 'ASN', 0.08080688190937882, (184.384, 130.648, 182.873)), ('A', ' 657 ', 'ASN', 0.11523080007811838, (161.317, 118.33699999999997, 191.94100000000003)), ('A', '1134 ', 'ASN', 0.18344243716907035, (148.89800000000005, 138.692, 240.931)), ('C', '  61 ', 'ASN', 0.08160649858999752, (110.17099999999999, 160.314, 158.265)), ('C', ' 603 ', 'ASN', 0.08018427516443109, (122.47099999999998, 153.86099999999993, 182.872)), ('C', ' 657 ', 'ASN', 0.11194110331303522, (123.34799999999997, 179.998, 191.94)), ('C', '1134 ', 'ASN', 0.19355398749926084, (147.201, 180.56599999999995, 240.929)), ('D', '  61 ', 'ASN', 0.08157969426036554, (185.268, 203.297, 158.264)), ('D', ' 603 ', 'ASN', 0.08057683746520924, (173.53, 195.869, 182.875)), ('D', ' 657 ', 'ASN', 0.11052137621399558, (195.724, 182.047, 191.94100000000003)), ('D', '1134 ', 'ASN', 0.18535869072281874, (184.30500000000006, 161.115, 240.93000000000004))]
data['clusters'] = [('A', '1071', 1, 'Dihedral angle:CA:C\nBond angle:N:CA:C\nBond angle:C:CA:CB\nBond angle:C', (170.191, 136.344, 220.864)), ('A', '1072', 1, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA\nBond angle:N:CA\nsmoc Outlier', (166.637, 136.078, 222.108)), ('A', '1074', 1, 'Bond angle:CA:CB:CG', (161.678, 132.869, 225.79399999999998)), ('A', '1109', 1, 'cablam Outlier', (167.8, 144.4, 225.5)), ('A', '1134', 1, 'Rotamer\nside-chain clash', (168.175, 138.579, 221.618)), ('A', '1307', 1, 'Bond angle:C8:C7:O7\nBond length:C5:O5\nBond length:C3:C4\nsmoc Outlier', (159.895, 129.83100000000002, 221.83)), ('A', '712', 1, 'smoc Outlier', (157.59, 137.21899999999997, 224.7)), ('A', '714', 1, 'smoc Outlier', (163.664, 139.365, 224.24699999999999)), ('A', '108', 2, 'cablam Outlier', (184.8, 122.4, 133.8)), ('A', '196', 2, 'Bond length:CB:CG', (185.873, 132.379, 142.268)), ('A', '198', 2, 'smoc Outlier', (183.64, 138.254, 139.874)), ('A', '200', 2, 'Bond length:CB:CG', (188.89600000000002, 136.34, 139.97299999999998)), ('A', '228', 2, 'Bond length:CG:OD1', (194.383, 137.312, 142.92200000000003)), ('A', '231', 2, 'cablam Outlier', (191.1, 135.4, 134.6)), ('A', '233', 2, 'smoc Outlier', (187.24499999999998, 131.418, 134.023)), ('A', '235', 2, 'smoc Outlier', (185.38000000000002, 126.271, 137.21499999999997)), ('A', '1303', 3, 'Bond length:C5:O5\nBond length:C3:C4', (188.441, 133.148, 184.333)), ('A', '308', 3, 'smoc Outlier', (179.789, 135.053, 177.90200000000002)), ('A', '312', 3, 'Bond length:CB:CG1', (169.70499999999998, 134.23899999999998, 179.45800000000003)), ('A', '599', 3, 'smoc Outlier', (173.88700000000003, 129.447, 180.21699999999998)), ('A', '600', 3, 'Bond angle:N:CA:C\nBond angle:C', (176.343, 129.448, 183.161)), ('A', '601', 3, 'Bond angle:N:CA', (179.126, 131.722, 182.24099999999999)), ('A', '603', 3, 'Rotamer', (184.384, 130.648, 182.873)), ('A', '350', 4, 'smoc Outlier', (136.201, 154.80700000000002, 119.17099999999999)), ('A', '402', 4, 'smoc Outlier', (141.97, 154.061, 116.577)), ('A', '418', 4, 'smoc Outlier', (140.82100000000003, 160.252, 122.396)), ('A', '423', 4, 'smoc Outlier', (137.515, 156.969, 125.603)), ('A', '425', 4, 'smoc Outlier', (140.74899999999997, 155.565, 131.547)), ('A', '427', 4, 'smoc Outlier', (144.15200000000002, 157.63899999999998, 136.905)), ('A', '805', 5, 'smoc Outlier', (187.092, 155.895, 205.39600000000002)), ('A', '811', 5, 'side-chain clash\nsmoc Outlier', (194.89, 154.415, 197.8)), ('A', '818', 5, 'smoc Outlier', (187.74099999999999, 152.45800000000003, 200.415)), ('A', '820', 5, 'side-chain clash\nBond angle:CA:CB:CG', (190.423, 154.038, 195.971)), ('A', '822', 5, 'smoc Outlier', (185.69299999999998, 152.023, 194.30100000000002)), ('A', '358', 6, 'smoc Outlier', (133.51399999999998, 138.348, 131.38500000000002)), ('A', '360', 6, 'side-chain clash', (131.928, 134.602, 136.883)), ('A', '522', 6, 'smoc Outlier', (135.844, 135.96200000000002, 142.44)), ('A', '523', 6, 'side-chain clash', (131.928, 134.602, 136.883)), ('A', '524', 6, 'smoc Outlier', (136.79899999999998, 134.859, 137.138)), ('A', '1305', 7, 'Bond angle:C3:C2:N2\nBond length:C5:O5\nBond length:C1:C2\nBond length:C3:C4\nsmoc Outlier', (160.39100000000002, 113.147, 192.517)), ('A', '340', 7, 'side-chain clash\nbackbone clash\nsmoc Outlier', (164.336, 116.048, 188.933)), ('A', '356', 7, 'side-chain clash\nbackbone clash', (164.336, 116.048, 188.933)), ('A', '657', 7, 'Rotamer\nBond angle:CA:CB:CG\nsmoc Outlier', (161.317, 118.337, 191.941)), ('A', '1301', 8, 'Bond length:C3:C4\nBond length:C5:O5\nBond length:C1:C2\nsmoc Outlier', (181.83200000000002, 112.56400000000001, 158.631)), ('A', '535', 8, 'side-chain clash', (181.078, 118.336, 160.023)), ('A', '554', 8, 'side-chain clash', (181.078, 118.336, 160.023)), ('A', '61', 8, 'Rotamer\nBond angle:CA:CB:CG', (184.942, 116.80799999999999, 158.256)), ('A', '111', 9, 'Bond angle:CA:CB:CG', (188.335, 118.35799999999999, 127.197)), ('A', '112', 9, 'cablam Outlier', (190.5, 120.8, 125.2)), ('A', '132', 9, 'smoc Outlier', (192.354, 124.973, 125.909)), ('A', '166', 9, 'smoc Outlier', (195.42800000000003, 130.48800000000003, 125.254)), ('A', '736', 10, 'smoc Outlier', (176.416, 166.22299999999998, 169.653)), ('A', '738', 10, 'smoc Outlier', (173.39200000000002, 168.51, 164.86800000000002)), ('A', '742', 10, 'smoc Outlier', (174.859, 164.70299999999997, 159.55700000000002)), ('A', '763', 10, 'smoc Outlier', (168.32200000000003, 168.695, 169.375)), ('A', '1058', 11, 'cablam Outlier', (179.4, 159.0, 188.9)), ('A', '1060', 11, 'smoc Outlier', (177.77899999999997, 157.863, 195.917)), ('A', '728', 11, 'smoc Outlier', (174.11499999999998, 156.612, 190.641)), ('A', '729', 11, 'smoc Outlier', (174.265, 160.37800000000001, 190.708)), ('A', '186', 12, 'Bond length:CG:CD2\nBond length:CG:CD1', (205.484, 115.12799999999999, 158.439)), ('A', '213', 12, 'smoc Outlier', (201.667, 112.131, 160.437)), ('A', '214', 12, 'smoc Outlier', (198.42000000000002, 110.35799999999999, 161.35100000000003)), ('A', '193', 13, 'smoc Outlier', (191.76, 128.439, 149.82800000000003)), ('A', '267', 13, 'smoc Outlier', (189.661, 118.505, 150.65200000000002)), ('A', '92', 13, 'smoc Outlier', (192.8, 122.336, 150.364)), ('A', '117', 14, 'smoc Outlier', (193.539, 126.765, 134.595)), ('A', '119', 14, 'smoc Outlier', (199.008, 125.9, 138.132)), ('A', '128', 14, 'smoc Outlier', (200.11299999999997, 129.771, 135.738)), ('A', '434', 15, 'smoc Outlier', (146.39800000000002, 145.35500000000002, 124.19)), ('A', '511', 15, 'smoc Outlier', (141.154, 145.805, 123.543)), ('A', '513', 15, 'smoc Outlier', (140.873, 144.601, 129.942)), ('A', '442', 16, 'smoc Outlier', (140.11299999999997, 147.907, 108.351)), ('A', '444', 16, 'smoc Outlier', (140.61899999999997, 149.997, 102.274)), ('A', '445', 16, 'smoc Outlier', (141.303, 151.537, 98.915)), ('A', '1037', 17, 'smoc Outlier', (166.493, 158.16899999999998, 210.524)), ('A', '1043', 17, 'cablam Outlier', (169.2, 153.7, 205.9)), ('A', '1045', 17, 'cablam Outlier', (168.4, 147.0, 207.5)), ('A', '666', 18, 'cablam Outlier\nsmoc Outlier', (163.1, 131.4, 183.2)), ('A', '667', 18, 'cablam Outlier', (159.5, 132.5, 184.1)), ('A', '484', 19, 'cablam Outlier', (126.6, 173.3, 109.5)), ('A', '490', 19, 'smoc Outlier', (129.42200000000003, 168.23299999999998, 113.256)), ('A', '277', 20, 'smoc Outlier', (186.87, 137.35800000000003, 163.85200000000003)), ('A', '285', 20, 'smoc Outlier', (193.499, 137.222, 163.372)), ('A', '1094', 21, 'smoc Outlier', (157.627, 145.124, 229.787)), ('A', '1096', 21, 'smoc Outlier', (158.67399999999998, 139.399, 232.316)), ('A', '368', 22, 'smoc Outlier', (147.24699999999999, 136.686, 124.955)), ('A', '369', 22, 'smoc Outlier', (150.525, 137.578, 126.611)), ('A', '676', 23, 'smoc Outlier', (176.085, 118.383, 190.472)), ('A', '689', 23, 'smoc Outlier', (178.751, 115.38799999999999, 187.148)), ('A', '53', 24, 'Bond angle:CA:CB:CG\nsmoc Outlier', (181.819, 135.066, 153.55100000000002)), ('A', '55', 24, 'Bond angle:CA:CB:CG', (184.52800000000002, 129.697, 155.02200000000002)), ('A', '538', 25, 'smoc Outlier', (151.123, 124.45100000000001, 158.202)), ('A', '590', 25, 'smoc Outlier', (151.695, 128.83200000000002, 162.253)), ('A', '1087', 26, 'smoc Outlier', (146.661, 147.87800000000001, 238.401)), ('A', '1125', 26, 'cablam CA Geom Outlier', (142.2, 147.9, 239.2)), ('A', '393', 27, 'backbone clash\nside-chain clash\ncablam Outlier', (156.184, 139.647, 138.611)), ('A', '394', 27, 'backbone clash\nside-chain clash', (156.184, 139.647, 138.611)), ('A', '387', 28, 'smoc Outlier', (147.795, 137.424, 135.471)), ('A', '390', 28, 'smoc Outlier', (145.07, 136.083, 139.905)), ('A', '797', 29, 'cablam Outlier\nsmoc Outlier', (187.3, 158.1, 219.0)), ('A', '800', 29, 'smoc Outlier', (186.288, 153.333, 216.85800000000003)), ('A', '1115', 30, 'smoc Outlier', (159.606, 146.089, 239.972)), ('A', '1137', 30, 'smoc Outlier', (155.424, 146.189, 243.772)), ('A', '518', 31, 'smoc Outlier', (136.796, 143.55200000000002, 145.568)), ('A', '519', 31, 'smoc Outlier', (136.20299999999997, 141.348, 148.624)), ('A', '557', 32, 'side-chain clash\nbackbone clash', (165.2, 156.554, 217.31)), ('A', '574', 32, 'side-chain clash\nbackbone clash\nsmoc Outlier', (165.2, 156.554, 217.31)), ('A', '854', 33, 'smoc Outlier', (183.48800000000003, 158.64299999999997, 167.107)), ('A', '856', 33, 'cablam CA Geom Outlier', (182.1, 163.1, 164.1)), ('A', '869', 34, 'Bond length:SD:CE', (186.662, 168.371, 194.961)), ('A', '870', 34, 'smoc Outlier', (184.127, 165.64, 195.533)), ('A', '877', 35, 'smoc Outlier', (180.76299999999998, 165.515, 205.76999999999998)), ('A', '881', 35, 'smoc Outlier', (179.721, 163.313, 211.44899999999998)), ('B', '100', 1, 'cablam CA Geom Outlier\nsmoc Outlier', (137.7, 173.7, 111.7)), ('B', '32', 1, 'backbone clash', (134.564, 169.043, 108.878)), ('B', '33', 1, 'backbone clash', (134.564, 169.043, 108.878)), ('B', '34', 1, 'smoc Outlier', (136.73999999999998, 171.282, 104.063)), ('B', '99', 1, 'smoc Outlier', (136.811, 174.063, 107.91400000000002)), ('B', '119', 2, 'smoc Outlier', (143.71699999999998, 195.15200000000002, 85.938)), ('B', '13', 2, 'smoc Outlier', (143.44, 189.36200000000002, 84.21100000000001)), ('B', '15', 2, 'cablam Outlier', (137.2, 188.9, 84.8)), ('B', '17', 2, 'smoc Outlier', (137.67899999999997, 182.77599999999998, 85.91300000000001)), ('B', '108', 3, 'smoc Outlier', (149.23399999999998, 172.08200000000002, 109.239)), ('B', '2', 3, 'smoc Outlier', (149.36800000000002, 168.21399999999997, 106.56400000000001)), ('B', '3', 3, 'smoc Outlier', (148.5, 165.46800000000002, 103.932)), ('C', '1071', 1, 'Bond angle:N:CA:C', (134.499, 163.30800000000002, 220.866)), ('C', '1072', 1, 'Dihedral angle:CB:CG:CD:OE1', (136.046, 166.518, 222.111)), ('C', '1074', 1, 'Bond angle:CA:CB:CG', (135.748, 172.42000000000002, 225.796)), ('C', '1109', 1, 'cablam Outlier', (142.7, 161.4, 225.5)), ('C', '1134', 1, 'Rotamer\nside-chain clash', (137.193, 163.958, 221.78)), ('C', '1307', 1, 'Bond length:C5:O5\nBond length:C3:C4\nsmoc Outlier', (134.007, 175.484, 221.83200000000002)), ('C', '714', 1, 'smoc Outlier', (140.37800000000001, 167.447, 224.248)), ('C', '1303', 2, 'Bond length:C5:O5\nBond length:C3:C4', (122.615, 149.097, 184.34)), ('C', '308', 2, 'smoc Outlier', (128.58100000000002, 155.641, 177.901)), ('C', '309', 2, 'smoc Outlier', (130.029, 156.46200000000002, 181.29399999999998)), ('C', '600', 2, 'Bond angle:N:CA:C\nBond angle:C', (125.456, 161.42100000000002, 183.164)), ('C', '601', 2, 'Bond angle:N:CA', (126.032, 157.876, 182.23299999999998)), ('C', '603', 2, 'Rotamer', (122.47099999999998, 153.86099999999993, 182.872)), ('C', '360', 3, 'side-chain clash', (152.051, 197.394, 136.892)), ('C', '393', 3, 'backbone clash\ncablam Outlier', (156.336, 191.235, 138.965)), ('C', '394', 3, 'backbone clash', (156.336, 191.235, 138.965)), ('C', '395', 3, 'smoc Outlier', (155.71399999999997, 189.76899999999998, 133.835)), ('C', '523', 3, 'side-chain clash', (152.051, 197.394, 136.892)), ('C', '524', 3, 'smoc Outlier', (149.907, 192.95800000000003, 137.141)), ('C', '196', 4, 'Bond length:CB:CG', (123.22, 151.71299999999997, 142.267)), ('C', '198', 4, 'smoc Outlier', (129.41899999999998, 150.70899999999997, 139.863)), ('C', '200', 4, 'Bond length:CB:CG', (125.137, 147.11399999999998, 139.966)), ('C', '228', 4, 'Bond length:CG:OD1', (123.251, 141.877, 142.917)), ('C', '231', 4, 'cablam Outlier', (123.2, 145.7, 134.6)), ('C', '1305', 5, 'Bond angle:C3:C2:N2\nBond length:C5:O5\nBond length:C1:C2\nBond length:C3:C4\nsmoc Outlier', (119.332, 183.40800000000002, 192.52200000000002)), ('C', '557', 5, 'side-chain clash\nbackbone clash\nsmoc Outlier', (119.977, 178.761, 188.756)), ('C', '574', 5, 'side-chain clash\nbackbone clash', (119.977, 178.761, 188.756)), ('C', '657', 5, 'Rotamer\nBond angle:CA:CB:CG\nsmoc Outlier', (123.348, 179.99800000000002, 191.94)), ('C', '111', 6, 'Bond angle:CA:CB:CG', (109.859, 156.55100000000002, 127.203)), ('C', '112', 6, 'cablam Outlier', (110.9, 153.5, 125.2)), ('C', '133', 6, 'Bond angle:CA:CB:CG', (110.187, 149.18, 127.345)), ('C', '134', 6, 'smoc Outlier', (107.007, 150.92800000000003, 126.482)), ('C', '350', 7, 'smoc Outlier', (167.47899999999998, 183.518, 119.16499999999999)), ('C', '402', 7, 'smoc Outlier', (163.95200000000003, 178.90200000000002, 116.584)), ('C', '418', 7, 'smoc Outlier', (169.889, 176.79, 122.396)), ('C', '423', 7, 'smoc Outlier', (168.7, 181.291, 125.601)), ('C', '442', 8, 'smoc Outlier', (159.539, 183.583, 108.353)), ('C', '444', 8, 'smoc Outlier', (161.106, 182.089, 102.27499999999999)), ('C', '499', 8, 'smoc Outlier', (158.83800000000002, 176.708, 102.83)), ('C', '1033', 9, 'smoc Outlier', (153.798, 147.329, 207.208)), ('C', '1034', 9, 'cablam Outlier', (157.2, 146.6, 208.7)), ('C', '1050', 9, 'smoc Outlier', (149.641, 149.373, 211.702)), ('C', '186', 10, 'Bond length:CG:CD2\nBond length:CG:CD1', (98.474, 143.369, 158.46)), ('C', '213', 10, 'smoc Outlier', (97.785, 148.201, 160.463)), ('C', '214', 10, 'smoc Outlier', (97.84400000000001, 151.901, 161.38000000000002)), ('C', '938', 11, 'smoc Outlier', (135.06, 146.172, 197.559)), ('C', '942', 11, 'smoc Outlier', (133.82200000000003, 147.98000000000002, 190.942)), ('C', '945', 11, 'smoc Outlier', (140.10299999999998, 149.359, 191.848)), ('C', '312', 12, 'Bond length:CB:CG1', (132.91899999999998, 164.78, 179.45800000000003)), ('C', '597', 12, 'smoc Outlier', (129.5, 166.441, 175.45700000000002)), ('C', '610', 12, 'smoc Outlier', (127.114, 170.496, 175.02800000000002)), ('C', '1037', 13, 'smoc Outlier', (155.251, 155.598, 210.52100000000002)), ('C', '1043', 13, 'cablam Outlier', (150.0, 155.5, 205.9)), ('C', '1045', 13, 'cablam Outlier', (144.6, 159.5, 207.5)), ('C', '480', 14, 'smoc Outlier', (192.575, 183.86700000000002, 114.727)), ('C', '484', 14, 'cablam Outlier', (188.3, 182.6, 109.6)), ('C', '486', 14, 'cablam Outlier', (191.5, 176.4, 109.5)), ('C', '1301', 15, 'Bond length:C5:O5\nBond length:C3:C4\nBond length:C1:C2\nsmoc Outlier', (108.074, 165.122, 158.61399999999998)), ('C', '61', 15, 'Rotamer\nBond angle:CA:CB:CG', (110.17099999999999, 160.314, 158.265)), ('C', '1302', 16, 'Bond length:C5:O5\nBond length:C3:C4\nsmoc Outlier', (124.392, 131.69, 168.937)), ('C', '281', 16, 'smoc Outlier', (128.238, 136.02700000000002, 168.553)), ('C', '666', 17, 'cablam Outlier\nsmoc Outlier', (133.8, 171.9, 183.2)), ('C', '667', 17, 'cablam Outlier', (136.5, 174.5, 184.1)), ('C', '340', 18, 'side-chain clash\nsmoc Outlier', (154.402, 196.978, 123.752)), ('C', '356', 18, 'side-chain clash\nsmoc Outlier', (154.402, 196.978, 123.752)), ('C', '811', 19, 'side-chain clash\nsmoc Outlier', (137.948, 132.593, 197.527)), ('C', '820', 19, 'side-chain clash', (137.948, 132.593, 197.527)), ('C', '277', 20, 'smoc Outlier', (127.036, 148.354, 163.853)), ('C', '285', 20, 'smoc Outlier', (123.595, 142.683, 163.374)), ('C', '570', 21, 'smoc Outlier', (154.445, 184.068, 163.866)), ('C', '571', 21, 'smoc Outlier', (155.176, 185.726, 160.554)), ('C', '993', 22, 'smoc Outlier', (157.023, 148.055, 149.94299999999998)), ('C', '996', 22, 'smoc Outlier', (154.835, 150.632, 153.805)), ('C', '53', 23, 'Bond angle:CA:CB:CG', (127.57799999999999, 153.873, 153.55100000000002)), ('C', '55', 23, 'Bond angle:CA:CB:CG', (121.571, 154.207, 155.02200000000002)), ('C', '1062', 24, 'smoc Outlier', (147.236, 148.265, 201.684)), ('C', '1063', 24, 'smoc Outlier', (144.836, 148.272, 204.55200000000002)), ('C', '535', 25, 'side-chain clash', (134.94, 200.781, 158.336)), ('C', '554', 25, 'side-chain clash', (134.94, 200.781, 158.336)), ('C', '922', 26, 'smoc Outlier', (135.9, 148.02700000000002, 222.33100000000002)), ('C', '923', 26, 'smoc Outlier', (138.983, 148.436, 220.253)), ('C', '1123', 27, 'smoc Outlier', (161.441, 176.29, 236.618)), ('C', '1125', 27, 'cablam CA Geom Outlier', (158.5, 181.8, 239.2)), ('C', '104', 28, 'smoc Outlier', (108.43, 147.894, 140.30200000000002)), ('C', '119', 28, 'smoc Outlier', (111.05499999999999, 143.58, 138.12800000000001)), ('C', '108', 29, 'cablam Outlier', (115.1, 157.6, 133.8)), ('C', '235', 29, 'smoc Outlier', (118.164, 155.192, 137.227)), ('C', '518', 30, 'smoc Outlier', (157.424, 188.61399999999998, 145.589)), ('C', '519', 30, 'smoc Outlier', (155.816, 190.24099999999999, 148.63899999999998)), ('C', '854', 31, 'smoc Outlier', (147.157, 140.634, 167.108)), ('C', '856', 31, 'cablam CA Geom Outlier', (151.7, 139.6, 164.1)), ('C', '758', 32, 'backbone clash', (167.462, 149.259, 165.194)), ('C', '759', 32, 'backbone clash', (167.462, 149.259, 165.194)), ('C', '564', 33, 'smoc Outlier', (151.475, 197.07399999999998, 151.91)), ('C', '565', 33, 'Bond length:CB:CG', (150.59, 194.57399999999998, 154.58200000000002)), ('C', '325', 34, 'smoc Outlier', (133.718, 186.752, 149.83800000000002)), ('C', '326', 34, 'smoc Outlier', (135.70999999999998, 189.88200000000003, 149.155)), ('E', '119', 1, 'smoc Outlier', (198.668, 156.83800000000002, 85.94900000000001)), ('E', '13', 1, 'smoc Outlier', (193.791, 159.977, 84.212)), ('E', '15', 1, 'cablam Outlier', (196.5, 165.6, 84.8)), ('E', '100', 2, 'cablam CA Geom Outlier', (183.1, 172.8, 111.7)), ('E', '34', 2, 'smoc Outlier', (181.511, 174.80800000000002, 104.089)), ('E', '99', 2, 'smoc Outlier', (183.874, 173.36100000000002, 107.935)), ('E', '38', 3, 'smoc Outlier', (188.242, 163.36, 101.68199999999999)), ('E', '39', 3, 'smoc Outlier', (188.997, 159.89000000000001, 102.915)), ('E', '3', 4, 'smoc Outlier', (170.555, 167.52700000000002, 103.923)), ('E', '4', 4, 'smoc Outlier', (173.35500000000002, 167.315, 101.333)), ('D', '1071', 1, 'Dihedral angle:CA:C\nBond angle:N:CA:C', (175.695, 180.73399999999998, 220.865)), ('D', '1072', 1, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA\nsmoc Outlier', (177.70299999999997, 177.789, 222.108)), ('D', '1074', 1, 'Bond angle:CA:CB:CG', (182.963, 175.096, 225.795)), ('D', '1109', 1, 'cablam Outlier', (170.0, 174.6, 225.5)), ('D', '1134', 1, 'Rotamer\nside-chain clash', (174.723, 177.913, 221.66)), ('D', '1307', 1, 'Bond length:C5:O5\nBond length:C3:C4\nsmoc Outlier', (186.48700000000002, 175.07, 221.83200000000002)), ('D', '557', 1, 'side-chain clash\nbackbone clash', (174.351, 177.539, 222.101)), ('D', '574', 1, 'side-chain clash\nbackbone clash', (174.351, 177.539, 222.101)), ('D', '712', 1, 'smoc Outlier', (181.251, 169.372, 224.697)), ('D', '714', 1, 'smoc Outlier', (176.344, 173.567, 224.248)), ('D', '350', 2, 'smoc Outlier', (176.702, 142.062, 119.16999999999999)), ('D', '351', 2, 'smoc Outlier', (175.74699999999999, 138.464, 119.85799999999999)), ('D', '402', 2, 'smoc Outlier', (174.46200000000002, 147.437, 116.574)), ('D', '417', 2, 'smoc Outlier', (166.198, 142.142, 121.589)), ('D', '418', 2, 'smoc Outlier', (169.66299999999998, 143.343, 122.386)), ('D', '423', 2, 'smoc Outlier', (174.165, 142.118, 125.6)), ('D', '425', 2, 'smoc Outlier', (173.77399999999997, 145.617, 131.545)), ('D', '429', 2, 'smoc Outlier', (175.52700000000002, 149.341, 136.35700000000003)), ('D', '462', 2, 'smoc Outlier', (171.85700000000003, 137.77299999999997, 132.809)), ('D', '465', 2, 'smoc Outlier', (176.55100000000002, 136.984, 129.636)), ('D', '196', 3, 'Bond length:CB:CG', (171.304, 196.298, 142.208)), ('D', '197', 3, 'smoc Outlier', (168.906, 193.425, 142.664)), ('D', '198', 3, 'smoc Outlier', (167.289, 191.434, 139.88700000000003)), ('D', '200', 3, 'Bond length:CB:CG', (166.339, 196.95200000000003, 139.93200000000002)), ('D', '202', 3, 'side-chain clash', (163.012, 196.872, 144.507)), ('D', '228', 3, 'side-chain clash\nBond length:CG:OD1', (162.718, 201.156, 142.92200000000003)), ('D', '231', 3, 'cablam Outlier\nsmoc Outlier', (166.1, 199.3, 134.6)), ('D', '357', 4, 'smoc Outlier', (190.634, 144.662, 130.69899999999998)), ('D', '358', 4, 'smoc Outlier', (192.295, 147.971, 131.383)), ('D', '360', 4, 'side-chain clash', (196.426, 148.672, 136.496)), ('D', '393', 4, 'backbone clash\ncablam Outlier', (188.993, 148.135, 139.115)), ('D', '394', 4, 'backbone clash', (188.993, 148.135, 139.115)), ('D', '523', 4, 'side-chain clash', (196.426, 148.672, 136.496)), ('D', '524', 4, 'smoc Outlier', (193.668, 152.564, 137.134)), ('D', '1080', 5, 'smoc Outlier', (178.809, 159.23299999999998, 233.906)), ('D', '1081', 5, 'smoc Outlier', (179.339, 160.191, 237.536)), ('D', '1087', 5, 'smoc Outlier', (177.46800000000002, 154.59, 238.4)), ('D', '1123', 5, 'smoc Outlier', (173.466, 150.912, 236.61599999999999)), ('D', '1125', 5, 'cablam CA Geom Outlier', (179.7, 150.8, 239.2)), ('D', '1126', 5, 'smoc Outlier', (182.944, 152.89100000000002, 239.13899999999998)), ('D', '1305', 6, 'Bond angle:C3:C2:N2\nBond length:C5:O5\nBond length:C1:C2\nBond length:C3:C4\nsmoc Outlier', (200.686, 183.82200000000003, 192.518)), ('D', '657', 6, 'Rotamer\nBond angle:CA:CB:CG\nsmoc Outlier', (195.724, 182.047, 191.941)), ('D', '658', 6, 'smoc Outlier', (193.197, 183.207, 194.64399999999998)), ('D', '811', 6, 'side-chain clash\nbackbone clash', (196.109, 185.134, 188.903)), ('D', '1303', 7, 'Bond length:C5:O5\nBond length:C3:C4', (169.329, 198.124, 184.341)), ('D', '600', 7, 'Bond angle:N:CA:C\nBond angle:C', (178.626, 189.533, 183.15800000000002)), ('D', '601', 7, 'Bond angle:N:CA', (175.255, 190.77599999999998, 182.228)), ('D', '603', 7, 'Rotamer\nsmoc Outlier', (173.53, 195.869, 182.875)), ('D', '985', 8, 'side-chain clash', (144.759, 173.55, 138.424)), ('D', '986', 8, 'Bond angle:CA:C', (145.785, 168.232, 142.002)), ('D', '987', 8, 'Bond angle:N', (148.21299999999997, 165.82100000000003, 140.18200000000002)), ('D', '990', 8, 'smoc Outlier', (149.41, 166.637, 145.965)), ('D', '291', 9, 'smoc Outlier', (175.696, 189.803, 164.35000000000002)), ('D', '293', 9, 'cablam CA Geom Outlier', (180.8, 192.6, 164.9)), ('D', '301', 9, 'smoc Outlier', (171.722, 187.569, 167.95100000000002)), ('D', '58', 9, 'smoc Outlier', (178.98600000000002, 198.5, 162.017)), ('D', '34', 10, 'cablam CA Geom Outlier', (174.6, 204.1, 160.2)), ('D', '35', 10, 'smoc Outlier', (173.324, 202.564, 156.917)), ('D', '36', 10, 'smoc Outlier', (170.39700000000002, 200.511, 158.20999999999998)), ('D', '55', 10, 'Bond angle:CA:CB:CG', (174.26999999999998, 196.46800000000002, 155.025)), ('D', '1058', 11, 'cablam Outlier', (151.4, 177.4, 188.9)), ('D', '1060', 11, 'smoc Outlier', (153.26299999999998, 176.546, 195.916)), ('D', '1062', 11, 'smoc Outlier', (156.30100000000002, 177.227, 201.684)), ('D', '729', 11, 'smoc Outlier', (152.842, 172.24499999999998, 190.708)), ('D', '365', 12, 'smoc Outlier', (188.73999999999998, 160.394, 129.945)), ('D', '368', 12, 'smoc Outlier', (186.869, 160.691, 124.93700000000001)), ('D', '387', 12, 'smoc Outlier', (185.95600000000002, 160.845, 135.48700000000002)), ('D', '390', 12, 'smoc Outlier', (188.47299999999998, 159.11299999999997, 139.895)), ('D', '1308', 13, 'Bond length:C5:O5\nBond length:C3:C4', (171.291, 203.047, 117.601)), ('D', '165', 13, 'Bond angle:C', (169.262, 205.718, 121.543)), ('D', '166', 13, 'Bond angle:N:CA\nsmoc Outlier', (168.099, 205.542, 125.27)), ('D', '112', 14, 'cablam Outlier', (179.0, 206.0, 125.2)), ('D', '133', 14, 'Bond angle:CA:CB:CG', (175.591, 208.83200000000002, 127.346)), ('D', '134', 14, 'smoc Outlier', (178.70499999999998, 210.678, 126.46100000000001)), ('D', '876', 15, 'smoc Outlier', (141.905, 177.186, 205.277)), ('D', '877', 15, 'smoc Outlier', (145.14499999999998, 175.305, 205.771)), ('D', '881', 15, 'smoc Outlier', (147.572, 175.505, 211.45000000000002)), ('D', '736', 16, 'smoc Outlier', (146.71899999999997, 171.192, 169.651)), ('D', '738', 16, 'smoc Outlier', (146.23299999999998, 167.43, 164.875)), ('D', '742', 16, 'smoc Outlier', (148.80100000000002, 170.595, 159.559)), ('D', '959', 17, 'smoc Outlier', (155.148, 176.151, 171.568)), ('D', '962', 17, 'smoc Outlier', (155.98600000000002, 174.39600000000002, 166.89800000000002)), ('D', '965', 17, 'smoc Outlier', (158.006, 175.12800000000001, 161.912)), ('D', '1301', 18, 'Bond length:C3:C4\nBond length:C5:O5\nBond length:C1:C2\nsmoc Outlier', (190.48100000000002, 202.71499999999997, 158.621)), ('D', '61', 18, 'Rotamer\nBond angle:CA:CB:CG', (185.268, 203.297, 158.26399999999998)), ('D', '666', 19, 'cablam Outlier\nsmoc Outlier', (183.5, 177.0, 183.2)), ('D', '667', 19, 'cablam Outlier', (184.4, 173.4, 184.1)), ('D', '661', 20, 'smoc Outlier', (183.03, 181.156, 195.48100000000002)), ('D', '697', 20, 'smoc Outlier', (186.536, 177.771, 192.991)), ('D', '543', 21, 'smoc Outlier', (195.751, 158.796, 148.41899999999998)), ('D', '544', 21, 'smoc Outlier', (195.354, 156.70399999999998, 145.28)), ('D', '340', 22, 'side-chain clash\nsmoc Outlier', (194.848, 146.959, 123.356)), ('D', '356', 22, 'side-chain clash', (194.848, 146.959, 123.356)), ('D', '442', 23, 'smoc Outlier', (180.71899999999997, 148.91299999999998, 108.37299999999999)), ('D', '444', 23, 'smoc Outlier', (178.64899999999997, 148.32500000000002, 102.27799999999999)), ('D', '535', 24, 'side-chain clash', (207.906, 161.507, 158.215)), ('D', '554', 24, 'side-chain clash\nsmoc Outlier', (207.906, 161.507, 158.215)), ('D', '1012', 25, 'smoc Outlier', (155.071, 164.156, 177.88600000000002)), ('D', '1013', 25, 'smoc Outlier', (158.555, 164.161, 179.314)), ('D', '538', 26, 'smoc Outlier', (195.525, 170.17299999999997, 158.201)), ('D', '590', 26, 'smoc Outlier', (191.446, 168.47299999999998, 162.253)), ('D', '318', 27, 'smoc Outlier', (185.38600000000002, 176.523, 165.80800000000002)), ('D', '319', 27, 'smoc Outlier', (186.853, 174.586, 162.941)), ('D', '312', 28, 'Bond length:CB:CG1', (177.758, 181.363, 179.45600000000002)), ('D', '597', 28, 'smoc Outlier', (180.911, 183.493, 175.46200000000002)), ('D', '108', 29, 'cablam Outlier', (180.5, 200.4, 133.7)), ('D', '235', 29, 'smoc Outlier', (176.836, 198.95000000000002, 137.221)), ('D', '518', 30, 'smoc Outlier', (186.154, 148.196, 145.567)), ('D', '519', 30, 'smoc Outlier', (188.35800000000003, 148.79, 148.623)), ('D', '854', 31, 'smoc Outlier', (149.732, 181.106, 167.10899999999998)), ('D', '856', 31, 'cablam CA Geom Outlier', (146.5, 177.7, 164.1)), ('D', '1030', 32, 'smoc Outlier', (151.186, 166.809, 204.52)), ('D', '1034', 32, 'cablam Outlier', (149.9, 169.4, 208.7)), ('D', '758', 33, 'backbone clash', (147.249, 159.534, 165.041)), ('D', '759', 33, 'backbone clash', (147.249, 159.534, 165.041)), ('D', '324', 34, 'smoc Outlier', (197.25, 172.731, 151.88800000000003)), ('D', '326', 34, 'smoc Outlier', (198.105, 166.399, 149.153)), ('D', '480', 35, 'smoc Outlier', (164.466, 120.16199999999999, 114.721)), ('D', '484', 35, 'cablam Outlier', (165.5, 124.5, 109.6)), ('D', '1043', 36, 'cablam Outlier', (161.2, 171.2, 205.9)), ('D', '1045', 36, 'cablam Outlier', (167.4, 173.9, 207.5)), ('F', '100', 1, 'cablam CA Geom Outlier', (159.6, 133.9, 111.7)), ('F', '32', 1, 'backbone clash', (165.15, 133.426, 108.898)), ('F', '33', 1, 'backbone clash', (165.15, 133.426, 108.898)), ('F', '34', 1, 'smoc Outlier', (162.17499999999998, 134.281, 104.082)), ('F', '99', 1, 'smoc Outlier', (159.73999999999998, 132.961, 107.932)), ('F', '15', 2, 'cablam Outlier', (146.6, 125.9, 84.8)), ('F', '17', 2, 'smoc Outlier', (151.74499999999998, 129.36200000000002, 85.912)), ('F', '3', 3, 'smoc Outlier', (161.324, 147.38600000000002, 103.93100000000001)), ('F', '4', 3, 'smoc Outlier', (159.748, 145.077, 101.32799999999999)), ('G', '1', 1, 'Bond length:C3:C4\nBond length:C5:O5', (179.009, 129.67299999999997, 132.798)), ('G', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4', (176.151, 123.44500000000001, 131.20999999999998)), ('H', '1', 1, 'Bond length:C3:C4\nBond length:C5:O5', (176.503, 136.809, 225.596)), ('H', '2', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4\nBond length:C2:N2', (182.23399999999998, 136.732, 220.9)), ('I', '1', 1, 'Bond length:C3:C4\nBond length:C5:O5\nBond length:C4:O4', (193.89000000000001, 151.134, 216.122)), ('I', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4', (197.684, 148.11599999999999, 211.655)), ('J', '1', 1, 'Bond length:C5:O5\nBond length:C4:C5', (165.594, 130.756, 236.88000000000002)), ('J', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4', (168.632, 134.484, 242.541)), ('K', '1', 1, 'Bond angle:C3:C4:O4\nBond length:C3:C4\nBond length:C4:O4\nBond length:C5:O5\nBond length:C4:C5', (145.259, 134.847, 242.314)), ('K', '2', 1, 'Bond angle:C8:C7:N2\nBond angle:C8:C7:O7\nBond length:C3:C4\nBond length:C2:N2\nBond length:C5:O5', (141.02100000000002, 138.454, 248.21099999999998)), ('L', '1', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4\nBond length:C4:O4\nBond length:C4:C5', (141.389, 133.435, 121.615)), ('L', '2', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4', (147.196, 130.42700000000002, 118.476)), ('M', '1', 1, 'Bond length:C3:C4\nBond length:C5:O5', (124.30799999999999, 158.96200000000002, 132.787)), ('M', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4\nBond length:C2:N2', (120.329, 164.589, 131.207)), ('N', '1', 1, 'Bond length:C3:C4\nBond length:C5:O5', (131.74399999999997, 157.60299999999998, 225.597)), ('N', '2', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4\nBond length:C2:N2', (128.817, 152.678, 220.89600000000002)), ('O', '1', 1, 'Bond length:C3:C4\nBond length:C4:O4\nBond length:C5:O5', (135.48700000000002, 135.372, 216.147)), ('O', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4', (130.955, 133.606, 211.647)), ('P', '1', 1, 'Bond length:C5:O5\nBond length:C3:C4\nBond length:C4:C5', (132.339, 170.146, 236.583)), ('P', '2', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4', (133.575, 165.58200000000002, 242.459)), ('Q', '1', 1, 'Bond angle:C3:C4:O4\nBond length:C3:C4\nBond length:C4:O4\nBond length:C5:O5\nBond length:C4:C5', (145.69299999999998, 185.629, 242.341)), ('Q', '2', 1, 'Bond angle:C8:C7:N2\nBond angle:C8:C7:O7\nBond length:C3:C4\nBond length:C5:O5\nBond length:C2:N2', (150.929, 187.491, 248.226)), ('R', '1', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4\nBond length:C4:O4', (146.476, 189.871, 121.433)), ('R', '2', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4\nBond length:C2:N2', (140.804, 186.07299999999998, 118.54)), ('S', '1', 1, 'Bond length:C3:C4\nBond length:C5:O5', (177.06, 191.72899999999998, 132.812)), ('S', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4', (183.88500000000002, 192.412, 131.207)), ('T', '1', 1, 'Bond length:C3:C4\nBond length:C5:O5', (172.135, 185.96200000000002, 225.595)), ('T', '2', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4\nBond length:C2:N2', (169.339, 190.96800000000002, 220.899)), ('U', '1', 1, 'Bond length:C3:C4\nBond length:C4:O4\nBond length:C5:O5', (151.037, 193.787, 216.13299999999998)), ('U', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4', (151.748, 198.656, 211.65200000000002)), ('V', '1', 1, 'Bond length:C5:O5\nBond length:C4:C5', (182.833, 179.545, 236.877)), ('V', '2', 1, 'Bond length:C5:O5\nBond length:C3:C4', (178.08700000000002, 180.318, 242.537)), ('W', '1', 1, 'Bond angle:C3:C4:O4\nBond length:C3:C4\nBond length:C4:O4\nBond length:C5:O5\nBond length:C4:C5', (189.453, 159.889, 242.316)), ('W', '2', 1, 'Bond angle:C8:C7:N2\nBond angle:C8:C7:O7\nBond length:C3:C4\nBond length:C5:O5\nBond length:C2:N2', (188.45100000000002, 154.42000000000002, 248.21499999999997)), ('X', '1', 1, 'Bond length:C5:O5\nBond length:C3:C4\nBond length:C4:O4', (192.61399999999998, 157.238, 121.61)), ('X', '2', 1, 'Bond angle:C8:C7:N2\nBond length:C5:O5\nBond length:C3:C4', (192.183, 163.79899999999998, 118.492))]
data['probe'] = [(' D 715  PRO  HA ', ' D1071  GLN  O  ', -0.889, (174.723, 177.913, 221.66)), (' A 715  PRO  HA ', ' A1071  GLN  O  ', -0.883, (168.175, 138.579, 221.618)), (' C 715  PRO  HA ', ' C1071  GLN  O  ', -0.852, (137.193, 163.958, 221.78)), (' C 557  LYS  NZ ', ' C 574  ASP  OD2', -0.554, (148.679, 193.915, 162.742)), (' D 557  LYS  NZ ', ' D 574  ASP  OD2', -0.551, (195.616, 153.2, 162.832)), (' A 557  LYS  NZ ', ' A 574  ASP  OD2', -0.55, (136.454, 132.799, 162.793)), (' D 715  PRO  CA ', ' D1071  GLN  O  ', -0.54, (174.351, 177.539, 222.101)), (' D 811  LYS  NZ ', ' D 820  ASP  OD2', -0.532, (147.384, 193.079, 197.626)), (' D 725  GLU  OE2', ' D1028  LYS  NZ ', -0.53, (161.672, 170.856, 199.576)), (' A 908  GLY  O  ', ' A1038  LYS  NZ ', -0.523, (165.2, 156.554, 217.31)), (' C 908  GLY  O  ', ' C1038  LYS  NZ ', -0.522, (154.486, 157.507, 217.294)), (' A 811  LYS  NZ ', ' A 820  ASP  OD2', -0.521, (194.89, 154.415, 197.8)), (' A 340  GLU  OE1', ' A 356  LYS  NZ ', -0.52, (131.048, 136.906, 123.657)), (' C 725  GLU  OE2', ' C1028  LYS  NZ ', -0.517, (150.05, 156.078, 199.669)), (' A 725  GLU  OE2', ' A1028  LYS  NZ ', -0.517, (168.66, 153.399, 199.665)), (' D 908  GLY  O  ', ' D1038  LYS  NZ ', -0.517, (160.559, 166.42, 217.244)), (' D 656  VAL  HA ', ' D1305  NAG  H81', -0.514, (196.109, 185.134, 188.903)), (' C 656  VAL  HA ', ' C1305  NAG  H81', -0.513, (119.977, 178.761, 188.756)), (' A 715  PRO  CA ', ' A1071  GLN  O  ', -0.51, (168.019, 139.071, 222.155)), (' A 656  VAL  HA ', ' A1305  NAG  H81', -0.51, (164.336, 116.048, 188.933)), (' D 340  GLU  OE1', ' D 356  LYS  NZ ', -0.509, (194.848, 146.959, 123.356)), (' C 360  ASN  H  ', ' C 523  THR HG22', -0.5, (152.051, 197.394, 136.892)), (' D 360  ASN  H  ', ' D 523  THR HG22', -0.5, (196.426, 148.672, 136.496)), (' A 360  ASN  H  ', ' A 523  THR HG22', -0.493, (131.928, 134.602, 136.883)), (' C 811  LYS  NZ ', ' C 820  ASP  OD2', -0.481, (137.948, 132.593, 197.527)), (' C 340  GLU  OE1', ' C 356  LYS  NZ ', -0.479, (154.402, 196.978, 123.752)), (' C 138  ASP  N  ', ' C 138  ASP  OD2', -0.469, (99.264, 154.527, 133.509)), (' C 393  THR  OG1', ' C 394  ASN  N  ', -0.46, (156.336, 191.235, 138.965)), (' D 393  THR  OG1', ' D 394  ASN  N  ', -0.457, (188.993, 148.135, 139.115)), (' A 138  ASP  N  ', ' A 138  ASP  OD2', -0.456, (195.399, 110.174, 133.552)), (' A 393  THR  OG1', ' A 394  ASN  N  ', -0.455, (134.867, 141.409, 139.395)), (' C 535  LYS  NZ ', ' C 554  GLU  OE2', -0.451, (134.94, 200.781, 158.336)), (' D 535  LYS  NZ ', ' D 554  GLU  OE2', -0.444, (207.906, 161.507, 158.215)), (' A 386  LYS  NZ ', ' C 985  ASP  OD1', -0.438, (156.184, 139.647, 138.611)), (' C 386  LYS  NZ ', ' D 985  ASP  OD1', -0.434, (144.759, 173.55, 138.424)), (' D 202  LYS  NZ ', ' D 228  ASP  OD2', -0.429, (163.012, 196.872, 144.507)), (' D 138  ASP  N  ', ' D 138  ASP  OD2', -0.423, (185.871, 215.705, 133.436)), (' A 535  LYS  NZ ', ' A 554  GLU  OE2', -0.422, (137.452, 118.289, 158.16)), (' A  60  SER  HA ', ' A1301  NAG  H81', -0.416, (181.078, 118.336, 160.023)), (' F  32  ASN  OD1', ' F  33  ALA  N  ', -0.409, (165.15, 133.426, 108.898)), (' B  32  ASN  OD1', ' B  33  ALA  N  ', -0.406, (134.564, 169.043, 108.878)), (' D 745  ASP  N  ', ' D 745  ASP  OD1', -0.404, (141.957, 175.558, 156.034)), (' D 758  SER  O  ', ' D 759  PHE  C  ', -0.404, (147.249, 159.534, 165.041)), (' C 758  SER  O  ', ' C 759  PHE  C  ', -0.404, (167.462, 149.259, 165.194))]
data['cablam'] = [('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (181.4, 127.1, 145.9)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (184.8, 122.4, 133.8)), ('A', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (190.5, 120.8, 125.2)), ('A', '231', 'ILE', ' beta sheet', ' \nEE---', (191.1, 135.4, 134.6)), ('A', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEES-E', (135.4, 139.8, 140.6)), ('A', '475', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (131.7, 177.3, 117.9)), ('A', '484', 'GLU', 'check CA trace,carbonyls, peptide', ' \nT--BT', (126.6, 173.3, 109.5)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (130.4, 179.3, 109.5)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (163.1, 131.4, 183.2)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (159.5, 132.5, 184.1)), ('A', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (187.3, 158.1, 219.0)), ('A', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (173.3, 164.3, 208.7)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (169.2, 153.7, 205.9)), ('A', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSE', (168.4, 147.0, 207.5)), ('A', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (179.4, 159.0, 188.9)), ('A', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (167.8, 144.4, 225.5)), ('A', '34', 'ARG', 'check CA trace', ' \n-S---', (190.9, 125.6, 160.2)), ('A', '218', 'GLN', 'check CA trace', ' \n---S-', (194.6, 121.3, 165.6)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTSSH', (177.9, 126.0, 164.9)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (150.1, 130.9, 155.3)), ('A', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (182.1, 163.1, 164.1)), ('A', '1125', 'ASN', 'check CA trace', 'strand\nEEETT', (142.2, 147.9, 239.2)), ('B', '15', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nESEEE', (137.2, 188.9, 84.8)), ('B', '111', 'GLN', 'check CA trace,carbonyls, peptide', ' \n----E', (152.4, 175.7, 100.7)), ('B', '100', 'PRO', 'check CA trace', 'turn\nETT--', (137.7, 173.7, 111.7)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (120.8, 158.2, 145.9)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (115.1, 157.6, 133.8)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (110.9, 153.5, 125.2)), ('C', '231', 'ILE', ' beta sheet', ' \nEE---', (123.2, 145.7, 134.6)), ('C', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEES-E', (154.9, 191.8, 140.6)), ('C', '475', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (189.2, 176.1, 117.9)), ('C', '484', 'GLU', 'check CA trace,carbonyls, peptide', ' \nT--BT', (188.3, 182.6, 109.6)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (191.5, 176.4, 109.5)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (133.8, 171.9, 183.2)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (136.5, 174.5, 184.1)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (144.8, 137.6, 219.0)), ('C', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (157.2, 146.6, 208.7)), ('C', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (150.0, 155.5, 205.9)), ('C', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSE', (144.6, 159.5, 207.5)), ('C', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (149.5, 143.9, 188.9)), ('C', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (142.7, 161.4, 225.5)), ('C', '34', 'ARG', 'check CA trace', ' \n-S---', (114.8, 150.7, 160.2)), ('C', '218', 'GLN', 'check CA trace', ' \n---S-', (109.1, 149.5, 165.3)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTSSH', (121.7, 161.8, 164.9)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (139.8, 183.4, 155.3)), ('C', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (151.7, 139.6, 164.1)), ('C', '1125', 'ASN', 'check CA trace', 'strand\nEEETT', (158.5, 181.8, 239.2)), ('E', '15', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nESEEE', (196.5, 165.6, 84.8)), ('E', '111', 'GLN', 'check CA trace,carbonyls, peptide', ' \n----E', (177.4, 159.2, 100.6)), ('E', '100', 'PRO', 'check CA trace', 'turn\nETT--', (183.1, 172.8, 111.7)), ('D', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-TT-E', (178.1, 195.1, 145.9)), ('D', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (180.5, 200.4, 133.7)), ('D', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (179.0, 206.0, 125.2)), ('D', '231', 'ILE', ' beta sheet', ' \nEE---', (166.1, 199.3, 134.6)), ('D', '393', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n-BS-E', (190.1, 148.9, 140.6)), ('D', '475', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (159.4, 127.0, 117.9)), ('D', '484', 'GLU', 'check CA trace,carbonyls, peptide', ' \nT--BT', (165.5, 124.5, 109.6)), ('D', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-BTTE', (158.5, 124.8, 109.6)), ('D', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (183.5, 177.0, 183.2)), ('D', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (184.4, 173.4, 184.1)), ('D', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (148.3, 184.7, 219.0)), ('D', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (149.9, 169.4, 208.7)), ('D', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (161.2, 171.2, 205.9)), ('D', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nTSSSE', (167.4, 173.9, 207.5)), ('D', '1058', 'HIS', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (151.4, 177.4, 188.9)), ('D', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (170.0, 174.6, 225.5)), ('D', '34', 'ARG', 'check CA trace', ' \n-S--E', (174.6, 204.1, 160.2)), ('D', '218', 'GLN', 'check CA trace', ' \n---S-', (176.4, 209.6, 165.3)), ('D', '293', 'LEU', 'check CA trace', 'bend\nTTSSH', (180.8, 192.6, 164.9)), ('D', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (190.5, 166.1, 155.3)), ('D', '856', 'ASN', 'check CA trace', 'bend\n--SSE', (146.5, 177.7, 164.1)), ('D', '1125', 'ASN', 'check CA trace', 'strand\nEEETT', (179.7, 150.8, 239.2)), ('F', '15', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nESEEE', (146.6, 125.9, 84.8)), ('F', '111', 'GLN', 'check CA trace,carbonyls, peptide', ' \n----E', (150.5, 145.6, 100.7)), ('F', '100', 'PRO', 'check CA trace', 'turn\nETT--', (159.6, 133.9, 111.7))]
data['smoc'] = [('A', 27, u'ALA', 0.8048450105562807, (188.82100000000003, 108.197, 154.876)), ('A', 53, u'ASP', 0.8560622306996284, (181.819, 135.066, 153.55100000000002)), ('A', 69, u'HIS', 0.6745976299971659, (199.292, 103.218, 146.966)), ('A', 92, u'PHE', 0.7871338609904333, (192.8, 122.336, 150.364)), ('A', 117, u'LEU', 0.7596239609315377, (193.539, 126.765, 134.595)), ('A', 119, u'ILE', 0.7741886603071835, (199.008, 125.9, 138.132)), ('A', 122, u'ASN', 0.7544359876449342, (208.49, 123.694, 138.924)), ('A', 128, u'ILE', 0.7834702716357184, (200.11299999999997, 129.771, 135.738)), ('A', 132, u'GLU', 0.7990528661124341, (192.354, 124.973, 125.909)), ('A', 166, u'CYS', 0.776968928622743, (195.42800000000003, 130.48800000000003, 125.254)), ('A', 193, u'VAL', 0.7853450596643804, (191.76, 128.439, 149.82800000000003)), ('A', 198, u'ASP', 0.7849708081384809, (183.64, 138.254, 139.874)), ('A', 213, u'VAL', 0.7909972329588578, (201.667, 112.131, 160.437)), ('A', 214, u'ARG', 0.7267783340783698, (198.42000000000002, 110.35799999999999, 161.35100000000003)), ('A', 233, u'ILE', 0.8100685257448038, (187.24499999999998, 131.418, 134.023)), ('A', 235, u'ILE', 0.8404991031422538, (185.38000000000002, 126.271, 137.21499999999997)), ('A', 240, u'THR', 0.8024611470486538, (195.583, 117.726, 141.71399999999997)), ('A', 245, u'HIS', 0.6926883166615414, (208.553, 107.851, 141.399)), ('A', 267, u'VAL', 0.7590475177248105, (189.661, 118.505, 150.65200000000002)), ('A', 277, u'LEU', 0.8225459824028339, (186.87, 137.35800000000003, 163.85200000000003)), ('A', 285, u'ILE', 0.777987762150069, (193.499, 137.222, 163.372)), ('A', 298, u'GLU', 0.8268320259116095, (175.124, 132.04299999999998, 168.45800000000003)), ('A', 308, u'VAL', 0.8296539003755117, (179.789, 135.053, 177.90200000000002)), ('A', 319, u'ARG', 0.7998987367923528, (159.283, 129.748, 162.94299999999998)), ('A', 326, u'ILE', 0.8280924199371504, (146.568, 124.104, 149.155)), ('A', 340, u'GLU', 0.7929001644744534, (135.035, 136.771, 120.777)), ('A', 346, u'ARG', 0.7850610893368681, (133.88400000000001, 144.24599999999998, 113.41700000000002)), ('A', 350, u'VAL', 0.8535063632816489, (136.201, 154.80700000000002, 119.17099999999999)), ('A', 358, u'ILE', 0.8069601192001802, (133.51399999999998, 138.348, 131.38500000000002)), ('A', 368, u'LEU', 0.8232963141887704, (147.24699999999999, 136.686, 124.955)), ('A', 369, u'TYR', 0.8323908254121603, (150.525, 137.578, 126.611)), ('A', 382, u'VAL', 0.8049405584211327, (149.71399999999997, 144.295, 137.646)), ('A', 387, u'LEU', 0.8020152674102882, (147.795, 137.424, 135.471)), ('A', 390, u'LEU', 0.8497090274900814, (145.07, 136.083, 139.905)), ('A', 402, u'ILE', 0.8101539205253355, (141.97, 154.061, 116.577)), ('A', 410, u'ILE', 0.6537704067845097, (144.893, 154.736, 125.887)), ('A', 418, u'ILE', 0.7591928242495525, (140.82100000000003, 160.252, 122.396)), ('A', 423, u'TYR', 0.8336444258693858, (137.515, 156.969, 125.603)), ('A', 425, u'LEU', 0.7816946643550826, (140.74899999999997, 155.565, 131.547)), ('A', 427, u'ASP', 0.8310327918936686, (144.15200000000002, 157.63899999999998, 136.905)), ('A', 434, u'ILE', 0.7911397279852499, (146.39800000000002, 145.35500000000002, 124.19)), ('A', 442, u'ASP', 0.8622035691527792, (140.11299999999997, 147.907, 108.351)), ('A', 444, u'LYS', 0.8448948541580062, (140.61899999999997, 149.997, 102.274)), ('A', 445, u'VAL', 0.8621404336491976, (141.303, 151.537, 98.915)), ('A', 458, u'LYS', 0.8377207847975223, (131.55100000000002, 170.961, 125.059)), ('A', 462, u'LYS', 0.8646091134081809, (134.911, 161.148, 132.816)), ('A', 490, u'PHE', 0.8392277323606235, (129.42200000000003, 168.23299999999998, 113.256)), ('A', 495, u'TYR', 0.8616645183650948, (139.42200000000003, 158.27499999999998, 109.80199999999999)), ('A', 503, u'VAL', 0.8470740162336459, (152.277, 153.47899999999998, 110.111)), ('A', 511, u'VAL', 0.8041218088378158, (141.154, 145.805, 123.543)), ('A', 513, u'LEU', 0.7521452596430208, (140.873, 144.601, 129.942)), ('A', 518, u'LEU', 0.7687845548455429, (136.796, 143.55200000000002, 145.568)), ('A', 519, u'HIS', 0.7475754179992214, (136.20299999999997, 141.348, 148.624)), ('A', 522, u'ALA', 0.8473515102998247, (135.844, 135.96200000000002, 142.44)), ('A', 524, u'VAL', 0.8272315290739245, (136.79899999999998, 134.859, 137.138)), ('A', 529, u'LYS', 0.8301348713009731, (144.39100000000002, 123.287, 139.23899999999998)), ('A', 538, u'CYS', 0.8328964439109622, (151.123, 124.45100000000001, 158.202)), ('A', 543, u'PHE', 0.84130621899171, (141.16299999999998, 129.944, 148.42000000000002)), ('A', 552, u'LEU', 0.7991501431734822, (143.485, 125.16799999999999, 158.698)), ('A', 556, u'ASN', 0.8593216767700045, (132.395, 125.666, 164.725)), ('A', 573, u'THR', 0.8272398558525961, (141.295, 136.92100000000002, 157.823)), ('A', 574, u'ASP', 0.8434362501171143, (139.817, 134.677, 160.48000000000002)), ('A', 582, u'LEU', 0.8541994517731784, (130.834, 124.736, 151.255)), ('A', 590, u'CYS', 0.8205153349478661, (151.695, 128.83200000000002, 162.253)), ('A', 599, u'THR', 0.8288993522349263, (173.88700000000003, 129.447, 180.21699999999998)), ('A', 614, u'ASP', 0.781705810481378, (155.883, 130.17299999999997, 172.721)), ('A', 641, u'ASN', 0.7791884308777539, (165.915, 115.644, 178.27499999999998)), ('A', 657, u'ASN', 0.8188889103639824, (161.317, 118.337, 191.941)), ('A', 661, u'GLU', 0.8565126134702483, (166.883, 129.781, 195.48100000000002)), ('A', 666, u'ILE', 0.760054673050055, (163.084, 131.437, 183.23999999999998)), ('A', 676, u'THR', 0.850480871101936, (176.085, 118.383, 190.472)), ('A', 689, u'SER', 0.7824426261417486, (178.751, 115.38799999999999, 187.148)), ('A', 692, u'ILE', 0.8370140417313803, (172.071, 122.44200000000001, 183.959)), ('A', 702, u'GLU', 0.8533065261307085, (159.777, 128.499, 206.60399999999998)), ('A', 712, u'ILE', 0.7850195426152811, (157.59, 137.21899999999997, 224.7)), ('A', 714, u'ILE', 0.7813619209249232, (163.664, 139.365, 224.24699999999999)), ('A', 720, u'ILE', 0.7766081793506187, (176.728, 145.848, 214.786)), ('A', 728, u'PRO', 0.7943515279439812, (174.11499999999998, 156.612, 190.641)), ('A', 729, u'VAL', 0.7304359838741372, (174.265, 160.37800000000001, 190.708)), ('A', 736, u'VAL', 0.6690766506044681, (176.416, 166.22299999999998, 169.653)), ('A', 738, u'CYS', 0.6871248596089173, (173.39200000000002, 168.51, 164.86800000000002)), ('A', 742, u'ILE', 0.7858718618712204, (174.859, 164.70299999999997, 159.55700000000002)), ('A', 753, u'LEU', 0.7640903841503939, (169.236, 170.95000000000002, 156.085)), ('A', 763, u'LEU', 0.7575632974646911, (168.32200000000003, 168.695, 169.375)), ('A', 781, u'VAL', 0.7246215972009441, (174.091, 165.3, 196.606)), ('A', 797, u'PHE', 0.7870682986530363, (187.31, 158.14499999999998, 218.95100000000002)), ('A', 800, u'PHE', 0.8325823867355063, (186.288, 153.333, 216.85800000000003)), ('A', 805, u'ILE', 0.7762537358405709, (187.092, 155.895, 205.39600000000002)), ('A', 811, u'LYS', 0.8015481812281265, (198.306, 160.43, 197.985)), ('A', 818, u'ILE', 0.783100360543441, (187.74099999999999, 152.45800000000003, 200.415)), ('A', 822, u'LEU', 0.7378706992899264, (185.69299999999998, 152.023, 194.30100000000002)), ('A', 854, u'LYS', 0.5755545151191982, (183.48800000000003, 158.64299999999997, 167.107)), ('A', 864, u'LEU', 0.8380428971428434, (182.18800000000002, 171.285, 186.98600000000002)), ('A', 870, u'ILE', 0.7956286399292903, (184.127, 165.64, 195.533)), ('A', 877, u'LEU', 0.7373820529947105, (180.76299999999998, 165.515, 205.76999999999998)), ('A', 881, u'THR', 0.7327338131835456, (179.721, 163.313, 211.44899999999998)), ('A', 896, u'ILE', 0.7681376513766166, (181.04899999999998, 166.026, 221.412)), ('A', 923, u'ILE', 0.7669357165933569, (180.829, 147.66299999999998, 220.253)), ('A', 996, u'LEU', 0.8099467160600964, (171.001, 160.29, 153.80200000000002)), ('A', 1005, u'GLN', 0.8128759924177072, (166.33800000000002, 162.27399999999997, 167.093)), ('A', 1017, u'GLU', 0.795065918383229, (166.02200000000002, 158.136, 185.64299999999997)), ('A', 1037, u'SER', 0.7758346420324939, (166.493, 158.16899999999998, 210.524)), ('A', 1049, u'LEU', 0.7402083246876928, (172.60999999999999, 154.414, 214.20899999999997)), ('A', 1060, u'VAL', 0.7410995756937455, (177.77899999999997, 157.863, 195.917)), ('A', 1072, u'GLU', 0.793481841221167, (166.637, 136.078, 222.108)), ('A', 1087, u'ALA', 0.7712029802746905, (146.661, 147.87800000000001, 238.401)), ('A', 1094, u'VAL', 0.7655994828606598, (157.627, 145.124, 229.787)), ('A', 1096, u'VAL', 0.7902987047070046, (158.67399999999998, 139.399, 232.316)), ('A', 1115, u'ILE', 0.8099242335005568, (159.606, 146.089, 239.972)), ('A', 1137, u'VAL', 0.7841648686189587, (155.424, 146.189, 243.772)), ('A', 1301, u'NAG', 0.7008004561005212, (181.83200000000002, 112.56400000000001, 158.631)), ('A', 1302, u'NAG', 0.7991461401541802, (202.594, 143.436, 168.944)), ('A', 1304, u'NAG', 0.7171475809773722, (151.829, 119.702, 174.105)), ('A', 1305, u'NAG', 0.6376834316406133, (160.39100000000002, 113.147, 192.517)), ('A', 1306, u'NAG', 0.8095047376196582, (146.572, 131.94299999999998, 228.033)), ('A', 1307, u'NAG', 0.7569520755883561, (159.895, 129.83100000000002, 221.83)), ('A', 1309, u'NAG', 0.7741514231027335, (133.512, 120.651, 143.509)), ('B', 2, u'VAL', 0.7285093360720012, (149.36800000000002, 168.21399999999997, 106.56400000000001)), ('B', 3, u'GLN', 0.7597104264832593, (148.5, 165.46800000000002, 103.932)), ('B', 13, u'GLN', 0.7540639630835495, (143.44, 189.36200000000002, 84.21100000000001)), ('B', 17, u'SER', 0.7815021023199387, (137.67899999999997, 182.77599999999998, 85.91300000000001)), ('B', 34, u'MET', 0.8303379119240232, (136.73999999999998, 171.282, 104.063)), ('B', 54, u'ARG', 0.8476276348907903, (127.651, 165.283, 104.82499999999999)), ('B', 59, u'TYR', 0.8536465116580222, (128.602, 178.4, 102.422)), ('B', 62, u'ASP', 0.8088394079653567, (130.032, 187.63, 102.02)), ('B', 74, u'ASN', 0.853626842744783, (134.5, 162.04299999999998, 96.703)), ('B', 99, u'ASP', 0.8218894139843241, (136.811, 174.063, 107.91400000000002)), ('B', 100, u'PRO', 0.8621108018095494, (137.695, 173.725, 111.65499999999999)), ('B', 105, u'TYR', 0.8623726219273543, (143.661, 169.254, 115.955)), ('B', 108, u'TYR', 0.8094579005242318, (149.23399999999998, 172.08200000000002, 109.239)), ('B', 111, u'GLN', 0.8530026601284219, (152.364, 175.731, 100.664)), ('B', 119, u'SER', 0.7392554540756736, (143.71699999999998, 195.15200000000002, 85.938)), ('C', 27, u'ALA', 0.8302374305120926, (100.821, 161.251, 154.894)), ('C', 44, u'ARG', 0.8547240764379829, (132.2, 139.23899999999998, 161.798)), ('C', 104, u'TRP', 0.7954233288389906, (108.43, 147.894, 140.30200000000002)), ('C', 119, u'ILE', 0.7332163540303417, (111.05499999999999, 143.58, 138.12800000000001)), ('C', 134, u'GLN', 0.6739026633748659, (107.007, 150.92800000000003, 126.482)), ('C', 142, u'GLY', 0.671026633556143, (94.923, 143.035, 136.333)), ('C', 166, u'CYS', 0.7593159300553484, (116.80499999999999, 144.383, 125.254)), ('C', 190, u'ARG', 0.8132806920444707, (108.563, 143.345, 153.622)), ('C', 198, u'ASP', 0.7833639959695538, (129.41899999999998, 150.70899999999997, 139.863)), ('C', 213, u'VAL', 0.764063802117685, (97.785, 148.201, 160.463)), ('C', 214, u'ARG', 0.7149532375464627, (97.84400000000001, 151.901, 161.38000000000002)), ('C', 235, u'ILE', 0.8408248118385372, (118.164, 155.192, 137.227)), ('C', 267, u'VAL', 0.7476160145587685, (109.312, 155.363, 150.648)), ('C', 277, u'LEU', 0.7895359887307356, (127.036, 148.354, 163.853)), ('C', 281, u'GLU', 0.8580747169595087, (128.238, 136.02700000000002, 168.553)), ('C', 285, u'ILE', 0.8297022222523358, (123.595, 142.683, 163.374)), ('C', 301, u'CYS', 0.81366987632233, (130.569, 156.45100000000002, 167.948)), ('C', 308, u'VAL', 0.8500048086523279, (128.58100000000002, 155.641, 177.901)), ('C', 309, u'GLU', 0.8717966708129847, (130.029, 156.46200000000002, 181.29399999999998)), ('C', 319, u'ARG', 0.7882255863360219, (134.24099999999999, 176.04899999999998, 162.942)), ('C', 325, u'SER', 0.8718925843130523, (133.718, 186.752, 149.83800000000002)), ('C', 326, u'ILE', 0.8239880447934896, (135.70999999999998, 189.88200000000003, 149.155)), ('C', 333, u'THR', 0.8469968770958365, (141.74499999999998, 199.405, 133.439)), ('C', 336, u'CYS', 0.8350771779052164, (148.47899999999998, 194.147, 129.122)), ('C', 340, u'GLU', 0.7841888361808287, (152.64499999999998, 193.819, 120.861)), ('C', 346, u'ARG', 0.8325838949079576, (159.463, 190.80800000000002, 113.44800000000001)), ('C', 350, u'VAL', 0.7926735666378815, (167.47899999999998, 183.518, 119.16499999999999)), ('C', 356, u'LYS', 0.8170127536199595, (159.792, 193.477, 127.303)), ('C', 374, u'PHE', 0.8661129323137435, (149.281, 177.44299999999998, 119.406)), ('C', 395, u'VAL', 0.7766063140607392, (155.71399999999997, 189.76899999999998, 133.835)), ('C', 402, u'ILE', 0.7865280069125888, (163.95200000000003, 178.90200000000002, 116.584)), ('C', 410, u'ILE', 0.7171660365251643, (163.07, 176.02700000000002, 125.897)), ('C', 418, u'ILE', 0.7309029303639055, (169.889, 176.79, 122.396)), ('C', 423, u'TYR', 0.799856159738815, (168.7, 181.291, 125.601)), ('C', 442, u'ASP', 0.8714194095060567, (159.539, 183.583, 108.353)), ('C', 444, u'LYS', 0.8347314968513623, (161.106, 182.089, 102.27499999999999)), ('C', 458, u'LYS', 0.8683784002132645, (183.796, 179.455, 125.06)), ('C', 471, u'GLU', 0.8536479310774748, (184.435, 187.525, 117.927)), ('C', 480, u'CYS', 0.8272091482800741, (192.575, 183.86700000000002, 114.727)), ('C', 495, u'TYR', 0.8552916544841984, (168.864, 178.98800000000003, 109.798)), ('C', 499, u'PRO', 0.8586303398145023, (158.83800000000002, 176.708, 102.83)), ('C', 503, u'VAL', 0.8542406933656753, (158.29299999999998, 170.254, 110.117)), ('C', 518, u'LEU', 0.7687084852961311, (157.424, 188.61399999999998, 145.589)), ('C', 519, u'HIS', 0.7437930151665192, (155.816, 190.24099999999999, 148.63899999999998)), ('C', 524, u'VAL', 0.8469615653202709, (149.907, 192.95800000000003, 137.141)), ('C', 529, u'LYS', 0.8329184392984189, (136.08100000000002, 192.17499999999998, 139.237)), ('C', 549, u'THR', 0.8659285006922292, (139.813, 183.42200000000003, 155.26299999999998)), ('C', 552, u'LEU', 0.7924262611481283, (138.17499999999998, 192.02100000000002, 158.697)), ('C', 557, u'LYS', 0.8333493569944064, (147.792, 201.046, 163.71099999999998)), ('C', 564, u'GLN', 0.8540401347018376, (151.475, 197.07399999999998, 151.91)), ('C', 570, u'ALA', 0.8587479692476159, (154.445, 184.068, 163.866)), ('C', 571, u'ASP', 0.8384264361942619, (155.176, 185.726, 160.554)), ('C', 582, u'LEU', 0.8764519436925828, (144.122, 203.192, 151.254)), ('C', 590, u'CYS', 0.7915244638402218, (137.242, 183.078, 162.253)), ('C', 597, u'VAL', 0.7764515336289837, (129.5, 166.441, 175.45700000000002)), ('C', 607, u'GLN', 0.8815986134814258, (119.927, 163.853, 178.32600000000002)), ('C', 610, u'VAL', 0.8209290835696118, (127.114, 170.496, 175.02800000000002)), ('C', 614, u'ASP', 0.7922479028290864, (136.311, 178.782, 172.721)), ('C', 641, u'ASN', 0.772145663996294, (118.71100000000001, 177.35800000000003, 178.27499999999998)), ('C', 649, u'CYS', 0.7958919131655036, (129.33800000000002, 178.364, 175.759)), ('C', 657, u'ASN', 0.8416667076117378, (123.348, 179.99800000000002, 191.94)), ('C', 666, u'ILE', 0.7547112001544275, (133.805, 171.912, 183.23999999999998)), ('C', 672, u'ALA', 0.8186011847095789, (127.807, 170.005, 186.346)), ('C', 689, u'SER', 0.796339772327658, (112.07199999999999, 166.38000000000002, 187.147)), ('C', 714, u'ILE', 0.8002765412334008, (140.37800000000001, 167.447, 224.248)), ('C', 720, u'ILE', 0.7705558799942954, (139.459, 152.89200000000002, 214.786)), ('C', 738, u'CYS', 0.7512387945234005, (160.753, 144.442, 164.875)), ('C', 753, u'LEU', 0.8180500790200839, (164.94899999999998, 146.82800000000003, 156.085)), ('C', 767, u'LEU', 0.7673370191114759, (161.206, 146.585, 175.01399999999998)), ('C', 774, u'GLN', 0.8076119331255471, (158.67, 144.698, 185.502)), ('C', 782, u'PHE', 0.7833838390455397, (156.875, 141.959, 197.89000000000001)), ('C', 785, u'VAL', 0.7754265445655693, (160.86700000000002, 139.17399999999998, 204.04899999999998)), ('C', 788, u'ILE', 0.8247888134352519, (158.195, 132.686, 205.097)), ('C', 811, u'LYS', 0.8190513925106089, (141.303, 126.91700000000002, 197.983)), ('C', 827, u'THR', 0.6989908479211754, (139.365, 142.54, 184.372)), ('C', 854, u'LYS', 0.6435128853045853, (147.157, 140.634, 167.108)), ('C', 896, u'ILE', 0.780563749795558, (154.76899999999998, 139.05100000000002, 221.41899999999998)), ('C', 922, u'LEU', 0.8603518221196924, (135.9, 148.02700000000002, 222.33100000000002)), ('C', 923, u'ILE', 0.8101580971826393, (138.983, 148.436, 220.253)), ('C', 938, u'LEU', 0.7869629341777147, (135.06, 146.172, 197.559)), ('C', 942, u'ALA', 0.8087841567781601, (133.82200000000003, 147.98000000000002, 190.942)), ('C', 945, u'LEU', 0.7885570551833765, (140.10299999999998, 149.359, 191.848)), ('C', 959, u'LEU', 0.8099433391544227, (148.74099999999999, 147.80100000000002, 171.568)), ('C', 979, u'ASP', 0.7848904421813698, (148.845, 141.917, 147.455)), ('C', 993, u'ILE', 0.7782456347996879, (157.023, 148.055, 149.94299999999998)), ('C', 996, u'LEU', 0.753278420091746, (154.835, 150.632, 153.805)), ('C', 1033, u'VAL', 0.7783286798625064, (153.798, 147.329, 207.208)), ('C', 1037, u'SER', 0.7804000560256438, (155.251, 155.598, 210.52100000000002)), ('C', 1040, u'VAL', 0.8070253905011525, (151.485, 162.447, 208.64399999999998)), ('C', 1050, u'MET', 0.7662178836978221, (149.641, 149.373, 211.702)), ('C', 1062, u'PHE', 0.7918305716099341, (147.236, 148.265, 201.684)), ('C', 1063, u'LEU', 0.7549431019119817, (144.836, 148.272, 204.55200000000002)), ('C', 1081, u'ILE', 0.7668244205161191, (150.467, 176.732, 237.535)), ('C', 1094, u'VAL', 0.7389105513647529, (148.383, 169.797, 229.788)), ('C', 1123, u'SER', 0.8108552949047146, (161.441, 176.29, 236.618)), ('C', 1137, u'VAL', 0.8460448356109853, (150.40800000000002, 171.17, 243.77299999999997)), ('C', 1147, u'SER', 0.7634897295058406, (152.024, 158.991, 259.4359999999999)), ('C', 1301, u'NAG', 0.7391604014402023, (108.074, 165.122, 158.61399999999998)), ('C', 1302, u'NAG', 0.747676209316678, (124.392, 131.69, 168.937)), ('C', 1304, u'NAG', 0.7889713188392662, (129.267, 187.52800000000002, 174.106)), ('C', 1305, u'NAG', 0.6806820402643357, (119.332, 183.40800000000002, 192.52200000000002)), ('C', 1306, u'NAG', 0.8347354019798895, (142.49800000000002, 185.963, 228.034)), ('C', 1307, u'NAG', 0.7915638385246493, (134.007, 175.484, 221.83200000000002)), ('C', 1309, u'NAG', 0.781626846419777, (139.24099999999999, 202.91299999999998, 143.506)), ('E', 3, u'GLN', 0.6916815963399023, (170.555, 167.52700000000002, 103.923)), ('E', 4, u'LEU', 0.8167023979075593, (173.35500000000002, 167.315, 101.333)), ('E', 13, u'GLN', 0.754666954102202, (193.791, 159.977, 84.212)), ('E', 34, u'MET', 0.8030724313015674, (181.511, 174.80800000000002, 104.089)), ('E', 38, u'ARG', 0.858109899282263, (188.242, 163.36, 101.68199999999999)), ('E', 39, u'GLN', 0.8135289991921595, (188.997, 159.89000000000001, 102.915)), ('E', 54, u'ARG', 0.8519965041576819, (180.872, 185.65800000000002, 104.918)), ('E', 59, u'TYR', 0.8446923498546431, (191.727, 178.296, 102.44100000000002)), ('E', 62, u'ASP', 0.8391443270215141, (198.989, 172.44, 102.034)), ('E', 83, u'MET', 0.7894684594235392, (190.565, 169.95000000000002, 91.208)), ('E', 96, u'CYS', 0.840159778087782, (180.48000000000002, 167.859, 101.31400000000001)), ('E', 99, u'ASP', 0.8087102809669567, (183.874, 173.36100000000002, 107.935)), ('E', 108, u'TYR', 0.803867332269265, (175.83700000000002, 163.565, 109.257)), ('E', 111, u'GLN', 0.8401054321635097, (177.35200000000003, 159.18200000000002, 100.561)), ('E', 119, u'SER', 0.676682884113254, (198.668, 156.83800000000002, 85.94900000000001)), ('D', 35, u'GLY', 0.8026602468530901, (173.324, 202.564, 156.917)), ('D', 36, u'VAL', 0.8021091578286965, (170.39700000000002, 200.511, 158.20999999999998)), ('D', 41, u'LYS', 0.8511943484394834, (157.631, 196.606, 152.689)), ('D', 44, u'ARG', 0.8655291996174314, (156.004, 194.758, 161.796)), ('D', 58, u'PHE', 0.8306738959179608, (178.98600000000002, 198.5, 162.017)), ('D', 69, u'HIS', 0.7173903281284196, (189.871, 222.439, 146.929)), ('D', 99, u'ASN', 0.7915233305960123, (173.48800000000003, 221.818, 148.38100000000003)), ('D', 117, u'LEU', 0.7592466934665617, (172.347, 205.71699999999998, 134.553)), ('D', 128, u'ILE', 0.7686241583708906, (166.42600000000002, 209.915, 135.74099999999999)), ('D', 134, u'GLN', 0.7424564181042992, (178.70499999999998, 210.678, 126.46100000000001)), ('D', 142, u'GLY', 0.7028844010355654, (177.89700000000002, 225.095, 136.31)), ('D', 166, u'CYS', 0.7883465414531742, (168.099, 205.542, 125.27)), ('D', 190, u'ARG', 0.8274335891766195, (171.37800000000001, 213.171, 153.622)), ('D', 197, u'ILE', 0.8138099018864713, (168.906, 193.425, 142.664)), ('D', 198, u'ASP', 0.816724006799285, (167.289, 191.434, 139.88700000000003)), ('D', 214, u'ARG', 0.7315362334031258, (184.14, 218.135, 161.399)), ('D', 224, u'GLU', 0.8440168373371453, (163.17299999999997, 204.25, 153.935)), ('D', 231, u'ILE', 0.7981467875626214, (166.094, 199.349, 134.57899999999998)), ('D', 235, u'ILE', 0.8164278923824942, (176.836, 198.95000000000002, 137.221)), ('D', 267, u'VAL', 0.7703395186506888, (181.411, 206.51399999999998, 150.647)), ('D', 277, u'LEU', 0.81089891491334, (166.477, 194.67399999999998, 163.85700000000003)), ('D', 291, u'CYS', 0.8212598617793792, (175.696, 189.803, 164.35000000000002)), ('D', 301, u'CYS', 0.8035419534170798, (171.722, 187.569, 167.95100000000002)), ('D', 315, u'THR', 0.8236190890606109, (177.11899999999997, 180.77399999999997, 170.108)), ('D', 318, u'PHE', 0.8638098894078847, (185.38600000000002, 176.523, 165.80800000000002)), ('D', 319, u'ARG', 0.8145842845421789, (186.853, 174.586, 162.941)), ('D', 324, u'GLU', 0.8443437151437037, (197.25, 172.731, 151.88800000000003)), ('D', 326, u'ILE', 0.8151954251528918, (198.105, 166.399, 149.153)), ('D', 340, u'GLU', 0.8055641881853413, (192.89100000000002, 150.055, 120.766)), ('D', 346, u'ARG', 0.8032973144563782, (187.006, 145.339, 113.41400000000002)), ('D', 350, u'VAL', 0.8069257492786787, (176.702, 142.062, 119.16999999999999)), ('D', 351, u'TYR', 0.8733075405190419, (175.74699999999999, 138.464, 119.85799999999999)), ('D', 357, u'ARG', 0.846468654086948, (190.634, 144.662, 130.69899999999998)), ('D', 358, u'ILE', 0.8231875032050062, (192.295, 147.971, 131.383)), ('D', 365, u'TYR', 0.8157606636943148, (188.73999999999998, 160.394, 129.945)), ('D', 368, u'LEU', 0.7960853878274123, (186.869, 160.691, 124.93700000000001)), ('D', 387, u'LEU', 0.7621709002310106, (185.95600000000002, 160.845, 135.48700000000002)), ('D', 390, u'LEU', 0.822265002731361, (188.47299999999998, 159.11299999999997, 139.895)), ('D', 402, u'ILE', 0.7743904574399982, (174.46200000000002, 147.437, 116.574)), ('D', 410, u'ILE', 0.6866396248958818, (172.415, 149.62800000000001, 125.883)), ('D', 417, u'LYS', 0.8227057238851742, (166.198, 142.142, 121.589)), ('D', 418, u'ILE', 0.7879509513061639, (169.66299999999998, 143.343, 122.386)), ('D', 423, u'TYR', 0.8348989252694762, (174.165, 142.118, 125.6)), ('D', 425, u'LEU', 0.8123042293444469, (173.77399999999997, 145.617, 131.545)), ('D', 429, u'PHE', 0.8577459722202249, (175.52700000000002, 149.341, 136.35700000000003)), ('D', 442, u'ASP', 0.8463131111167077, (180.71899999999997, 148.91299999999998, 108.37299999999999)), ('D', 444, u'LYS', 0.8442357175532718, (178.64899999999997, 148.32500000000002, 102.27799999999999)), ('D', 449, u'TYR', 0.869660070087195, (175.835, 140.612, 106.452)), ('D', 458, u'LYS', 0.8236733662106809, (165.04, 129.964, 125.061)), ('D', 462, u'LYS', 0.8369789299197653, (171.85700000000003, 137.77299999999997, 132.809)), ('D', 465, u'GLU', 0.8289002193685319, (176.55100000000002, 136.984, 129.636)), ('D', 480, u'CYS', 0.8347153009136742, (164.466, 120.16199999999999, 114.721)), ('D', 503, u'VAL', 0.8780757669014969, (169.829, 156.665, 110.09100000000001)), ('D', 518, u'LEU', 0.7908503766874171, (186.154, 148.196, 145.567)), ('D', 519, u'HIS', 0.761200352758541, (188.35800000000003, 148.79, 148.623)), ('D', 524, u'VAL', 0.828073380782832, (193.668, 152.564, 137.134)), ('D', 529, u'LYS', 0.8267323856629587, (199.912, 164.92800000000003, 139.23899999999998)), ('D', 538, u'CYS', 0.8408171008118641, (195.525, 170.17299999999997, 158.201)), ('D', 543, u'PHE', 0.8581251758784608, (195.751, 158.796, 148.41899999999998)), ('D', 544, u'ASN', 0.8480157750038121, (195.354, 156.70399999999998, 145.28)), ('D', 552, u'LEU', 0.7876726015096136, (198.724, 163.196, 158.698)), ('D', 554, u'GLU', 0.8580106133939378, (203.73999999999998, 158.915, 160.865)), ('D', 571, u'ASP', 0.8313439711944859, (184.771, 151.617, 160.55)), ('D', 582, u'LEU', 0.8755712305627397, (205.423, 152.45600000000002, 151.255)), ('D', 590, u'CYS', 0.8479995771518608, (191.446, 168.47299999999998, 162.253)), ('D', 597, u'VAL', 0.7865887477106608, (180.911, 183.493, 175.46200000000002)), ('D', 603, u'ASN', 0.888269804982522, (173.53, 195.869, 182.875)), ('D', 614, u'ASP', 0.7731238199253914, (188.19299999999998, 171.42800000000003, 172.722)), ('D', 620, u'VAL', 0.7709528292550162, (193.265, 179.277, 167.904)), ('D', 646, u'ARG', 0.8043072189275807, (191.007, 171.371, 180.77299999999997)), ('D', 657, u'ASN', 0.8874503276403576, (195.724, 182.047, 191.941)), ('D', 658, u'ASN', 0.882157893856569, (193.197, 183.207, 194.64399999999998)), ('D', 661, u'GLU', 0.8531953511239772, (183.03, 181.156, 195.48100000000002)), ('D', 666, u'ILE', 0.7606955694009422, (183.497, 177.032, 183.23899999999998)), ('D', 689, u'SER', 0.8246184185238973, (189.56, 198.63, 187.14399999999998)), ('D', 692, u'ILE', 0.8051492695091046, (186.795, 189.314, 183.961)), ('D', 694, u'ALA', 0.8247797949751375, (189.29399999999998, 183.129, 186.085)), ('D', 697, u'MET', 0.8331970733925425, (186.536, 177.771, 192.991)), ('D', 712, u'ILE', 0.7602992555351253, (181.251, 169.372, 224.697)), ('D', 714, u'ILE', 0.761251849081259, (176.344, 173.567, 224.248)), ('D', 729, u'VAL', 0.7423704836948034, (152.842, 172.24499999999998, 190.708)), ('D', 736, u'VAL', 0.7195663770923985, (146.71899999999997, 171.192, 169.651)), ('D', 738, u'CYS', 0.7571243974532977, (146.23299999999998, 167.43, 164.875)), ('D', 742, u'ILE', 0.76682977139906, (148.80100000000002, 170.595, 159.559)), ('D', 753, u'LEU', 0.8450006456878064, (146.2, 162.60299999999998, 156.085)), ('D', 781, u'VAL', 0.7772406843118538, (148.666, 169.635, 196.606)), ('D', 854, u'LYS', 0.6406376886515743, (149.732, 181.106, 167.10899999999998)), ('D', 864, u'LEU', 0.7864362640612702, (139.435, 173.654, 186.98600000000002)), ('D', 876, u'ALA', 0.7885573339462917, (141.905, 177.186, 205.277)), ('D', 877, u'LEU', 0.7641904797843807, (145.14499999999998, 175.305, 205.771)), ('D', 881, u'THR', 0.7814199139380411, (147.572, 175.505, 211.45000000000002)), ('D', 896, u'ILE', 0.7870850933178729, (144.554, 175.30700000000002, 221.42100000000002)), ('D', 923, u'ILE', 0.7391598739997696, (160.575, 184.286, 220.252)), ('D', 931, u'ILE', 0.7753048105427292, (158.534, 187.6, 208.171)), ('D', 938, u'LEU', 0.7357670383025092, (160.575, 188.819, 197.559)), ('D', 959, u'LEU', 0.7322438401379855, (155.148, 176.151, 171.568)), ('D', 962, u'LEU', 0.7587839833251112, (155.98600000000002, 174.39600000000002, 166.89800000000002)), ('D', 965, u'GLN', 0.81959386226852, (158.006, 175.12800000000001, 161.912)), ('D', 990, u'GLU', 0.8134010039726768, (149.41, 166.637, 145.965)), ('D', 1005, u'GLN', 0.7528433455493839, (155.168, 164.44, 167.097)), ('D', 1012, u'LEU', 0.7812966843481851, (155.071, 164.156, 177.88600000000002)), ('D', 1013, u'ILE', 0.8099386293038092, (158.555, 164.161, 179.314)), ('D', 1030, u'SER', 0.750595417373385, (151.186, 166.809, 204.52)), ('D', 1049, u'LEU', 0.7257568783970582, (158.833, 173.79399999999998, 214.20899999999997)), ('D', 1060, u'VAL', 0.6859441812446403, (153.26299999999998, 176.546, 195.916)), ('D', 1062, u'PHE', 0.7731039927364044, (156.30100000000002, 177.227, 201.684)), ('D', 1072, u'GLU', 0.7828421202328564, (177.70299999999997, 177.789, 222.108)), ('D', 1080, u'ALA', 0.8061943053316338, (178.809, 159.23299999999998, 233.906)), ('D', 1081, u'ILE', 0.8084688526454974, (179.339, 160.191, 237.536)), ('D', 1087, u'ALA', 0.7684982819234513, (177.46800000000002, 154.59, 238.4)), ('D', 1094, u'VAL', 0.7504351713483882, (174.372, 165.464, 229.788)), ('D', 1123, u'SER', 0.8190947589783769, (173.466, 150.912, 236.61599999999999)), ('D', 1126, u'CYS', 0.8042096220600363, (182.944, 152.89100000000002, 239.13899999999998)), ('D', 1301, u'NAG', 0.7208712920052952, (190.48100000000002, 202.71499999999997, 158.621)), ('D', 1302, u'NAG', 0.7981214454297886, (153.354, 205.255, 168.942)), ('D', 1304, u'NAG', 0.7314652323888695, (199.289, 173.157, 174.106)), ('D', 1305, u'NAG', 0.6417415232832946, (200.686, 183.82200000000003, 192.518)), ('D', 1306, u'NAG', 0.8186097466173489, (191.323, 162.505, 228.064)), ('D', 1307, u'NAG', 0.7774567016496592, (186.48700000000002, 175.07, 221.83200000000002)), ('D', 1309, u'NAG', 0.7905529273678809, (207.624, 156.817, 143.508)), ('F', 3, u'GLN', 0.7587757867904835, (161.324, 147.38600000000002, 103.93100000000001)), ('F', 4, u'LEU', 0.8260508697065252, (159.748, 145.077, 101.32799999999999)), ('F', 17, u'SER', 0.7671002185645839, (151.74499999999998, 129.36200000000002, 85.912)), ('F', 34, u'MET', 0.839373861905241, (162.17499999999998, 134.281, 104.082)), ('F', 54, u'ARG', 0.8398086669754709, (171.911, 129.425, 104.826)), ('F', 62, u'ASP', 0.8175631802422595, (151.36100000000002, 120.311, 102.023)), ('F', 89, u'GLU', 0.8058632774214118, (141.667, 127.45100000000001, 95.395)), ('F', 99, u'ASP', 0.7870404115492481, (159.73999999999998, 132.961, 107.932)), ('F', 105, u'TYR', 0.880745705072185, (160.42000000000002, 141.254, 115.952)), ('F', 108, u'TYR', 0.8342096740400637, (155.23499999999999, 144.71899999999997, 109.24300000000001)), ('F', 111, u'GLN', 0.8581874713398616, (150.502, 145.59, 100.65299999999999)), ('F', 119, u'SER', 0.6437911728212766, (138.01, 128.399, 85.94500000000001))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-22910/7kkl/Model_validation_1/validation_cootdata/molprobity_probe7kkl_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
